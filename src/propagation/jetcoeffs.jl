# DO NOT MODIFY THIS FILE BY HAND

# Methods of `TaylorIntegration._allocate_jetcoeffs!` and `TaylorIntegration.jetcoeffs!` generated by @taylorize for the functions 
# in src/propagation/asteroid_dynamical_models.jl

# To update the functions do the following:
# 1.- Update the corresponding function in src/propagation/asteroid_dynamical_models.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x, y = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x and y in this file 

# TaylorIntegration._allocate_jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph!
function TaylorIntegration._allocate_jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    X = Array{S}(undef, N)
    Y = Array{S}(undef, N)
    Z = Array{S}(undef, N)
    r_p2 = Array{S}(undef, N)
    r_p1d2 = Array{S}(undef, N)
    r_p3d2 = Array{S}(undef, N)
    r_p7d2 = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N)
    ui = Array{S}(undef, N - 1)
    vi = Array{S}(undef, N - 1)
    wi = Array{S}(undef, N - 1)
    U = Array{S}(undef, N)
    V = Array{S}(undef, N)
    W = Array{S}(undef, N)
    _4U_m_3X = Array{S}(undef, N)
    _4V_m_3Y = Array{S}(undef, N)
    _4W_m_3Z = Array{S}(undef, N)
    UU = Array{S}(undef, N)
    VV = Array{S}(undef, N)
    WW = Array{S}(undef, N)
    newtonian1b_Potential = Array{S}(undef, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N)
    newton_acc_Y = Array{S}(undef, N)
    newton_acc_Z = Array{S}(undef, N)
    v2 = Array{S}(undef, N)
    vi_dot_vj = Array{S}(undef, N)
    pn2 = Array{S}(undef, N)
    U_t_pn2 = Array{S}(undef, N)
    V_t_pn2 = Array{S}(undef, N)
    W_t_pn2 = Array{S}(undef, N)
    pn3 = Array{S}(undef, N)
    pNX_t_pn3 = Array{S}(undef, N)
    pNY_t_pn3 = Array{S}(undef, N)
    pNZ_t_pn3 = Array{S}(undef, N)
    _4ϕj = Array{S}(undef, N)
    ϕi_plus_4ϕj = Array{S}(undef, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N)
    ϕs_and_vs = Array{S}(undef, N)
    pn1t1_7 = Array{S}(undef, N)
    pNX_t_X = Array{S}(undef, N)
    pNY_t_Y = Array{S}(undef, N)
    pNZ_t_Z = Array{S}(undef, N)
    pn1 = Array{S}(undef, N)
    X_t_pn1 = Array{S}(undef, N)
    Y_t_pn1 = Array{S}(undef, N)
    Z_t_pn1 = Array{S}(undef, N)
    pntempX = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempY = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempZ = Taylor1(identity(constant_term(zero_q_1)), order)
    t31 = Array{S}(undef, N)
    t32 = Array{S}(undef, N)
    t33 = Array{S}(undef, N)
    r_sin_ϕ = Array{S}(undef, N)
    sin_ϕ = Array{S}(undef, N)
    ϕ = Array{S}(undef, N)
    cos_ϕ = Array{S}(undef, N)
    sin2_ϕ = Array{S}(undef, N)
    sin3_ϕ = Array{S}(undef, N)
    sin4_ϕ = Array{S}(undef, N)
    F_J2_x = Array{S}(undef, N)
    F_J2_y = Array{S}(undef, N)
    F_J2_z = Array{S}(undef, N)
    F_J2_x1 = Array{S}(undef, N)
    F_J2_y1 = Array{S}(undef, N)
    F_J2_z1 = Array{S}(undef, N)
    F_J2_x2 = Array{S}(undef, N)
    F_J2_y2 = Array{S}(undef, N)
    F_J2_z2 = Array{S}(undef, N)
    temp_accX_i = Array{S}(undef, N)
    temp_accY_i = Array{S}(undef, N)
    temp_accZ_i = Array{S}(undef, N)
    P_2_sin_ϕ = Array{S}(undef, N)
    ∂P_2_sin_ϕ = Array{S}(undef, N)
    P_3_sin_ϕ = Array{S}(undef, N)
    ∂P_3_sin_ϕ = Array{S}(undef, N)
    m_c_ϕ_∂P_2 = Array{S}(undef, N)
    m_c_ϕ_∂P_3 = Array{S}(undef, N)
    Λ2j_div_r4 = Array{S}(undef, N)
    Λ3j_div_r5 = Array{S}(undef, N)
    F_J_ξ = Array{S}(undef, N)
    F_J_η = Array{S}(undef, N)
    F_J_ζ = Array{S}(undef, N)
    F_J2_ξ = Array{S}(undef, N)
    F_J2_η = Array{S}(undef, N)
    F_J2_ζ = Array{S}(undef, N)
    F_J3_ξ = Array{S}(undef, N)
    F_J3_η = Array{S}(undef, N)
    F_J3_ζ = Array{S}(undef, N)
    ξx = Array{S}(undef, N)
    ξy = Array{S}(undef, N)
    ξz = Array{S}(undef, N)
    ηx = Array{S}(undef, N)
    ηy = Array{S}(undef, N)
    ηz = Array{S}(undef, N)
    ηx1 = Array{S}(undef, N)
    ηy1 = Array{S}(undef, N)
    ηz1 = Array{S}(undef, N)
    ηx2 = Array{S}(undef, N)
    ηy2 = Array{S}(undef, N)
    ηz2 = Array{S}(undef, N)
    ζx = Array{S}(undef, N)
    ζy = Array{S}(undef, N)
    ζz = Array{S}(undef, N)
    ζx1 = Array{S}(undef, N)
    ζy1 = Array{S}(undef, N)
    ζz1 = Array{S}(undef, N)
    ζx2 = Array{S}(undef, N)
    ζy2 = Array{S}(undef, N)
    ζz2 = Array{S}(undef, N)
    accX = Taylor1(identity(constant_term(zero_q_1)), order)
    accY = Taylor1(identity(constant_term(zero_q_1)), order)
    accZ = Taylor1(identity(constant_term(zero_q_1)), order)
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    dq[1] = Taylor1(identity(constant_term(q[4])), order)
    dq[2] = Taylor1(identity(constant_term(q[5])), order)
    dq[3] = Taylor1(identity(constant_term(q[6])), order)
    newtonianNb_Potential[N] = Taylor1(identity(constant_term(zero_q_1)), order)
    tmp686 = Array{Taylor1{_S}}(undef, size(dq))
    tmp686 .= Taylor1(zero(_S), order)
    tmp688 = Array{Taylor1{_S}}(undef, size(ui))
    tmp688 .= Taylor1(zero(_S), order)
    tmp691 = Array{Taylor1{_S}}(undef, size(dq))
    tmp691 .= Taylor1(zero(_S), order)
    tmp693 = Array{Taylor1{_S}}(undef, size(vi))
    tmp693 .= Taylor1(zero(_S), order)
    tmp696 = Array{Taylor1{_S}}(undef, size(dq))
    tmp696 .= Taylor1(zero(_S), order)
    tmp698 = Array{Taylor1{_S}}(undef, size(wi))
    tmp698 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp706 = Array{Taylor1{_S}}(undef, size(UU))
    tmp706 .= Taylor1(zero(_S), order)
    tmp709 = Array{Taylor1{_S}}(undef, size(X))
    tmp709 .= Taylor1(zero(_S), order)
    tmp711 = Array{Taylor1{_S}}(undef, size(Y))
    tmp711 .= Taylor1(zero(_S), order)
    tmp712 = Array{Taylor1{_S}}(undef, size(tmp709))
    tmp712 .= Taylor1(zero(_S), order)
    tmp714 = Array{Taylor1{_S}}(undef, size(Z))
    tmp714 .= Taylor1(zero(_S), order)
    tmp722 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp722 .= Taylor1(zero(_S), order)
    tmp723 = Array{Taylor1{_S}}(undef, size(tmp722))
    tmp723 .= Taylor1(zero(_S), order)
    tmp818 = Array{Taylor1{_S}}(undef, size(ui))
    tmp818 .= Taylor1(zero(_S), order)
    tmp820 = Array{Taylor1{_S}}(undef, size(vi))
    tmp820 .= Taylor1(zero(_S), order)
    tmp821 = Array{Taylor1{_S}}(undef, size(tmp818))
    tmp821 .= Taylor1(zero(_S), order)
    tmp823 = Array{Taylor1{_S}}(undef, size(wi))
    tmp823 .= Taylor1(zero(_S), order)
    tmp734 = Array{Taylor1{_S}}(undef, size(X))
    tmp734 .= Taylor1(zero(_S), order)
    tmp736 = Array{Taylor1{_S}}(undef, size(Y))
    tmp736 .= Taylor1(zero(_S), order)
    tmp738 = Array{Taylor1{_S}}(undef, size(Z))
    tmp738 .= Taylor1(zero(_S), order)
    tmp740 = Array{Taylor1{_S}}(undef, size(t31))
    tmp740 .= Taylor1(zero(_S), order)
    tmp947 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp947 .= Taylor1(zero(_S), order)
    tmp948 = Array{Taylor1{_S}}(undef, size(ϕ))
    tmp948 .= Taylor1(zero(_S), order)
    tmp750 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp750 .= Taylor1(zero(_S), order)
    tmp756 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp756 .= Taylor1(zero(_S), order)
    tmp758 = Array{Taylor1{_S}}(undef, size(sin3_ϕ))
    tmp758 .= Taylor1(zero(_S), order)
    tmp762 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp762 .= Taylor1(zero(_S), order)
    tmp765 = Array{Taylor1{_S}}(undef, size(r_p2))
    tmp765 .= Taylor1(zero(_S), order)
    tmp766 = Array{Taylor1{_S}}(undef, size(Λ2))
    tmp766 .= Taylor1(zero(_S), order)
    tmp769 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    tmp769 .= Taylor1(zero(_S), order)
    tmp770 = Array{Taylor1{_S}}(undef, size(Λ3))
    tmp770 .= Taylor1(zero(_S), order)
    tmp772 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp772 .= Taylor1(zero(_S), order)
    tmp774 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp774 .= Taylor1(zero(_S), order)
    tmp777 = Array{Taylor1{_S}}(undef, size(Λ2j_div_r4))
    tmp777 .= Taylor1(zero(_S), order)
    tmp781 = Array{Taylor1{_S}}(undef, size(Λ3j_div_r5))
    tmp781 .= Taylor1(zero(_S), order)
    tmp784 = Array{Taylor1{_S}}(undef, size(X))
    tmp784 .= Taylor1(zero(_S), order)
    tmp786 = Array{Taylor1{_S}}(undef, size(Y))
    tmp786 .= Taylor1(zero(_S), order)
    tmp788 = Array{Taylor1{_S}}(undef, size(Z))
    tmp788 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        ui[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2])), order)
        vi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1])), order)
        wi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)])), order)
        X[i] = Taylor1(constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1]), order)
        Y[i] = Taylor1(constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2]), order)
        Z[i] = Taylor1(constant_term(ss16asteph_t[3i]) - constant_term(q[3]), order)
        U[i] = Taylor1(constant_term(ui[i]) - constant_term(dq[1]), order)
        V[i] = Taylor1(constant_term(vi[i]) - constant_term(dq[2]), order)
        W[i] = Taylor1(constant_term(wi[i]) - constant_term(dq[3]), order)
        tmp686[1] = Taylor1(constant_term(4) * constant_term(dq[1]), order)
        tmp688[i] = Taylor1(constant_term(3) * constant_term(ui[i]), order)
        _4U_m_3X[i] = Taylor1(constant_term(tmp686[1]) - constant_term(tmp688[i]), order)
        tmp691[2] = Taylor1(constant_term(4) * constant_term(dq[2]), order)
        tmp693[i] = Taylor1(constant_term(3) * constant_term(vi[i]), order)
        _4V_m_3Y[i] = Taylor1(constant_term(tmp691[2]) - constant_term(tmp693[i]), order)
        tmp696[3] = Taylor1(constant_term(4) * constant_term(dq[3]), order)
        tmp698[i] = Taylor1(constant_term(3) * constant_term(wi[i]), order)
        _4W_m_3Z[i] = Taylor1(constant_term(tmp696[3]) - constant_term(tmp698[i]), order)
        pn2x[i] = Taylor1(constant_term(X[i]) * constant_term(_4U_m_3X[i]), order)
        pn2y[i] = Taylor1(constant_term(Y[i]) * constant_term(_4V_m_3Y[i]), order)
        pn2z[i] = Taylor1(constant_term(Z[i]) * constant_term(_4W_m_3Z[i]), order)
        UU[i] = Taylor1(constant_term(ui[i]) * constant_term(dq[1]), order)
        VV[i] = Taylor1(constant_term(vi[i]) * constant_term(dq[2]), order)
        WW[i] = Taylor1(constant_term(wi[i]) * constant_term(dq[3]), order)
        tmp706[i] = Taylor1(constant_term(UU[i]) + constant_term(VV[i]), order)
        vi_dot_vj[i] = Taylor1(constant_term(tmp706[i]) + constant_term(WW[i]), order)
        tmp709[i] = Taylor1(constant_term(X[i]) ^ float(constant_term(2)), order)
        tmp711[i] = Taylor1(constant_term(Y[i]) ^ float(constant_term(2)), order)
        tmp712[i] = Taylor1(constant_term(tmp709[i]) + constant_term(tmp711[i]), order)
        tmp714[i] = Taylor1(constant_term(Z[i]) ^ float(constant_term(2)), order)
        r_p2[i] = Taylor1(constant_term(tmp712[i]) + constant_term(tmp714[i]), order)
        r_p1d2[i] = Taylor1(sqrt(constant_term(r_p2[i])), order)
        r_p3d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(1.5)), order)
        r_p7d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(3.5)), order)
        newtonianCoeff[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i]), order)
        tmp722[i] = Taylor1(constant_term(pn2x[i]) + constant_term(pn2y[i]), order)
        tmp723[i] = Taylor1(constant_term(tmp722[i]) + constant_term(pn2z[i]), order)
        pn2[i] = Taylor1(constant_term(newtonianCoeff[i]) * constant_term(tmp723[i]), order)
        newton_acc_X[i] = Taylor1(constant_term(X[i]) * constant_term(newtonianCoeff[i]), order)
        newton_acc_Y[i] = Taylor1(constant_term(Y[i]) * constant_term(newtonianCoeff[i]), order)
        newton_acc_Z[i] = Taylor1(constant_term(Z[i]) * constant_term(newtonianCoeff[i]), order)
        newtonian1b_Potential[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i]), order)
        pn3[i] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i]), order)
        U_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(U[i]), order)
        V_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(V[i]), order)
        W_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(W[i]), order)
        if UJ_interaction[i]
            tmp734[i] = Taylor1(-(constant_term(X[i])), order)
            t31[i] = Taylor1(constant_term(tmp734[i]) * constant_term(M_[1, 3, i]), order)
            tmp736[i] = Taylor1(-(constant_term(Y[i])), order)
            t32[i] = Taylor1(constant_term(tmp736[i]) * constant_term(M_[2, 3, i]), order)
            tmp738[i] = Taylor1(-(constant_term(Z[i])), order)
            t33[i] = Taylor1(constant_term(tmp738[i]) * constant_term(M_[3, 3, i]), order)
            tmp740[i] = Taylor1(constant_term(t31[i]) + constant_term(t32[i]), order)
            r_sin_ϕ[i] = Taylor1(constant_term(tmp740[i]) + constant_term(t33[i]), order)
            sin_ϕ[i] = Taylor1(constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i]), order)
            ϕ[i] = Taylor1(asin(constant_term(sin_ϕ[i])), order)
            tmp947[i] = Taylor1(sqrt(1 - constant_term(sin_ϕ[i]) ^ 2), order)
            cos_ϕ[i] = Taylor1(cos(constant_term(ϕ[i])), order)
            tmp948[i] = Taylor1(sin(constant_term(ϕ[i])), order)
            sin2_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(2)), order)
            sin3_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(3)), order)
            tmp750[i] = Taylor1(constant_term(1.5) * constant_term(sin2_ϕ[i]), order)
            P_2_sin_ϕ[i] = Taylor1(constant_term(tmp750[i]) - constant_term(0.5), order)
            ∂P_2_sin_ϕ[i] = Taylor1(constant_term(3) * constant_term(sin_ϕ[i]), order)
            tmp756[i] = Taylor1(constant_term(-1.5) * constant_term(sin_ϕ[i]), order)
            tmp758[i] = Taylor1(constant_term(2.5) * constant_term(sin3_ϕ[i]), order)
            P_3_sin_ϕ[i] = Taylor1(constant_term(tmp756[i]) + constant_term(tmp758[i]), order)
            tmp762[i] = Taylor1(constant_term(7.5) * constant_term(sin2_ϕ[i]), order)
            ∂P_3_sin_ϕ[i] = Taylor1(constant_term(-1.5) + constant_term(tmp762[i]), order)
            tmp765[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(2)), order)
            tmp766[i] = Taylor1(constant_term(Λ2[i]) / constant_term(tmp765[i]), order)
            Λ2j_div_r4[i] = Taylor1(-(constant_term(tmp766[i])), order)
            tmp769[i] = Taylor1(constant_term(r_p1d2[i]) ^ float(constant_term(5)), order)
            tmp770[i] = Taylor1(constant_term(Λ3[i]) / constant_term(tmp769[i]), order)
            Λ3j_div_r5[i] = Taylor1(-(constant_term(tmp770[i])), order)
            tmp772[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
            m_c_ϕ_∂P_2[i] = Taylor1(constant_term(tmp772[i]) * constant_term(∂P_2_sin_ϕ[i]), order)
            tmp774[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
            m_c_ϕ_∂P_3[i] = Taylor1(constant_term(tmp774[i]) * constant_term(∂P_3_sin_ϕ[i]), order)
            tmp777[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(3), order)
            F_J2_ξ[i] = Taylor1(constant_term(tmp777[i]) * constant_term(P_2_sin_ϕ[i]), order)
            F_J2_ζ[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i]), order)
            tmp781[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(4), order)
            F_J3_ξ[i] = Taylor1(constant_term(tmp781[i]) * constant_term(P_3_sin_ϕ[i]), order)
            F_J3_ζ[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i]), order)
            F_J_ξ[i] = Taylor1(identity(constant_term(F_J2_ξ[i])), order)
            F_J_ζ[i] = Taylor1(identity(constant_term(F_J2_ζ[i])), order)
            tmp784[i] = Taylor1(-(constant_term(X[i])), order)
            ξx[i] = Taylor1(constant_term(tmp784[i]) / constant_term(r_p1d2[i]), order)
            tmp786[i] = Taylor1(-(constant_term(Y[i])), order)
            ξy[i] = Taylor1(constant_term(tmp786[i]) / constant_term(r_p1d2[i]), order)
            tmp788[i] = Taylor1(-(constant_term(Z[i])), order)
            ξz[i] = Taylor1(constant_term(tmp788[i]) / constant_term(r_p1d2[i]), order)
            ηx1[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξz[i]), order)
            ηy1[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξx[i]), order)
            ηz1[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξy[i]), order)
            ηx2[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξy[i]), order)
            ηy2[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξz[i]), order)
            ηz2[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξx[i]), order)
            ηx[i] = Taylor1(constant_term(ηx1[i]) - constant_term(ηx2[i]), order)
            ηy[i] = Taylor1(constant_term(ηy1[i]) - constant_term(ηy2[i]), order)
            ηz[i] = Taylor1(constant_term(ηz1[i]) - constant_term(ηz2[i]), order)
            ζx1[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηz[i]), order)
            ζy1[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηx[i]), order)
            ζz1[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηy[i]), order)
            ζx2[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηy[i]), order)
            ζy2[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηz[i]), order)
            ζz2[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηx[i]), order)
            ζx[i] = Taylor1(constant_term(ζx1[i]) - constant_term(ζx2[i]), order)
            ζy[i] = Taylor1(constant_term(ζy1[i]) - constant_term(ζy2[i]), order)
            ζz[i] = Taylor1(constant_term(ζz1[i]) - constant_term(ζz2[i]), order)
            F_J2_x1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξx[i]), order)
            F_J2_y1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξy[i]), order)
            F_J2_z1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξz[i]), order)
            F_J2_x2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζx[i]), order)
            F_J2_y2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζy[i]), order)
            F_J2_z2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζz[i]), order)
            F_J2_x[i] = Taylor1(constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i]), order)
            F_J2_y[i] = Taylor1(constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i]), order)
            F_J2_z[i] = Taylor1(constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i]), order)
        end
        tmp818[i] = Taylor1(constant_term(ui[i]) ^ float(constant_term(2)), order)
        tmp820[i] = Taylor1(constant_term(vi[i]) ^ float(constant_term(2)), order)
        tmp821[i] = Taylor1(constant_term(tmp818[i]) + constant_term(tmp820[i]), order)
        tmp823[i] = Taylor1(constant_term(wi[i]) ^ float(constant_term(2)), order)
        v2[i] = Taylor1(constant_term(tmp821[i]) + constant_term(tmp823[i]), order)
    end
    tmp826 = Taylor1(constant_term(q[4]) ^ float(constant_term(2)), order)
    tmp828 = Taylor1(constant_term(q[5]) ^ float(constant_term(2)), order)
    tmp829 = Taylor1(constant_term(tmp826) + constant_term(tmp828), order)
    tmp831 = Taylor1(constant_term(q[6]) ^ float(constant_term(2)), order)
    v2[N] = Taylor1(constant_term(tmp829) + constant_term(tmp831), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp834 = Array{Taylor1{_S}}(undef, size(μ))
    tmp834 .= Taylor1(zero(_S), order)
    tmp836 = Array{Taylor1{_S}}(undef, size(μ))
    tmp836 .= Taylor1(zero(_S), order)
    tmp838 = Array{Taylor1{_S}}(undef, size(μ))
    tmp838 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        temp_004[i] = Taylor1(constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N]), order)
        newtonianNb_Potential[N] = Taylor1(identity(constant_term(temp_004[i])), order)
        if UJ_interaction[i]
            tmp834[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_x[i]), order)
            temp_accX_i[i] = Taylor1(constant_term(accX) - constant_term(tmp834[i]), order)
            accX = Taylor1(identity(constant_term(temp_accX_i[i])), order)
            tmp836[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_y[i]), order)
            temp_accY_i[i] = Taylor1(constant_term(accY) - constant_term(tmp836[i]), order)
            accY = Taylor1(identity(constant_term(temp_accY_i[i])), order)
            tmp838[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_z[i]), order)
            temp_accZ_i[i] = Taylor1(constant_term(accZ) - constant_term(tmp838[i]), order)
            accZ = Taylor1(identity(constant_term(temp_accZ_i[i])), order)
        end
    end
    _4ϕj[N] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[N]), order)
    tmp844 = Array{Taylor1{_S}}(undef, size(v2))
    tmp844 .= Taylor1(zero(_S), order)
    tmp846 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp846 .= Taylor1(zero(_S), order)
    tmp847 = Array{Taylor1{_S}}(undef, size(tmp844))
    tmp847 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp853 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp853 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp853))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp856 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp856 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp856))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp859 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp859 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    tmp866 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp866 .= Taylor1(zero(_S), order)
    tmp867 = Array{Taylor1{_S}}(undef, size(tmp866))
    tmp867 .= Taylor1(zero(_S), order)
    tmp868 = Array{Taylor1{_S}}(undef, size(tmp867))
    tmp868 .= Taylor1(zero(_S), order)
    for i = 1:10
        ϕi_plus_4ϕj[i] = Taylor1(constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N]), order)
        tmp844[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
        tmp846[i] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i]), order)
        tmp847[i] = Taylor1(constant_term(tmp844[i]) - constant_term(tmp846[i]), order)
        sj2_plus_2si2_minus_4vivj[i] = Taylor1(constant_term(tmp847[i]) + constant_term(v2[N]), order)
        ϕs_and_vs[i] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i]), order)
        Xij_t_Ui[i] = Taylor1(constant_term(X[i]) * constant_term(ui[i]), order)
        Yij_t_Vi[i] = Taylor1(constant_term(Y[i]) * constant_term(vi[i]), order)
        Zij_t_Wi[i] = Taylor1(constant_term(Z[i]) * constant_term(wi[i]), order)
        tmp853[i] = Taylor1(constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i]), order)
        Rij_dot_Vi[i] = Taylor1(constant_term(tmp853[i]) + constant_term(Zij_t_Wi[i]), order)
        tmp856[i] = Taylor1(constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2)), order)
        pn1t7[i] = Taylor1(constant_term(tmp856[i]) / constant_term(r_p2[i]), order)
        tmp859[i] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i]), order)
        pn1t2_7[i] = Taylor1(constant_term(ϕs_and_vs[i]) - constant_term(tmp859[i]), order)
        pn1t1_7[i] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i]), order)
        pNX_t_X[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(X[i]), order)
        pNY_t_Y[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(Y[i]), order)
        pNZ_t_Z[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(Z[i]), order)
        tmp866[i] = Taylor1(constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i]), order)
        tmp867[i] = Taylor1(constant_term(tmp866[i]) + constant_term(pNZ_t_Z[i]), order)
        tmp868[i] = Taylor1(constant_term(0.5) * constant_term(tmp867[i]), order)
        pn1[i] = Taylor1(constant_term(pn1t1_7[i]) + constant_term(tmp868[i]), order)
        X_t_pn1[i] = Taylor1(constant_term(newton_acc_X[i]) * constant_term(pn1[i]), order)
        Y_t_pn1[i] = Taylor1(constant_term(newton_acc_Y[i]) * constant_term(pn1[i]), order)
        Z_t_pn1[i] = Taylor1(constant_term(newton_acc_Z[i]) * constant_term(pn1[i]), order)
        pNX_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(pn3[i]), order)
        pNY_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(pn3[i]), order)
        pNZ_t_pn3[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(pn3[i]), order)
    end
    tmp876 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp876 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp879 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp879 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp882 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp882 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for i = 1:10
        tmp876[i] = Taylor1(constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i]), order)
        termpnx[i] = Taylor1(constant_term(X_t_pn1[i]) + constant_term(tmp876[i]), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        tmp879[i] = Taylor1(constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i]), order)
        termpny[i] = Taylor1(constant_term(Y_t_pn1[i]) + constant_term(tmp879[i]), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        tmp882[i] = Taylor1(constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i]), order)
        termpnz[i] = Taylor1(constant_term(Z_t_pn1[i]) + constant_term(tmp882[i]), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    for i = 11:Nm1
        X_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_X[i]), order)
        Y_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Y[i]), order)
        Z_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Z[i]), order)
    end
    for i = 11:Nm1
        termpnx[i] = Taylor1(identity(constant_term(X_t_pn1[i])), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        termpny[i] = Taylor1(identity(constant_term(Y_t_pn1[i])), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        termpnz[i] = Taylor1(identity(constant_term(Z_t_pn1[i])), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    postNewtonX = Taylor1(constant_term(pntempX) * constant_term(c_m2), order)
    postNewtonY = Taylor1(constant_term(pntempY) * constant_term(c_m2), order)
    postNewtonZ = Taylor1(constant_term(pntempZ) * constant_term(c_m2), order)
    tmp894 = Taylor1(constant_term(Y[1]) * constant_term(W[1]), order)
    tmp895 = Taylor1(constant_term(Z[1]) * constant_term(V[1]), order)
    hx = Taylor1(constant_term(tmp894) - constant_term(tmp895), order)
    tmp897 = Taylor1(constant_term(Z[1]) * constant_term(U[1]), order)
    tmp898 = Taylor1(constant_term(X[1]) * constant_term(W[1]), order)
    hy = Taylor1(constant_term(tmp897) - constant_term(tmp898), order)
    tmp900 = Taylor1(constant_term(X[1]) * constant_term(V[1]), order)
    tmp901 = Taylor1(constant_term(Y[1]) * constant_term(U[1]), order)
    hz = Taylor1(constant_term(tmp900) - constant_term(tmp901), order)
    tmp903 = Taylor1(constant_term(hz) * constant_term(Y[1]), order)
    tmp904 = Taylor1(constant_term(hy) * constant_term(Z[1]), order)
    t_x = Taylor1(constant_term(tmp903) - constant_term(tmp904), order)
    tmp906 = Taylor1(constant_term(hx) * constant_term(Z[1]), order)
    tmp907 = Taylor1(constant_term(hz) * constant_term(X[1]), order)
    t_y = Taylor1(constant_term(tmp906) - constant_term(tmp907), order)
    tmp909 = Taylor1(constant_term(hy) * constant_term(X[1]), order)
    tmp910 = Taylor1(constant_term(hx) * constant_term(Y[1]), order)
    t_z = Taylor1(constant_term(tmp909) - constant_term(tmp910), order)
    tmp913 = Taylor1(constant_term(t_x) ^ float(constant_term(2)), order)
    tmp915 = Taylor1(constant_term(t_y) ^ float(constant_term(2)), order)
    tmp916 = Taylor1(constant_term(tmp913) + constant_term(tmp915), order)
    tmp918 = Taylor1(constant_term(t_z) ^ float(constant_term(2)), order)
    tmp919 = Taylor1(constant_term(tmp916) + constant_term(tmp918), order)
    t_norm = Taylor1(sqrt(constant_term(tmp919)), order)
    t_x_unit = Taylor1(constant_term(t_x) / constant_term(t_norm), order)
    t_y_unit = Taylor1(constant_term(t_y) / constant_term(t_norm), order)
    t_z_unit = Taylor1(constant_term(t_z) / constant_term(t_norm), order)
    tmp924 = Taylor1(constant_term(X[1]) / constant_term(r_p1d2[1]), order)
    r_x_unit = Taylor1(-(constant_term(tmp924)), order)
    tmp926 = Taylor1(constant_term(Y[1]) / constant_term(r_p1d2[1]), order)
    r_y_unit = Taylor1(-(constant_term(tmp926)), order)
    tmp928 = Taylor1(constant_term(Z[1]) / constant_term(r_p1d2[1]), order)
    r_z_unit = Taylor1(-(constant_term(tmp928)), order)
    g_r = Taylor1(identity(constant_term(r_p2[1])), order)
    A2_t_g_r = Taylor1(constant_term(q[7]) / constant_term(g_r), order)
    A1_t_g_r = Taylor1(constant_term(q[8]) / constant_term(g_r), order)
    tmp932 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_x_unit), order)
    tmp933 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_x_unit), order)
    NGAx = Taylor1(constant_term(tmp932) + constant_term(tmp933), order)
    tmp935 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_y_unit), order)
    tmp936 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_y_unit), order)
    NGAy = Taylor1(constant_term(tmp935) + constant_term(tmp936), order)
    tmp938 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_z_unit), order)
    tmp939 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_z_unit), order)
    NGAz = Taylor1(constant_term(tmp938) + constant_term(tmp939), order)
    tmp941 = Taylor1(constant_term(postNewtonX) + constant_term(accX), order)
    dq[4] = Taylor1(constant_term(tmp941) + constant_term(NGAx), order)
    tmp943 = Taylor1(constant_term(postNewtonY) + constant_term(accY), order)
    dq[5] = Taylor1(constant_term(tmp943) + constant_term(NGAy), order)
    tmp945 = Taylor1(constant_term(postNewtonZ) + constant_term(accZ), order)
    dq[6] = Taylor1(constant_term(tmp945) + constant_term(NGAz), order)
    dq[7] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp826, tmp828, tmp829, tmp831, tmp894, tmp895, tmp897, tmp898, tmp900, tmp901, tmp903, tmp904, tmp906, tmp907, tmp909, tmp910, tmp913, tmp915, tmp916, tmp918, tmp919, tmp924, tmp926, tmp928, tmp932, tmp933, tmp935, tmp936, tmp938, tmp939, tmp941, tmp943, tmp945, pntempX, pntempY, pntempZ, accX, accY, accZ, postNewtonX, postNewtonY, postNewtonZ, hx, hy, hz, t_x, t_y, t_z, t_norm, t_x_unit, t_y_unit, t_z_unit, r_x_unit, r_y_unit, r_z_unit, g_r, A2_t_g_r, A1_t_g_r, NGAx, NGAy, NGAz], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, ui, vi, wi, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newtonianNb_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, t31, t32, t33, r_sin_ϕ, sin_ϕ, ϕ, cos_ϕ, sin2_ϕ, sin3_ϕ, F_J2_x, F_J2_y, F_J2_z, F_J2_x1, F_J2_y1, F_J2_z1, F_J2_x2, F_J2_y2, F_J2_z2, temp_accX_i, temp_accY_i, temp_accZ_i, P_2_sin_ϕ, ∂P_2_sin_ϕ, P_3_sin_ϕ, ∂P_3_sin_ϕ, m_c_ϕ_∂P_2, m_c_ϕ_∂P_3, Λ2j_div_r4, Λ3j_div_r5, F_J_ξ, F_J_ζ, F_J2_ξ, F_J2_ζ, F_J3_ξ, F_J3_ζ, ξx, ξy, ξz, ηx, ηy, ηz, ηx1, ηy1, ηz1, ηx2, ηy2, ηz2, ζx, ζy, ζz, ζx1, ζy1, ζz1, ζx2, ζy2, ζz2, tmp686, tmp688, tmp691, tmp693, tmp696, tmp698, pn2x, pn2y, pn2z, tmp706, tmp709, tmp711, tmp712, tmp714, tmp722, tmp723, tmp734, tmp736, tmp738, tmp740, tmp947, tmp948, tmp750, tmp756, tmp758, tmp762, tmp765, tmp766, tmp769, tmp770, tmp772, tmp774, tmp777, tmp781, tmp784, tmp786, tmp788, tmp818, tmp820, tmp821, tmp823, temp_004, tmp834, tmp836, tmp838, tmp844, tmp846, tmp847, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp853, Rij_dot_Vi, tmp856, pn1t7, tmp859, pn1t2_7, tmp866, tmp867, tmp868, tmp876, termpnx, sumpnx, tmp879, termpny, sumpny, tmp882, termpnz, sumpnz], [Array{Taylor1{_S}, 2}(undef, 0, 0)], [Array{Taylor1{_S}, 3}(undef, 0, 0, 0)], [Array{Taylor1{_S}, 4}(undef, 0, 0, 0, 0)])
end

# TaylorIntegration.jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph!
function TaylorIntegration.jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp826 = __ralloc.v0[1]
    tmp828 = __ralloc.v0[2]
    tmp829 = __ralloc.v0[3]
    tmp831 = __ralloc.v0[4]
    tmp894 = __ralloc.v0[5]
    tmp895 = __ralloc.v0[6]
    tmp897 = __ralloc.v0[7]
    tmp898 = __ralloc.v0[8]
    tmp900 = __ralloc.v0[9]
    tmp901 = __ralloc.v0[10]
    tmp903 = __ralloc.v0[11]
    tmp904 = __ralloc.v0[12]
    tmp906 = __ralloc.v0[13]
    tmp907 = __ralloc.v0[14]
    tmp909 = __ralloc.v0[15]
    tmp910 = __ralloc.v0[16]
    tmp913 = __ralloc.v0[17]
    tmp915 = __ralloc.v0[18]
    tmp916 = __ralloc.v0[19]
    tmp918 = __ralloc.v0[20]
    tmp919 = __ralloc.v0[21]
    tmp924 = __ralloc.v0[22]
    tmp926 = __ralloc.v0[23]
    tmp928 = __ralloc.v0[24]
    tmp932 = __ralloc.v0[25]
    tmp933 = __ralloc.v0[26]
    tmp935 = __ralloc.v0[27]
    tmp936 = __ralloc.v0[28]
    tmp938 = __ralloc.v0[29]
    tmp939 = __ralloc.v0[30]
    tmp941 = __ralloc.v0[31]
    tmp943 = __ralloc.v0[32]
    tmp945 = __ralloc.v0[33]
    pntempX = __ralloc.v0[34]
    pntempY = __ralloc.v0[35]
    pntempZ = __ralloc.v0[36]
    accX = __ralloc.v0[37]
    accY = __ralloc.v0[38]
    accZ = __ralloc.v0[39]
    postNewtonX = __ralloc.v0[40]
    postNewtonY = __ralloc.v0[41]
    postNewtonZ = __ralloc.v0[42]
    hx = __ralloc.v0[43]
    hy = __ralloc.v0[44]
    hz = __ralloc.v0[45]
    t_x = __ralloc.v0[46]
    t_y = __ralloc.v0[47]
    t_z = __ralloc.v0[48]
    t_norm = __ralloc.v0[49]
    t_x_unit = __ralloc.v0[50]
    t_y_unit = __ralloc.v0[51]
    t_z_unit = __ralloc.v0[52]
    r_x_unit = __ralloc.v0[53]
    r_y_unit = __ralloc.v0[54]
    r_z_unit = __ralloc.v0[55]
    g_r = __ralloc.v0[56]
    A2_t_g_r = __ralloc.v0[57]
    A1_t_g_r = __ralloc.v0[58]
    NGAx = __ralloc.v0[59]
    NGAy = __ralloc.v0[60]
    NGAz = __ralloc.v0[61]
    X = __ralloc.v1[1]
    Y = __ralloc.v1[2]
    Z = __ralloc.v1[3]
    r_p2 = __ralloc.v1[4]
    r_p1d2 = __ralloc.v1[5]
    r_p3d2 = __ralloc.v1[6]
    r_p7d2 = __ralloc.v1[7]
    newtonianCoeff = __ralloc.v1[8]
    ui = __ralloc.v1[9]
    vi = __ralloc.v1[10]
    wi = __ralloc.v1[11]
    U = __ralloc.v1[12]
    V = __ralloc.v1[13]
    W = __ralloc.v1[14]
    _4U_m_3X = __ralloc.v1[15]
    _4V_m_3Y = __ralloc.v1[16]
    _4W_m_3Z = __ralloc.v1[17]
    UU = __ralloc.v1[18]
    VV = __ralloc.v1[19]
    WW = __ralloc.v1[20]
    newtonian1b_Potential = __ralloc.v1[21]
    newtonianNb_Potential = __ralloc.v1[22]
    newton_acc_X = __ralloc.v1[23]
    newton_acc_Y = __ralloc.v1[24]
    newton_acc_Z = __ralloc.v1[25]
    v2 = __ralloc.v1[26]
    vi_dot_vj = __ralloc.v1[27]
    pn2 = __ralloc.v1[28]
    U_t_pn2 = __ralloc.v1[29]
    V_t_pn2 = __ralloc.v1[30]
    W_t_pn2 = __ralloc.v1[31]
    pn3 = __ralloc.v1[32]
    pNX_t_pn3 = __ralloc.v1[33]
    pNY_t_pn3 = __ralloc.v1[34]
    pNZ_t_pn3 = __ralloc.v1[35]
    _4ϕj = __ralloc.v1[36]
    ϕi_plus_4ϕj = __ralloc.v1[37]
    sj2_plus_2si2_minus_4vivj = __ralloc.v1[38]
    ϕs_and_vs = __ralloc.v1[39]
    pn1t1_7 = __ralloc.v1[40]
    pNX_t_X = __ralloc.v1[41]
    pNY_t_Y = __ralloc.v1[42]
    pNZ_t_Z = __ralloc.v1[43]
    pn1 = __ralloc.v1[44]
    X_t_pn1 = __ralloc.v1[45]
    Y_t_pn1 = __ralloc.v1[46]
    Z_t_pn1 = __ralloc.v1[47]
    t31 = __ralloc.v1[48]
    t32 = __ralloc.v1[49]
    t33 = __ralloc.v1[50]
    r_sin_ϕ = __ralloc.v1[51]
    sin_ϕ = __ralloc.v1[52]
    ϕ = __ralloc.v1[53]
    cos_ϕ = __ralloc.v1[54]
    sin2_ϕ = __ralloc.v1[55]
    sin3_ϕ = __ralloc.v1[56]
    F_J2_x = __ralloc.v1[57]
    F_J2_y = __ralloc.v1[58]
    F_J2_z = __ralloc.v1[59]
    F_J2_x1 = __ralloc.v1[60]
    F_J2_y1 = __ralloc.v1[61]
    F_J2_z1 = __ralloc.v1[62]
    F_J2_x2 = __ralloc.v1[63]
    F_J2_y2 = __ralloc.v1[64]
    F_J2_z2 = __ralloc.v1[65]
    temp_accX_i = __ralloc.v1[66]
    temp_accY_i = __ralloc.v1[67]
    temp_accZ_i = __ralloc.v1[68]
    P_2_sin_ϕ = __ralloc.v1[69]
    ∂P_2_sin_ϕ = __ralloc.v1[70]
    P_3_sin_ϕ = __ralloc.v1[71]
    ∂P_3_sin_ϕ = __ralloc.v1[72]
    m_c_ϕ_∂P_2 = __ralloc.v1[73]
    m_c_ϕ_∂P_3 = __ralloc.v1[74]
    Λ2j_div_r4 = __ralloc.v1[75]
    Λ3j_div_r5 = __ralloc.v1[76]
    F_J_ξ = __ralloc.v1[77]
    F_J_ζ = __ralloc.v1[78]
    F_J2_ξ = __ralloc.v1[79]
    F_J2_ζ = __ralloc.v1[80]
    F_J3_ξ = __ralloc.v1[81]
    F_J3_ζ = __ralloc.v1[82]
    ξx = __ralloc.v1[83]
    ξy = __ralloc.v1[84]
    ξz = __ralloc.v1[85]
    ηx = __ralloc.v1[86]
    ηy = __ralloc.v1[87]
    ηz = __ralloc.v1[88]
    ηx1 = __ralloc.v1[89]
    ηy1 = __ralloc.v1[90]
    ηz1 = __ralloc.v1[91]
    ηx2 = __ralloc.v1[92]
    ηy2 = __ralloc.v1[93]
    ηz2 = __ralloc.v1[94]
    ζx = __ralloc.v1[95]
    ζy = __ralloc.v1[96]
    ζz = __ralloc.v1[97]
    ζx1 = __ralloc.v1[98]
    ζy1 = __ralloc.v1[99]
    ζz1 = __ralloc.v1[100]
    ζx2 = __ralloc.v1[101]
    ζy2 = __ralloc.v1[102]
    ζz2 = __ralloc.v1[103]
    tmp686 = __ralloc.v1[104]
    tmp688 = __ralloc.v1[105]
    tmp691 = __ralloc.v1[106]
    tmp693 = __ralloc.v1[107]
    tmp696 = __ralloc.v1[108]
    tmp698 = __ralloc.v1[109]
    pn2x = __ralloc.v1[110]
    pn2y = __ralloc.v1[111]
    pn2z = __ralloc.v1[112]
    tmp706 = __ralloc.v1[113]
    tmp709 = __ralloc.v1[114]
    tmp711 = __ralloc.v1[115]
    tmp712 = __ralloc.v1[116]
    tmp714 = __ralloc.v1[117]
    tmp722 = __ralloc.v1[118]
    tmp723 = __ralloc.v1[119]
    tmp734 = __ralloc.v1[120]
    tmp736 = __ralloc.v1[121]
    tmp738 = __ralloc.v1[122]
    tmp740 = __ralloc.v1[123]
    tmp947 = __ralloc.v1[124]
    tmp948 = __ralloc.v1[125]
    tmp750 = __ralloc.v1[126]
    tmp756 = __ralloc.v1[127]
    tmp758 = __ralloc.v1[128]
    tmp762 = __ralloc.v1[129]
    tmp765 = __ralloc.v1[130]
    tmp766 = __ralloc.v1[131]
    tmp769 = __ralloc.v1[132]
    tmp770 = __ralloc.v1[133]
    tmp772 = __ralloc.v1[134]
    tmp774 = __ralloc.v1[135]
    tmp777 = __ralloc.v1[136]
    tmp781 = __ralloc.v1[137]
    tmp784 = __ralloc.v1[138]
    tmp786 = __ralloc.v1[139]
    tmp788 = __ralloc.v1[140]
    tmp818 = __ralloc.v1[141]
    tmp820 = __ralloc.v1[142]
    tmp821 = __ralloc.v1[143]
    tmp823 = __ralloc.v1[144]
    temp_004 = __ralloc.v1[145]
    tmp834 = __ralloc.v1[146]
    tmp836 = __ralloc.v1[147]
    tmp838 = __ralloc.v1[148]
    tmp844 = __ralloc.v1[149]
    tmp846 = __ralloc.v1[150]
    tmp847 = __ralloc.v1[151]
    Xij_t_Ui = __ralloc.v1[152]
    Yij_t_Vi = __ralloc.v1[153]
    Zij_t_Wi = __ralloc.v1[154]
    tmp853 = __ralloc.v1[155]
    Rij_dot_Vi = __ralloc.v1[156]
    tmp856 = __ralloc.v1[157]
    pn1t7 = __ralloc.v1[158]
    tmp859 = __ralloc.v1[159]
    pn1t2_7 = __ralloc.v1[160]
    tmp866 = __ralloc.v1[161]
    tmp867 = __ralloc.v1[162]
    tmp868 = __ralloc.v1[163]
    tmp876 = __ralloc.v1[164]
    termpnx = __ralloc.v1[165]
    sumpnx = __ralloc.v1[166]
    tmp879 = __ralloc.v1[167]
    termpny = __ralloc.v1[168]
    sumpny = __ralloc.v1[169]
    tmp882 = __ralloc.v1[170]
    termpnz = __ralloc.v1[171]
    sumpnz = __ralloc.v1[172]
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    pntempX.coeffs[1] = identity(constant_term(zero_q_1))
    pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
    pntempY.coeffs[1] = identity(constant_term(zero_q_1))
    pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
    pntempZ.coeffs[1] = identity(constant_term(zero_q_1))
    pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    accX.coeffs[1] = identity(constant_term(zero_q_1))
    accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
    accY.coeffs[1] = identity(constant_term(zero_q_1))
    accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
    accZ.coeffs[1] = identity(constant_term(zero_q_1))
    accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    (dq[1]).coeffs[1] = identity(constant_term(q[4]))
    (dq[1]).coeffs[2:order + 1] .= zero((dq[1]).coeffs[1])
    (dq[2]).coeffs[1] = identity(constant_term(q[5]))
    (dq[2]).coeffs[2:order + 1] .= zero((dq[2]).coeffs[1])
    (dq[3]).coeffs[1] = identity(constant_term(q[6]))
    (dq[3]).coeffs[2:order + 1] .= zero((dq[3]).coeffs[1])
    (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(zero_q_1))
    (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
    for i = 1:Nm1
        (ui[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2]))
        (ui[i]).coeffs[2:order + 1] .= zero((ui[i]).coeffs[1])
        (vi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1]))
        (vi[i]).coeffs[2:order + 1] .= zero((vi[i]).coeffs[1])
        (wi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)]))
        (wi[i]).coeffs[2:order + 1] .= zero((wi[i]).coeffs[1])
        (X[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1])
        (X[i]).coeffs[2:order + 1] .= zero((X[i]).coeffs[1])
        (Y[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2])
        (Y[i]).coeffs[2:order + 1] .= zero((Y[i]).coeffs[1])
        (Z[i]).coeffs[1] = constant_term(ss16asteph_t[3i]) - constant_term(q[3])
        (Z[i]).coeffs[2:order + 1] .= zero((Z[i]).coeffs[1])
        (U[i]).coeffs[1] = constant_term(ui[i]) - constant_term(dq[1])
        (U[i]).coeffs[2:order + 1] .= zero((U[i]).coeffs[1])
        (V[i]).coeffs[1] = constant_term(vi[i]) - constant_term(dq[2])
        (V[i]).coeffs[2:order + 1] .= zero((V[i]).coeffs[1])
        (W[i]).coeffs[1] = constant_term(wi[i]) - constant_term(dq[3])
        (W[i]).coeffs[2:order + 1] .= zero((W[i]).coeffs[1])
        (tmp686[1]).coeffs[1] = constant_term(4) * constant_term(dq[1])
        (tmp686[1]).coeffs[2:order + 1] .= zero((tmp686[1]).coeffs[1])
        (tmp688[i]).coeffs[1] = constant_term(3) * constant_term(ui[i])
        (tmp688[i]).coeffs[2:order + 1] .= zero((tmp688[i]).coeffs[1])
        (_4U_m_3X[i]).coeffs[1] = constant_term(tmp686[1]) - constant_term(tmp688[i])
        (_4U_m_3X[i]).coeffs[2:order + 1] .= zero((_4U_m_3X[i]).coeffs[1])
        (tmp691[2]).coeffs[1] = constant_term(4) * constant_term(dq[2])
        (tmp691[2]).coeffs[2:order + 1] .= zero((tmp691[2]).coeffs[1])
        (tmp693[i]).coeffs[1] = constant_term(3) * constant_term(vi[i])
        (tmp693[i]).coeffs[2:order + 1] .= zero((tmp693[i]).coeffs[1])
        (_4V_m_3Y[i]).coeffs[1] = constant_term(tmp691[2]) - constant_term(tmp693[i])
        (_4V_m_3Y[i]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i]).coeffs[1])
        (tmp696[3]).coeffs[1] = constant_term(4) * constant_term(dq[3])
        (tmp696[3]).coeffs[2:order + 1] .= zero((tmp696[3]).coeffs[1])
        (tmp698[i]).coeffs[1] = constant_term(3) * constant_term(wi[i])
        (tmp698[i]).coeffs[2:order + 1] .= zero((tmp698[i]).coeffs[1])
        (_4W_m_3Z[i]).coeffs[1] = constant_term(tmp696[3]) - constant_term(tmp698[i])
        (_4W_m_3Z[i]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i]).coeffs[1])
        (pn2x[i]).coeffs[1] = constant_term(X[i]) * constant_term(_4U_m_3X[i])
        (pn2x[i]).coeffs[2:order + 1] .= zero((pn2x[i]).coeffs[1])
        (pn2y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(_4V_m_3Y[i])
        (pn2y[i]).coeffs[2:order + 1] .= zero((pn2y[i]).coeffs[1])
        (pn2z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(_4W_m_3Z[i])
        (pn2z[i]).coeffs[2:order + 1] .= zero((pn2z[i]).coeffs[1])
        (UU[i]).coeffs[1] = constant_term(ui[i]) * constant_term(dq[1])
        (UU[i]).coeffs[2:order + 1] .= zero((UU[i]).coeffs[1])
        (VV[i]).coeffs[1] = constant_term(vi[i]) * constant_term(dq[2])
        (VV[i]).coeffs[2:order + 1] .= zero((VV[i]).coeffs[1])
        (WW[i]).coeffs[1] = constant_term(wi[i]) * constant_term(dq[3])
        (WW[i]).coeffs[2:order + 1] .= zero((WW[i]).coeffs[1])
        (tmp706[i]).coeffs[1] = constant_term(UU[i]) + constant_term(VV[i])
        (tmp706[i]).coeffs[2:order + 1] .= zero((tmp706[i]).coeffs[1])
        (vi_dot_vj[i]).coeffs[1] = constant_term(tmp706[i]) + constant_term(WW[i])
        (vi_dot_vj[i]).coeffs[2:order + 1] .= zero((vi_dot_vj[i]).coeffs[1])
        (tmp709[i]).coeffs[1] = constant_term(X[i]) ^ float(constant_term(2))
        (tmp709[i]).coeffs[2:order + 1] .= zero((tmp709[i]).coeffs[1])
        (tmp711[i]).coeffs[1] = constant_term(Y[i]) ^ float(constant_term(2))
        (tmp711[i]).coeffs[2:order + 1] .= zero((tmp711[i]).coeffs[1])
        (tmp712[i]).coeffs[1] = constant_term(tmp709[i]) + constant_term(tmp711[i])
        (tmp712[i]).coeffs[2:order + 1] .= zero((tmp712[i]).coeffs[1])
        (tmp714[i]).coeffs[1] = constant_term(Z[i]) ^ float(constant_term(2))
        (tmp714[i]).coeffs[2:order + 1] .= zero((tmp714[i]).coeffs[1])
        (r_p2[i]).coeffs[1] = constant_term(tmp712[i]) + constant_term(tmp714[i])
        (r_p2[i]).coeffs[2:order + 1] .= zero((r_p2[i]).coeffs[1])
        (r_p1d2[i]).coeffs[1] = sqrt(constant_term(r_p2[i]))
        (r_p1d2[i]).coeffs[2:order + 1] .= zero((r_p1d2[i]).coeffs[1])
        (r_p3d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(1.5))
        (r_p3d2[i]).coeffs[2:order + 1] .= zero((r_p3d2[i]).coeffs[1])
        (r_p7d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(3.5))
        (r_p7d2[i]).coeffs[2:order + 1] .= zero((r_p7d2[i]).coeffs[1])
        (newtonianCoeff[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i])
        (newtonianCoeff[i]).coeffs[2:order + 1] .= zero((newtonianCoeff[i]).coeffs[1])
        (tmp722[i]).coeffs[1] = constant_term(pn2x[i]) + constant_term(pn2y[i])
        (tmp722[i]).coeffs[2:order + 1] .= zero((tmp722[i]).coeffs[1])
        (tmp723[i]).coeffs[1] = constant_term(tmp722[i]) + constant_term(pn2z[i])
        (tmp723[i]).coeffs[2:order + 1] .= zero((tmp723[i]).coeffs[1])
        (pn2[i]).coeffs[1] = constant_term(newtonianCoeff[i]) * constant_term(tmp723[i])
        (pn2[i]).coeffs[2:order + 1] .= zero((pn2[i]).coeffs[1])
        (newton_acc_X[i]).coeffs[1] = constant_term(X[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_X[i]).coeffs[2:order + 1] .= zero((newton_acc_X[i]).coeffs[1])
        (newton_acc_Y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_Y[i]).coeffs[2:order + 1] .= zero((newton_acc_Y[i]).coeffs[1])
        (newton_acc_Z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_Z[i]).coeffs[2:order + 1] .= zero((newton_acc_Z[i]).coeffs[1])
        (newtonian1b_Potential[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i])
        (newtonian1b_Potential[i]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i]).coeffs[1])
        (pn3[i]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i])
        (pn3[i]).coeffs[2:order + 1] .= zero((pn3[i]).coeffs[1])
        (U_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(U[i])
        (U_t_pn2[i]).coeffs[2:order + 1] .= zero((U_t_pn2[i]).coeffs[1])
        (V_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(V[i])
        (V_t_pn2[i]).coeffs[2:order + 1] .= zero((V_t_pn2[i]).coeffs[1])
        (W_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(W[i])
        (W_t_pn2[i]).coeffs[2:order + 1] .= zero((W_t_pn2[i]).coeffs[1])
        if UJ_interaction[i]
            (tmp734[i]).coeffs[1] = -(constant_term(X[i]))
            (tmp734[i]).coeffs[2:order + 1] .= zero((tmp734[i]).coeffs[1])
            (t31[i]).coeffs[1] = constant_term(tmp734[i]) * constant_term(M_[1, 3, i])
            (t31[i]).coeffs[2:order + 1] .= zero((t31[i]).coeffs[1])
            (tmp736[i]).coeffs[1] = -(constant_term(Y[i]))
            (tmp736[i]).coeffs[2:order + 1] .= zero((tmp736[i]).coeffs[1])
            (t32[i]).coeffs[1] = constant_term(tmp736[i]) * constant_term(M_[2, 3, i])
            (t32[i]).coeffs[2:order + 1] .= zero((t32[i]).coeffs[1])
            (tmp738[i]).coeffs[1] = -(constant_term(Z[i]))
            (tmp738[i]).coeffs[2:order + 1] .= zero((tmp738[i]).coeffs[1])
            (t33[i]).coeffs[1] = constant_term(tmp738[i]) * constant_term(M_[3, 3, i])
            (t33[i]).coeffs[2:order + 1] .= zero((t33[i]).coeffs[1])
            (tmp740[i]).coeffs[1] = constant_term(t31[i]) + constant_term(t32[i])
            (tmp740[i]).coeffs[2:order + 1] .= zero((tmp740[i]).coeffs[1])
            (r_sin_ϕ[i]).coeffs[1] = constant_term(tmp740[i]) + constant_term(t33[i])
            (r_sin_ϕ[i]).coeffs[2:order + 1] .= zero((r_sin_ϕ[i]).coeffs[1])
            (sin_ϕ[i]).coeffs[1] = constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i])
            (sin_ϕ[i]).coeffs[2:order + 1] .= zero((sin_ϕ[i]).coeffs[1])
            (ϕ[i]).coeffs[1] = asin(constant_term(sin_ϕ[i]))
            (ϕ[i]).coeffs[2:order + 1] .= zero((ϕ[i]).coeffs[1])
            (tmp947[i]).coeffs[1] = sqrt(1 - constant_term(sin_ϕ[i]) ^ 2)
            (tmp947[i]).coeffs[2:order + 1] .= zero((tmp947[i]).coeffs[1])
            (cos_ϕ[i]).coeffs[1] = cos(constant_term(ϕ[i]))
            (cos_ϕ[i]).coeffs[2:order + 1] .= zero((cos_ϕ[i]).coeffs[1])
            (tmp948[i]).coeffs[1] = sin(constant_term(ϕ[i]))
            (tmp948[i]).coeffs[2:order + 1] .= zero((tmp948[i]).coeffs[1])
            (sin2_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(2))
            (sin2_ϕ[i]).coeffs[2:order + 1] .= zero((sin2_ϕ[i]).coeffs[1])
            (sin3_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(3))
            (sin3_ϕ[i]).coeffs[2:order + 1] .= zero((sin3_ϕ[i]).coeffs[1])
            (tmp750[i]).coeffs[1] = constant_term(1.5) * constant_term(sin2_ϕ[i])
            (tmp750[i]).coeffs[2:order + 1] .= zero((tmp750[i]).coeffs[1])
            (P_2_sin_ϕ[i]).coeffs[1] = constant_term(tmp750[i]) - constant_term(0.5)
            (P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_2_sin_ϕ[i]).coeffs[1])
            (∂P_2_sin_ϕ[i]).coeffs[1] = constant_term(3) * constant_term(sin_ϕ[i])
            (∂P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_2_sin_ϕ[i]).coeffs[1])
            (tmp756[i]).coeffs[1] = constant_term(-1.5) * constant_term(sin_ϕ[i])
            (tmp756[i]).coeffs[2:order + 1] .= zero((tmp756[i]).coeffs[1])
            (tmp758[i]).coeffs[1] = constant_term(2.5) * constant_term(sin3_ϕ[i])
            (tmp758[i]).coeffs[2:order + 1] .= zero((tmp758[i]).coeffs[1])
            (P_3_sin_ϕ[i]).coeffs[1] = constant_term(tmp756[i]) + constant_term(tmp758[i])
            (P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_3_sin_ϕ[i]).coeffs[1])
            (tmp762[i]).coeffs[1] = constant_term(7.5) * constant_term(sin2_ϕ[i])
            (tmp762[i]).coeffs[2:order + 1] .= zero((tmp762[i]).coeffs[1])
            (∂P_3_sin_ϕ[i]).coeffs[1] = constant_term(-1.5) + constant_term(tmp762[i])
            (∂P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_3_sin_ϕ[i]).coeffs[1])
            (tmp765[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(2))
            (tmp765[i]).coeffs[2:order + 1] .= zero((tmp765[i]).coeffs[1])
            (tmp766[i]).coeffs[1] = constant_term(Λ2[i]) / constant_term(tmp765[i])
            (tmp766[i]).coeffs[2:order + 1] .= zero((tmp766[i]).coeffs[1])
            (Λ2j_div_r4[i]).coeffs[1] = -(constant_term(tmp766[i]))
            (Λ2j_div_r4[i]).coeffs[2:order + 1] .= zero((Λ2j_div_r4[i]).coeffs[1])
            (tmp769[i]).coeffs[1] = constant_term(r_p1d2[i]) ^ float(constant_term(5))
            (tmp769[i]).coeffs[2:order + 1] .= zero((tmp769[i]).coeffs[1])
            (tmp770[i]).coeffs[1] = constant_term(Λ3[i]) / constant_term(tmp769[i])
            (tmp770[i]).coeffs[2:order + 1] .= zero((tmp770[i]).coeffs[1])
            (Λ3j_div_r5[i]).coeffs[1] = -(constant_term(tmp770[i]))
            (Λ3j_div_r5[i]).coeffs[2:order + 1] .= zero((Λ3j_div_r5[i]).coeffs[1])
            (tmp772[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
            (tmp772[i]).coeffs[2:order + 1] .= zero((tmp772[i]).coeffs[1])
            (m_c_ϕ_∂P_2[i]).coeffs[1] = constant_term(tmp772[i]) * constant_term(∂P_2_sin_ϕ[i])
            (m_c_ϕ_∂P_2[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_2[i]).coeffs[1])
            (tmp774[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
            (tmp774[i]).coeffs[2:order + 1] .= zero((tmp774[i]).coeffs[1])
            (m_c_ϕ_∂P_3[i]).coeffs[1] = constant_term(tmp774[i]) * constant_term(∂P_3_sin_ϕ[i])
            (m_c_ϕ_∂P_3[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_3[i]).coeffs[1])
            (tmp777[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(3)
            (tmp777[i]).coeffs[2:order + 1] .= zero((tmp777[i]).coeffs[1])
            (F_J2_ξ[i]).coeffs[1] = constant_term(tmp777[i]) * constant_term(P_2_sin_ϕ[i])
            (F_J2_ξ[i]).coeffs[2:order + 1] .= zero((F_J2_ξ[i]).coeffs[1])
            (F_J2_ζ[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i])
            (F_J2_ζ[i]).coeffs[2:order + 1] .= zero((F_J2_ζ[i]).coeffs[1])
            (tmp781[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(4)
            (tmp781[i]).coeffs[2:order + 1] .= zero((tmp781[i]).coeffs[1])
            (F_J3_ξ[i]).coeffs[1] = constant_term(tmp781[i]) * constant_term(P_3_sin_ϕ[i])
            (F_J3_ξ[i]).coeffs[2:order + 1] .= zero((F_J3_ξ[i]).coeffs[1])
            (F_J3_ζ[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i])
            (F_J3_ζ[i]).coeffs[2:order + 1] .= zero((F_J3_ζ[i]).coeffs[1])
            (F_J_ξ[i]).coeffs[1] = identity(constant_term(F_J2_ξ[i]))
            (F_J_ξ[i]).coeffs[2:order + 1] .= zero((F_J_ξ[i]).coeffs[1])
            (F_J_ζ[i]).coeffs[1] = identity(constant_term(F_J2_ζ[i]))
            (F_J_ζ[i]).coeffs[2:order + 1] .= zero((F_J_ζ[i]).coeffs[1])
            (tmp784[i]).coeffs[1] = -(constant_term(X[i]))
            (tmp784[i]).coeffs[2:order + 1] .= zero((tmp784[i]).coeffs[1])
            (ξx[i]).coeffs[1] = constant_term(tmp784[i]) / constant_term(r_p1d2[i])
            (ξx[i]).coeffs[2:order + 1] .= zero((ξx[i]).coeffs[1])
            (tmp786[i]).coeffs[1] = -(constant_term(Y[i]))
            (tmp786[i]).coeffs[2:order + 1] .= zero((tmp786[i]).coeffs[1])
            (ξy[i]).coeffs[1] = constant_term(tmp786[i]) / constant_term(r_p1d2[i])
            (ξy[i]).coeffs[2:order + 1] .= zero((ξy[i]).coeffs[1])
            (tmp788[i]).coeffs[1] = -(constant_term(Z[i]))
            (tmp788[i]).coeffs[2:order + 1] .= zero((tmp788[i]).coeffs[1])
            (ξz[i]).coeffs[1] = constant_term(tmp788[i]) / constant_term(r_p1d2[i])
            (ξz[i]).coeffs[2:order + 1] .= zero((ξz[i]).coeffs[1])
            (ηx1[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξz[i])
            (ηx1[i]).coeffs[2:order + 1] .= zero((ηx1[i]).coeffs[1])
            (ηy1[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξx[i])
            (ηy1[i]).coeffs[2:order + 1] .= zero((ηy1[i]).coeffs[1])
            (ηz1[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξy[i])
            (ηz1[i]).coeffs[2:order + 1] .= zero((ηz1[i]).coeffs[1])
            (ηx2[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξy[i])
            (ηx2[i]).coeffs[2:order + 1] .= zero((ηx2[i]).coeffs[1])
            (ηy2[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξz[i])
            (ηy2[i]).coeffs[2:order + 1] .= zero((ηy2[i]).coeffs[1])
            (ηz2[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξx[i])
            (ηz2[i]).coeffs[2:order + 1] .= zero((ηz2[i]).coeffs[1])
            (ηx[i]).coeffs[1] = constant_term(ηx1[i]) - constant_term(ηx2[i])
            (ηx[i]).coeffs[2:order + 1] .= zero((ηx[i]).coeffs[1])
            (ηy[i]).coeffs[1] = constant_term(ηy1[i]) - constant_term(ηy2[i])
            (ηy[i]).coeffs[2:order + 1] .= zero((ηy[i]).coeffs[1])
            (ηz[i]).coeffs[1] = constant_term(ηz1[i]) - constant_term(ηz2[i])
            (ηz[i]).coeffs[2:order + 1] .= zero((ηz[i]).coeffs[1])
            (ζx1[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηz[i])
            (ζx1[i]).coeffs[2:order + 1] .= zero((ζx1[i]).coeffs[1])
            (ζy1[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηx[i])
            (ζy1[i]).coeffs[2:order + 1] .= zero((ζy1[i]).coeffs[1])
            (ζz1[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηy[i])
            (ζz1[i]).coeffs[2:order + 1] .= zero((ζz1[i]).coeffs[1])
            (ζx2[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηy[i])
            (ζx2[i]).coeffs[2:order + 1] .= zero((ζx2[i]).coeffs[1])
            (ζy2[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηz[i])
            (ζy2[i]).coeffs[2:order + 1] .= zero((ζy2[i]).coeffs[1])
            (ζz2[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηx[i])
            (ζz2[i]).coeffs[2:order + 1] .= zero((ζz2[i]).coeffs[1])
            (ζx[i]).coeffs[1] = constant_term(ζx1[i]) - constant_term(ζx2[i])
            (ζx[i]).coeffs[2:order + 1] .= zero((ζx[i]).coeffs[1])
            (ζy[i]).coeffs[1] = constant_term(ζy1[i]) - constant_term(ζy2[i])
            (ζy[i]).coeffs[2:order + 1] .= zero((ζy[i]).coeffs[1])
            (ζz[i]).coeffs[1] = constant_term(ζz1[i]) - constant_term(ζz2[i])
            (ζz[i]).coeffs[2:order + 1] .= zero((ζz[i]).coeffs[1])
            (F_J2_x1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξx[i])
            (F_J2_x1[i]).coeffs[2:order + 1] .= zero((F_J2_x1[i]).coeffs[1])
            (F_J2_y1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξy[i])
            (F_J2_y1[i]).coeffs[2:order + 1] .= zero((F_J2_y1[i]).coeffs[1])
            (F_J2_z1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξz[i])
            (F_J2_z1[i]).coeffs[2:order + 1] .= zero((F_J2_z1[i]).coeffs[1])
            (F_J2_x2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζx[i])
            (F_J2_x2[i]).coeffs[2:order + 1] .= zero((F_J2_x2[i]).coeffs[1])
            (F_J2_y2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζy[i])
            (F_J2_y2[i]).coeffs[2:order + 1] .= zero((F_J2_y2[i]).coeffs[1])
            (F_J2_z2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζz[i])
            (F_J2_z2[i]).coeffs[2:order + 1] .= zero((F_J2_z2[i]).coeffs[1])
            (F_J2_x[i]).coeffs[1] = constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i])
            (F_J2_x[i]).coeffs[2:order + 1] .= zero((F_J2_x[i]).coeffs[1])
            (F_J2_y[i]).coeffs[1] = constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i])
            (F_J2_y[i]).coeffs[2:order + 1] .= zero((F_J2_y[i]).coeffs[1])
            (F_J2_z[i]).coeffs[1] = constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i])
            (F_J2_z[i]).coeffs[2:order + 1] .= zero((F_J2_z[i]).coeffs[1])
        end
        (tmp818[i]).coeffs[1] = constant_term(ui[i]) ^ float(constant_term(2))
        (tmp818[i]).coeffs[2:order + 1] .= zero((tmp818[i]).coeffs[1])
        (tmp820[i]).coeffs[1] = constant_term(vi[i]) ^ float(constant_term(2))
        (tmp820[i]).coeffs[2:order + 1] .= zero((tmp820[i]).coeffs[1])
        (tmp821[i]).coeffs[1] = constant_term(tmp818[i]) + constant_term(tmp820[i])
        (tmp821[i]).coeffs[2:order + 1] .= zero((tmp821[i]).coeffs[1])
        (tmp823[i]).coeffs[1] = constant_term(wi[i]) ^ float(constant_term(2))
        (tmp823[i]).coeffs[2:order + 1] .= zero((tmp823[i]).coeffs[1])
        (v2[i]).coeffs[1] = constant_term(tmp821[i]) + constant_term(tmp823[i])
        (v2[i]).coeffs[2:order + 1] .= zero((v2[i]).coeffs[1])
    end
    tmp826.coeffs[1] = constant_term(q[4]) ^ float(constant_term(2))
    tmp826.coeffs[2:order + 1] .= zero(tmp826.coeffs[1])
    tmp828.coeffs[1] = constant_term(q[5]) ^ float(constant_term(2))
    tmp828.coeffs[2:order + 1] .= zero(tmp828.coeffs[1])
    tmp829.coeffs[1] = constant_term(tmp826) + constant_term(tmp828)
    tmp829.coeffs[2:order + 1] .= zero(tmp829.coeffs[1])
    tmp831.coeffs[1] = constant_term(q[6]) ^ float(constant_term(2))
    tmp831.coeffs[2:order + 1] .= zero(tmp831.coeffs[1])
    (v2[N]).coeffs[1] = constant_term(tmp829) + constant_term(tmp831)
    (v2[N]).coeffs[2:order + 1] .= zero((v2[N]).coeffs[1])
    for i = 1:Nm1
        (temp_004[i]).coeffs[1] = constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N])
        (temp_004[i]).coeffs[2:order + 1] .= zero((temp_004[i]).coeffs[1])
        (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(temp_004[i]))
        (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
        if UJ_interaction[i]
            (tmp834[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_x[i])
            (tmp834[i]).coeffs[2:order + 1] .= zero((tmp834[i]).coeffs[1])
            (temp_accX_i[i]).coeffs[1] = constant_term(accX) - constant_term(tmp834[i])
            (temp_accX_i[i]).coeffs[2:order + 1] .= zero((temp_accX_i[i]).coeffs[1])
            accX.coeffs[1] = identity(constant_term(temp_accX_i[i]))
            accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
            (tmp836[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_y[i])
            (tmp836[i]).coeffs[2:order + 1] .= zero((tmp836[i]).coeffs[1])
            (temp_accY_i[i]).coeffs[1] = constant_term(accY) - constant_term(tmp836[i])
            (temp_accY_i[i]).coeffs[2:order + 1] .= zero((temp_accY_i[i]).coeffs[1])
            accY.coeffs[1] = identity(constant_term(temp_accY_i[i]))
            accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
            (tmp838[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_z[i])
            (tmp838[i]).coeffs[2:order + 1] .= zero((tmp838[i]).coeffs[1])
            (temp_accZ_i[i]).coeffs[1] = constant_term(accZ) - constant_term(tmp838[i])
            (temp_accZ_i[i]).coeffs[2:order + 1] .= zero((temp_accZ_i[i]).coeffs[1])
            accZ.coeffs[1] = identity(constant_term(temp_accZ_i[i]))
            accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
        end
    end
    (_4ϕj[N]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[N])
    (_4ϕj[N]).coeffs[2:order + 1] .= zero((_4ϕj[N]).coeffs[1])
    for i = 1:10
        (ϕi_plus_4ϕj[i]).coeffs[1] = constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N])
        (ϕi_plus_4ϕj[i]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i]).coeffs[1])
        (tmp844[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
        (tmp844[i]).coeffs[2:order + 1] .= zero((tmp844[i]).coeffs[1])
        (tmp846[i]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i])
        (tmp846[i]).coeffs[2:order + 1] .= zero((tmp846[i]).coeffs[1])
        (tmp847[i]).coeffs[1] = constant_term(tmp844[i]) - constant_term(tmp846[i])
        (tmp847[i]).coeffs[2:order + 1] .= zero((tmp847[i]).coeffs[1])
        (sj2_plus_2si2_minus_4vivj[i]).coeffs[1] = constant_term(tmp847[i]) + constant_term(v2[N])
        (sj2_plus_2si2_minus_4vivj[i]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i]).coeffs[1])
        (ϕs_and_vs[i]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i])
        (ϕs_and_vs[i]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i]).coeffs[1])
        (Xij_t_Ui[i]).coeffs[1] = constant_term(X[i]) * constant_term(ui[i])
        (Xij_t_Ui[i]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i]).coeffs[1])
        (Yij_t_Vi[i]).coeffs[1] = constant_term(Y[i]) * constant_term(vi[i])
        (Yij_t_Vi[i]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i]).coeffs[1])
        (Zij_t_Wi[i]).coeffs[1] = constant_term(Z[i]) * constant_term(wi[i])
        (Zij_t_Wi[i]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i]).coeffs[1])
        (tmp853[i]).coeffs[1] = constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i])
        (tmp853[i]).coeffs[2:order + 1] .= zero((tmp853[i]).coeffs[1])
        (Rij_dot_Vi[i]).coeffs[1] = constant_term(tmp853[i]) + constant_term(Zij_t_Wi[i])
        (Rij_dot_Vi[i]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i]).coeffs[1])
        (tmp856[i]).coeffs[1] = constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2))
        (tmp856[i]).coeffs[2:order + 1] .= zero((tmp856[i]).coeffs[1])
        (pn1t7[i]).coeffs[1] = constant_term(tmp856[i]) / constant_term(r_p2[i])
        (pn1t7[i]).coeffs[2:order + 1] .= zero((pn1t7[i]).coeffs[1])
        (tmp859[i]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i])
        (tmp859[i]).coeffs[2:order + 1] .= zero((tmp859[i]).coeffs[1])
        (pn1t2_7[i]).coeffs[1] = constant_term(ϕs_and_vs[i]) - constant_term(tmp859[i])
        (pn1t2_7[i]).coeffs[2:order + 1] .= zero((pn1t2_7[i]).coeffs[1])
        (pn1t1_7[i]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i])
        (pn1t1_7[i]).coeffs[2:order + 1] .= zero((pn1t1_7[i]).coeffs[1])
        (pNX_t_X[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(X[i])
        (pNX_t_X[i]).coeffs[2:order + 1] .= zero((pNX_t_X[i]).coeffs[1])
        (pNY_t_Y[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(Y[i])
        (pNY_t_Y[i]).coeffs[2:order + 1] .= zero((pNY_t_Y[i]).coeffs[1])
        (pNZ_t_Z[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(Z[i])
        (pNZ_t_Z[i]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i]).coeffs[1])
        (tmp866[i]).coeffs[1] = constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i])
        (tmp866[i]).coeffs[2:order + 1] .= zero((tmp866[i]).coeffs[1])
        (tmp867[i]).coeffs[1] = constant_term(tmp866[i]) + constant_term(pNZ_t_Z[i])
        (tmp867[i]).coeffs[2:order + 1] .= zero((tmp867[i]).coeffs[1])
        (tmp868[i]).coeffs[1] = constant_term(0.5) * constant_term(tmp867[i])
        (tmp868[i]).coeffs[2:order + 1] .= zero((tmp868[i]).coeffs[1])
        (pn1[i]).coeffs[1] = constant_term(pn1t1_7[i]) + constant_term(tmp868[i])
        (pn1[i]).coeffs[2:order + 1] .= zero((pn1[i]).coeffs[1])
        (X_t_pn1[i]).coeffs[1] = constant_term(newton_acc_X[i]) * constant_term(pn1[i])
        (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
        (Y_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Y[i]) * constant_term(pn1[i])
        (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
        (Z_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Z[i]) * constant_term(pn1[i])
        (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
        (pNX_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(pn3[i])
        (pNX_t_pn3[i]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i]).coeffs[1])
        (pNY_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(pn3[i])
        (pNY_t_pn3[i]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i]).coeffs[1])
        (pNZ_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(pn3[i])
        (pNZ_t_pn3[i]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i]).coeffs[1])
    end
    for i = 1:10
        (tmp876[i]).coeffs[1] = constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i])
        (tmp876[i]).coeffs[2:order + 1] .= zero((tmp876[i]).coeffs[1])
        (termpnx[i]).coeffs[1] = constant_term(X_t_pn1[i]) + constant_term(tmp876[i])
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (tmp879[i]).coeffs[1] = constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i])
        (tmp879[i]).coeffs[2:order + 1] .= zero((tmp879[i]).coeffs[1])
        (termpny[i]).coeffs[1] = constant_term(Y_t_pn1[i]) + constant_term(tmp879[i])
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (tmp882[i]).coeffs[1] = constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i])
        (tmp882[i]).coeffs[2:order + 1] .= zero((tmp882[i]).coeffs[1])
        (termpnz[i]).coeffs[1] = constant_term(Z_t_pn1[i]) + constant_term(tmp882[i])
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    for i = 11:Nm1
        (X_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_X[i])
        (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
        (Y_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Y[i])
        (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
        (Z_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Z[i])
        (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
    end
    for i = 11:Nm1
        (termpnx[i]).coeffs[1] = identity(constant_term(X_t_pn1[i]))
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (termpny[i]).coeffs[1] = identity(constant_term(Y_t_pn1[i]))
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (termpnz[i]).coeffs[1] = identity(constant_term(Z_t_pn1[i]))
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    postNewtonX.coeffs[1] = constant_term(pntempX) * constant_term(c_m2)
    postNewtonX.coeffs[2:order + 1] .= zero(postNewtonX.coeffs[1])
    postNewtonY.coeffs[1] = constant_term(pntempY) * constant_term(c_m2)
    postNewtonY.coeffs[2:order + 1] .= zero(postNewtonY.coeffs[1])
    postNewtonZ.coeffs[1] = constant_term(pntempZ) * constant_term(c_m2)
    postNewtonZ.coeffs[2:order + 1] .= zero(postNewtonZ.coeffs[1])
    tmp894.coeffs[1] = constant_term(Y[1]) * constant_term(W[1])
    tmp894.coeffs[2:order + 1] .= zero(tmp894.coeffs[1])
    tmp895.coeffs[1] = constant_term(Z[1]) * constant_term(V[1])
    tmp895.coeffs[2:order + 1] .= zero(tmp895.coeffs[1])
    hx.coeffs[1] = constant_term(tmp894) - constant_term(tmp895)
    hx.coeffs[2:order + 1] .= zero(hx.coeffs[1])
    tmp897.coeffs[1] = constant_term(Z[1]) * constant_term(U[1])
    tmp897.coeffs[2:order + 1] .= zero(tmp897.coeffs[1])
    tmp898.coeffs[1] = constant_term(X[1]) * constant_term(W[1])
    tmp898.coeffs[2:order + 1] .= zero(tmp898.coeffs[1])
    hy.coeffs[1] = constant_term(tmp897) - constant_term(tmp898)
    hy.coeffs[2:order + 1] .= zero(hy.coeffs[1])
    tmp900.coeffs[1] = constant_term(X[1]) * constant_term(V[1])
    tmp900.coeffs[2:order + 1] .= zero(tmp900.coeffs[1])
    tmp901.coeffs[1] = constant_term(Y[1]) * constant_term(U[1])
    tmp901.coeffs[2:order + 1] .= zero(tmp901.coeffs[1])
    hz.coeffs[1] = constant_term(tmp900) - constant_term(tmp901)
    hz.coeffs[2:order + 1] .= zero(hz.coeffs[1])
    tmp903.coeffs[1] = constant_term(hz) * constant_term(Y[1])
    tmp903.coeffs[2:order + 1] .= zero(tmp903.coeffs[1])
    tmp904.coeffs[1] = constant_term(hy) * constant_term(Z[1])
    tmp904.coeffs[2:order + 1] .= zero(tmp904.coeffs[1])
    t_x.coeffs[1] = constant_term(tmp903) - constant_term(tmp904)
    t_x.coeffs[2:order + 1] .= zero(t_x.coeffs[1])
    tmp906.coeffs[1] = constant_term(hx) * constant_term(Z[1])
    tmp906.coeffs[2:order + 1] .= zero(tmp906.coeffs[1])
    tmp907.coeffs[1] = constant_term(hz) * constant_term(X[1])
    tmp907.coeffs[2:order + 1] .= zero(tmp907.coeffs[1])
    t_y.coeffs[1] = constant_term(tmp906) - constant_term(tmp907)
    t_y.coeffs[2:order + 1] .= zero(t_y.coeffs[1])
    tmp909.coeffs[1] = constant_term(hy) * constant_term(X[1])
    tmp909.coeffs[2:order + 1] .= zero(tmp909.coeffs[1])
    tmp910.coeffs[1] = constant_term(hx) * constant_term(Y[1])
    tmp910.coeffs[2:order + 1] .= zero(tmp910.coeffs[1])
    t_z.coeffs[1] = constant_term(tmp909) - constant_term(tmp910)
    t_z.coeffs[2:order + 1] .= zero(t_z.coeffs[1])
    tmp913.coeffs[1] = constant_term(t_x) ^ float(constant_term(2))
    tmp913.coeffs[2:order + 1] .= zero(tmp913.coeffs[1])
    tmp915.coeffs[1] = constant_term(t_y) ^ float(constant_term(2))
    tmp915.coeffs[2:order + 1] .= zero(tmp915.coeffs[1])
    tmp916.coeffs[1] = constant_term(tmp913) + constant_term(tmp915)
    tmp916.coeffs[2:order + 1] .= zero(tmp916.coeffs[1])
    tmp918.coeffs[1] = constant_term(t_z) ^ float(constant_term(2))
    tmp918.coeffs[2:order + 1] .= zero(tmp918.coeffs[1])
    tmp919.coeffs[1] = constant_term(tmp916) + constant_term(tmp918)
    tmp919.coeffs[2:order + 1] .= zero(tmp919.coeffs[1])
    t_norm.coeffs[1] = sqrt(constant_term(tmp919))
    t_norm.coeffs[2:order + 1] .= zero(t_norm.coeffs[1])
    t_x_unit.coeffs[1] = constant_term(t_x) / constant_term(t_norm)
    t_x_unit.coeffs[2:order + 1] .= zero(t_x_unit.coeffs[1])
    t_y_unit.coeffs[1] = constant_term(t_y) / constant_term(t_norm)
    t_y_unit.coeffs[2:order + 1] .= zero(t_y_unit.coeffs[1])
    t_z_unit.coeffs[1] = constant_term(t_z) / constant_term(t_norm)
    t_z_unit.coeffs[2:order + 1] .= zero(t_z_unit.coeffs[1])
    tmp924.coeffs[1] = constant_term(X[1]) / constant_term(r_p1d2[1])
    tmp924.coeffs[2:order + 1] .= zero(tmp924.coeffs[1])
    r_x_unit.coeffs[1] = -(constant_term(tmp924))
    r_x_unit.coeffs[2:order + 1] .= zero(r_x_unit.coeffs[1])
    tmp926.coeffs[1] = constant_term(Y[1]) / constant_term(r_p1d2[1])
    tmp926.coeffs[2:order + 1] .= zero(tmp926.coeffs[1])
    r_y_unit.coeffs[1] = -(constant_term(tmp926))
    r_y_unit.coeffs[2:order + 1] .= zero(r_y_unit.coeffs[1])
    tmp928.coeffs[1] = constant_term(Z[1]) / constant_term(r_p1d2[1])
    tmp928.coeffs[2:order + 1] .= zero(tmp928.coeffs[1])
    r_z_unit.coeffs[1] = -(constant_term(tmp928))
    r_z_unit.coeffs[2:order + 1] .= zero(r_z_unit.coeffs[1])
    g_r.coeffs[1] = identity(constant_term(r_p2[1]))
    g_r.coeffs[2:order + 1] .= zero(g_r.coeffs[1])
    A2_t_g_r.coeffs[1] = constant_term(q[7]) / constant_term(g_r)
    A2_t_g_r.coeffs[2:order + 1] .= zero(A2_t_g_r.coeffs[1])
    A1_t_g_r.coeffs[1] = constant_term(q[8]) / constant_term(g_r)
    A1_t_g_r.coeffs[2:order + 1] .= zero(A1_t_g_r.coeffs[1])
    tmp932.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_x_unit)
    tmp932.coeffs[2:order + 1] .= zero(tmp932.coeffs[1])
    tmp933.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_x_unit)
    tmp933.coeffs[2:order + 1] .= zero(tmp933.coeffs[1])
    NGAx.coeffs[1] = constant_term(tmp932) + constant_term(tmp933)
    NGAx.coeffs[2:order + 1] .= zero(NGAx.coeffs[1])
    tmp935.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_y_unit)
    tmp935.coeffs[2:order + 1] .= zero(tmp935.coeffs[1])
    tmp936.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_y_unit)
    tmp936.coeffs[2:order + 1] .= zero(tmp936.coeffs[1])
    NGAy.coeffs[1] = constant_term(tmp935) + constant_term(tmp936)
    NGAy.coeffs[2:order + 1] .= zero(NGAy.coeffs[1])
    tmp938.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_z_unit)
    tmp938.coeffs[2:order + 1] .= zero(tmp938.coeffs[1])
    tmp939.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_z_unit)
    tmp939.coeffs[2:order + 1] .= zero(tmp939.coeffs[1])
    NGAz.coeffs[1] = constant_term(tmp938) + constant_term(tmp939)
    NGAz.coeffs[2:order + 1] .= zero(NGAz.coeffs[1])
    tmp941.coeffs[1] = constant_term(postNewtonX) + constant_term(accX)
    tmp941.coeffs[2:order + 1] .= zero(tmp941.coeffs[1])
    (dq[4]).coeffs[1] = constant_term(tmp941) + constant_term(NGAx)
    (dq[4]).coeffs[2:order + 1] .= zero((dq[4]).coeffs[1])
    tmp943.coeffs[1] = constant_term(postNewtonY) + constant_term(accY)
    tmp943.coeffs[2:order + 1] .= zero(tmp943.coeffs[1])
    (dq[5]).coeffs[1] = constant_term(tmp943) + constant_term(NGAy)
    (dq[5]).coeffs[2:order + 1] .= zero((dq[5]).coeffs[1])
    tmp945.coeffs[1] = constant_term(postNewtonZ) + constant_term(accZ)
    tmp945.coeffs[2:order + 1] .= zero(tmp945.coeffs[1])
    (dq[6]).coeffs[1] = constant_term(tmp945) + constant_term(NGAz)
    (dq[6]).coeffs[2:order + 1] .= zero((dq[6]).coeffs[1])
    (dq[7]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[7]).coeffs[2:order + 1] .= zero((dq[7]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(pntempX, zero_q_1, ord)
        TaylorSeries.identity!(pntempY, zero_q_1, ord)
        TaylorSeries.identity!(pntempZ, zero_q_1, ord)
        TaylorSeries.identity!(accX, zero_q_1, ord)
        TaylorSeries.identity!(accY, zero_q_1, ord)
        TaylorSeries.identity!(accZ, zero_q_1, ord)
        TaylorSeries.identity!(dq[1], q[4], ord)
        TaylorSeries.identity!(dq[2], q[5], ord)
        TaylorSeries.identity!(dq[3], q[6], ord)
        TaylorSeries.identity!(newtonianNb_Potential[N], zero_q_1, ord)
        for i = 1:Nm1
            TaylorSeries.identity!(ui[i], ss16asteph_t[3 * ((N - 1) + i) - 2], ord)
            TaylorSeries.identity!(vi[i], ss16asteph_t[3 * ((N - 1) + i) - 1], ord)
            TaylorSeries.identity!(wi[i], ss16asteph_t[3 * ((N - 1) + i)], ord)
            TaylorSeries.subst!(X[i], ss16asteph_t[3i - 2], q[1], ord)
            TaylorSeries.subst!(Y[i], ss16asteph_t[3i - 1], q[2], ord)
            TaylorSeries.subst!(Z[i], ss16asteph_t[3i], q[3], ord)
            TaylorSeries.subst!(U[i], ui[i], dq[1], ord)
            TaylorSeries.subst!(V[i], vi[i], dq[2], ord)
            TaylorSeries.subst!(W[i], wi[i], dq[3], ord)
            TaylorSeries.mul!(tmp686[1], 4, dq[1], ord)
            TaylorSeries.mul!(tmp688[i], 3, ui[i], ord)
            TaylorSeries.subst!(_4U_m_3X[i], tmp686[1], tmp688[i], ord)
            TaylorSeries.mul!(tmp691[2], 4, dq[2], ord)
            TaylorSeries.mul!(tmp693[i], 3, vi[i], ord)
            TaylorSeries.subst!(_4V_m_3Y[i], tmp691[2], tmp693[i], ord)
            TaylorSeries.mul!(tmp696[3], 4, dq[3], ord)
            TaylorSeries.mul!(tmp698[i], 3, wi[i], ord)
            TaylorSeries.subst!(_4W_m_3Z[i], tmp696[3], tmp698[i], ord)
            TaylorSeries.mul!(pn2x[i], X[i], _4U_m_3X[i], ord)
            TaylorSeries.mul!(pn2y[i], Y[i], _4V_m_3Y[i], ord)
            TaylorSeries.mul!(pn2z[i], Z[i], _4W_m_3Z[i], ord)
            TaylorSeries.mul!(UU[i], ui[i], dq[1], ord)
            TaylorSeries.mul!(VV[i], vi[i], dq[2], ord)
            TaylorSeries.mul!(WW[i], wi[i], dq[3], ord)
            TaylorSeries.add!(tmp706[i], UU[i], VV[i], ord)
            TaylorSeries.add!(vi_dot_vj[i], tmp706[i], WW[i], ord)
            TaylorSeries.pow!(tmp709[i], X[i], 2, ord)
            TaylorSeries.pow!(tmp711[i], Y[i], 2, ord)
            TaylorSeries.add!(tmp712[i], tmp709[i], tmp711[i], ord)
            TaylorSeries.pow!(tmp714[i], Z[i], 2, ord)
            TaylorSeries.add!(r_p2[i], tmp712[i], tmp714[i], ord)
            TaylorSeries.sqrt!(r_p1d2[i], r_p2[i], ord)
            TaylorSeries.pow!(r_p3d2[i], r_p2[i], 1.5, ord)
            TaylorSeries.pow!(r_p7d2[i], r_p2[i], 3.5, ord)
            TaylorSeries.div!(newtonianCoeff[i], μ[i], r_p3d2[i], ord)
            TaylorSeries.add!(tmp722[i], pn2x[i], pn2y[i], ord)
            TaylorSeries.add!(tmp723[i], tmp722[i], pn2z[i], ord)
            TaylorSeries.mul!(pn2[i], newtonianCoeff[i], tmp723[i], ord)
            TaylorSeries.mul!(newton_acc_X[i], X[i], newtonianCoeff[i], ord)
            TaylorSeries.mul!(newton_acc_Y[i], Y[i], newtonianCoeff[i], ord)
            TaylorSeries.mul!(newton_acc_Z[i], Z[i], newtonianCoeff[i], ord)
            TaylorSeries.div!(newtonian1b_Potential[i], μ[i], r_p1d2[i], ord)
            TaylorSeries.mul!(pn3[i], 3.5, newtonian1b_Potential[i], ord)
            TaylorSeries.mul!(U_t_pn2[i], pn2[i], U[i], ord)
            TaylorSeries.mul!(V_t_pn2[i], pn2[i], V[i], ord)
            TaylorSeries.mul!(W_t_pn2[i], pn2[i], W[i], ord)
            if UJ_interaction[i]
                TaylorSeries.subst!(tmp734[i], X[i], ord)
                TaylorSeries.mul!(t31[i], tmp734[i], M_[1, 3, i], ord)
                TaylorSeries.subst!(tmp736[i], Y[i], ord)
                TaylorSeries.mul!(t32[i], tmp736[i], M_[2, 3, i], ord)
                TaylorSeries.subst!(tmp738[i], Z[i], ord)
                TaylorSeries.mul!(t33[i], tmp738[i], M_[3, 3, i], ord)
                TaylorSeries.add!(tmp740[i], t31[i], t32[i], ord)
                TaylorSeries.add!(r_sin_ϕ[i], tmp740[i], t33[i], ord)
                TaylorSeries.div!(sin_ϕ[i], r_sin_ϕ[i], r_p1d2[i], ord)
                TaylorSeries.asin!(ϕ[i], sin_ϕ[i], tmp947[i], ord)
                TaylorSeries.sincos!(tmp948[i], cos_ϕ[i], ϕ[i], ord)
                TaylorSeries.pow!(sin2_ϕ[i], sin_ϕ[i], 2, ord)
                TaylorSeries.pow!(sin3_ϕ[i], sin_ϕ[i], 3, ord)
                TaylorSeries.mul!(tmp750[i], 1.5, sin2_ϕ[i], ord)
                TaylorSeries.subst!(P_2_sin_ϕ[i], tmp750[i], 0.5, ord)
                TaylorSeries.mul!(∂P_2_sin_ϕ[i], 3, sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp756[i], -1.5, sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp758[i], 2.5, sin3_ϕ[i], ord)
                TaylorSeries.add!(P_3_sin_ϕ[i], tmp756[i], tmp758[i], ord)
                TaylorSeries.mul!(tmp762[i], 7.5, sin2_ϕ[i], ord)
                TaylorSeries.add!(∂P_3_sin_ϕ[i], -1.5, tmp762[i], ord)
                TaylorSeries.pow!(tmp765[i], r_p2[i], 2, ord)
                TaylorSeries.div!(tmp766[i], Λ2[i], tmp765[i], ord)
                TaylorSeries.subst!(Λ2j_div_r4[i], tmp766[i], ord)
                TaylorSeries.pow!(tmp769[i], r_p1d2[i], 5, ord)
                TaylorSeries.div!(tmp770[i], Λ3[i], tmp769[i], ord)
                TaylorSeries.subst!(Λ3j_div_r5[i], tmp770[i], ord)
                TaylorSeries.subst!(tmp772[i], cos_ϕ[i], ord)
                TaylorSeries.mul!(m_c_ϕ_∂P_2[i], tmp772[i], ∂P_2_sin_ϕ[i], ord)
                TaylorSeries.subst!(tmp774[i], cos_ϕ[i], ord)
                TaylorSeries.mul!(m_c_ϕ_∂P_3[i], tmp774[i], ∂P_3_sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp777[i], Λ2j_div_r4[i], 3, ord)
                TaylorSeries.mul!(F_J2_ξ[i], tmp777[i], P_2_sin_ϕ[i], ord)
                TaylorSeries.mul!(F_J2_ζ[i], Λ2j_div_r4[i], m_c_ϕ_∂P_2[i], ord)
                TaylorSeries.mul!(tmp781[i], Λ3j_div_r5[i], 4, ord)
                TaylorSeries.mul!(F_J3_ξ[i], tmp781[i], P_3_sin_ϕ[i], ord)
                TaylorSeries.mul!(F_J3_ζ[i], Λ3j_div_r5[i], m_c_ϕ_∂P_3[i], ord)
                TaylorSeries.identity!(F_J_ξ[i], F_J2_ξ[i], ord)
                TaylorSeries.identity!(F_J_ζ[i], F_J2_ζ[i], ord)
                TaylorSeries.subst!(tmp784[i], X[i], ord)
                TaylorSeries.div!(ξx[i], tmp784[i], r_p1d2[i], ord)
                TaylorSeries.subst!(tmp786[i], Y[i], ord)
                TaylorSeries.div!(ξy[i], tmp786[i], r_p1d2[i], ord)
                TaylorSeries.subst!(tmp788[i], Z[i], ord)
                TaylorSeries.div!(ξz[i], tmp788[i], r_p1d2[i], ord)
                TaylorSeries.mul!(ηx1[i], M_[2, 3, i], ξz[i], ord)
                TaylorSeries.mul!(ηy1[i], M_[3, 3, i], ξx[i], ord)
                TaylorSeries.mul!(ηz1[i], M_[1, 3, i], ξy[i], ord)
                TaylorSeries.mul!(ηx2[i], M_[3, 3, i], ξy[i], ord)
                TaylorSeries.mul!(ηy2[i], M_[1, 3, i], ξz[i], ord)
                TaylorSeries.mul!(ηz2[i], M_[2, 3, i], ξx[i], ord)
                TaylorSeries.subst!(ηx[i], ηx1[i], ηx2[i], ord)
                TaylorSeries.subst!(ηy[i], ηy1[i], ηy2[i], ord)
                TaylorSeries.subst!(ηz[i], ηz1[i], ηz2[i], ord)
                TaylorSeries.mul!(ζx1[i], ξy[i], ηz[i], ord)
                TaylorSeries.mul!(ζy1[i], ξz[i], ηx[i], ord)
                TaylorSeries.mul!(ζz1[i], ξx[i], ηy[i], ord)
                TaylorSeries.mul!(ζx2[i], ξz[i], ηy[i], ord)
                TaylorSeries.mul!(ζy2[i], ξx[i], ηz[i], ord)
                TaylorSeries.mul!(ζz2[i], ξy[i], ηx[i], ord)
                TaylorSeries.subst!(ζx[i], ζx1[i], ζx2[i], ord)
                TaylorSeries.subst!(ζy[i], ζy1[i], ζy2[i], ord)
                TaylorSeries.subst!(ζz[i], ζz1[i], ζz2[i], ord)
                TaylorSeries.mul!(F_J2_x1[i], F_J_ξ[i], ξx[i], ord)
                TaylorSeries.mul!(F_J2_y1[i], F_J_ξ[i], ξy[i], ord)
                TaylorSeries.mul!(F_J2_z1[i], F_J_ξ[i], ξz[i], ord)
                TaylorSeries.mul!(F_J2_x2[i], F_J_ζ[i], ζx[i], ord)
                TaylorSeries.mul!(F_J2_y2[i], F_J_ζ[i], ζy[i], ord)
                TaylorSeries.mul!(F_J2_z2[i], F_J_ζ[i], ζz[i], ord)
                TaylorSeries.add!(F_J2_x[i], F_J2_x1[i], F_J2_x2[i], ord)
                TaylorSeries.add!(F_J2_y[i], F_J2_y1[i], F_J2_y2[i], ord)
                TaylorSeries.add!(F_J2_z[i], F_J2_z1[i], F_J2_z2[i], ord)
            end
            TaylorSeries.pow!(tmp818[i], ui[i], 2, ord)
            TaylorSeries.pow!(tmp820[i], vi[i], 2, ord)
            TaylorSeries.add!(tmp821[i], tmp818[i], tmp820[i], ord)
            TaylorSeries.pow!(tmp823[i], wi[i], 2, ord)
            TaylorSeries.add!(v2[i], tmp821[i], tmp823[i], ord)
        end
        TaylorSeries.pow!(tmp826, q[4], 2, ord)
        TaylorSeries.pow!(tmp828, q[5], 2, ord)
        TaylorSeries.add!(tmp829, tmp826, tmp828, ord)
        TaylorSeries.pow!(tmp831, q[6], 2, ord)
        TaylorSeries.add!(v2[N], tmp829, tmp831, ord)
        for i = 1:Nm1
            TaylorSeries.add!(temp_004[i], newtonian1b_Potential[i], newtonianNb_Potential[N], ord)
            TaylorSeries.identity!(newtonianNb_Potential[N], temp_004[i], ord)
            if UJ_interaction[i]
                TaylorSeries.mul!(tmp834[i], μ[i], F_J2_x[i], ord)
                TaylorSeries.subst!(temp_accX_i[i], accX, tmp834[i], ord)
                TaylorSeries.identity!(accX, temp_accX_i[i], ord)
                TaylorSeries.mul!(tmp836[i], μ[i], F_J2_y[i], ord)
                TaylorSeries.subst!(temp_accY_i[i], accY, tmp836[i], ord)
                TaylorSeries.identity!(accY, temp_accY_i[i], ord)
                TaylorSeries.mul!(tmp838[i], μ[i], F_J2_z[i], ord)
                TaylorSeries.subst!(temp_accZ_i[i], accZ, tmp838[i], ord)
                TaylorSeries.identity!(accZ, temp_accZ_i[i], ord)
            end
        end
        TaylorSeries.mul!(_4ϕj[N], 4, newtonianNb_Potential[N], ord)
        for i = 1:10
            TaylorSeries.add!(ϕi_plus_4ϕj[i], newtonianNb_Potential_t[i], _4ϕj[N], ord)
            TaylorSeries.mul!(tmp844[i], 2, v2[i], ord)
            TaylorSeries.mul!(tmp846[i], 4, vi_dot_vj[i], ord)
            TaylorSeries.subst!(tmp847[i], tmp844[i], tmp846[i], ord)
            TaylorSeries.add!(sj2_plus_2si2_minus_4vivj[i], tmp847[i], v2[N], ord)
            TaylorSeries.subst!(ϕs_and_vs[i], sj2_plus_2si2_minus_4vivj[i], ϕi_plus_4ϕj[i], ord)
            TaylorSeries.mul!(Xij_t_Ui[i], X[i], ui[i], ord)
            TaylorSeries.mul!(Yij_t_Vi[i], Y[i], vi[i], ord)
            TaylorSeries.mul!(Zij_t_Wi[i], Z[i], wi[i], ord)
            TaylorSeries.add!(tmp853[i], Xij_t_Ui[i], Yij_t_Vi[i], ord)
            TaylorSeries.add!(Rij_dot_Vi[i], tmp853[i], Zij_t_Wi[i], ord)
            TaylorSeries.pow!(tmp856[i], Rij_dot_Vi[i], 2, ord)
            TaylorSeries.div!(pn1t7[i], tmp856[i], r_p2[i], ord)
            TaylorSeries.mul!(tmp859[i], 1.5, pn1t7[i], ord)
            TaylorSeries.subst!(pn1t2_7[i], ϕs_and_vs[i], tmp859[i], ord)
            TaylorSeries.add!(pn1t1_7[i], c_p2, pn1t2_7[i], ord)
            TaylorSeries.mul!(pNX_t_X[i], acceph_t[3i - 2], X[i], ord)
            TaylorSeries.mul!(pNY_t_Y[i], acceph_t[3i - 1], Y[i], ord)
            TaylorSeries.mul!(pNZ_t_Z[i], acceph_t[3i], Z[i], ord)
            TaylorSeries.add!(tmp866[i], pNX_t_X[i], pNY_t_Y[i], ord)
            TaylorSeries.add!(tmp867[i], tmp866[i], pNZ_t_Z[i], ord)
            TaylorSeries.mul!(tmp868[i], 0.5, tmp867[i], ord)
            TaylorSeries.add!(pn1[i], pn1t1_7[i], tmp868[i], ord)
            TaylorSeries.mul!(X_t_pn1[i], newton_acc_X[i], pn1[i], ord)
            TaylorSeries.mul!(Y_t_pn1[i], newton_acc_Y[i], pn1[i], ord)
            TaylorSeries.mul!(Z_t_pn1[i], newton_acc_Z[i], pn1[i], ord)
            TaylorSeries.mul!(pNX_t_pn3[i], acceph_t[3i - 2], pn3[i], ord)
            TaylorSeries.mul!(pNY_t_pn3[i], acceph_t[3i - 1], pn3[i], ord)
            TaylorSeries.mul!(pNZ_t_pn3[i], acceph_t[3i], pn3[i], ord)
        end
        for i = 1:10
            TaylorSeries.add!(tmp876[i], U_t_pn2[i], pNX_t_pn3[i], ord)
            TaylorSeries.add!(termpnx[i], X_t_pn1[i], tmp876[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.add!(tmp879[i], V_t_pn2[i], pNY_t_pn3[i], ord)
            TaylorSeries.add!(termpny[i], Y_t_pn1[i], tmp879[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.add!(tmp882[i], W_t_pn2[i], pNZ_t_pn3[i], ord)
            TaylorSeries.add!(termpnz[i], Z_t_pn1[i], tmp882[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        for i = 11:Nm1
            TaylorSeries.mul!(X_t_pn1[i], c_p2, newton_acc_X[i], ord)
            TaylorSeries.mul!(Y_t_pn1[i], c_p2, newton_acc_Y[i], ord)
            TaylorSeries.mul!(Z_t_pn1[i], c_p2, newton_acc_Z[i], ord)
        end
        for i = 11:Nm1
            TaylorSeries.identity!(termpnx[i], X_t_pn1[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.identity!(termpny[i], Y_t_pn1[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.identity!(termpnz[i], Z_t_pn1[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        TaylorSeries.mul!(postNewtonX, pntempX, c_m2, ord)
        TaylorSeries.mul!(postNewtonY, pntempY, c_m2, ord)
        TaylorSeries.mul!(postNewtonZ, pntempZ, c_m2, ord)
        TaylorSeries.mul!(tmp894, Y[1], W[1], ord)
        TaylorSeries.mul!(tmp895, Z[1], V[1], ord)
        TaylorSeries.subst!(hx, tmp894, tmp895, ord)
        TaylorSeries.mul!(tmp897, Z[1], U[1], ord)
        TaylorSeries.mul!(tmp898, X[1], W[1], ord)
        TaylorSeries.subst!(hy, tmp897, tmp898, ord)
        TaylorSeries.mul!(tmp900, X[1], V[1], ord)
        TaylorSeries.mul!(tmp901, Y[1], U[1], ord)
        TaylorSeries.subst!(hz, tmp900, tmp901, ord)
        TaylorSeries.mul!(tmp903, hz, Y[1], ord)
        TaylorSeries.mul!(tmp904, hy, Z[1], ord)
        TaylorSeries.subst!(t_x, tmp903, tmp904, ord)
        TaylorSeries.mul!(tmp906, hx, Z[1], ord)
        TaylorSeries.mul!(tmp907, hz, X[1], ord)
        TaylorSeries.subst!(t_y, tmp906, tmp907, ord)
        TaylorSeries.mul!(tmp909, hy, X[1], ord)
        TaylorSeries.mul!(tmp910, hx, Y[1], ord)
        TaylorSeries.subst!(t_z, tmp909, tmp910, ord)
        TaylorSeries.pow!(tmp913, t_x, 2, ord)
        TaylorSeries.pow!(tmp915, t_y, 2, ord)
        TaylorSeries.add!(tmp916, tmp913, tmp915, ord)
        TaylorSeries.pow!(tmp918, t_z, 2, ord)
        TaylorSeries.add!(tmp919, tmp916, tmp918, ord)
        TaylorSeries.sqrt!(t_norm, tmp919, ord)
        TaylorSeries.div!(t_x_unit, t_x, t_norm, ord)
        TaylorSeries.div!(t_y_unit, t_y, t_norm, ord)
        TaylorSeries.div!(t_z_unit, t_z, t_norm, ord)
        TaylorSeries.div!(tmp924, X[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_x_unit, tmp924, ord)
        TaylorSeries.div!(tmp926, Y[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_y_unit, tmp926, ord)
        TaylorSeries.div!(tmp928, Z[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_z_unit, tmp928, ord)
        TaylorSeries.identity!(g_r, r_p2[1], ord)
        TaylorSeries.div!(A2_t_g_r, q[7], g_r, ord)
        TaylorSeries.div!(A1_t_g_r, q[8], g_r, ord)
        TaylorSeries.mul!(tmp932, A2_t_g_r, t_x_unit, ord)
        TaylorSeries.mul!(tmp933, A1_t_g_r, r_x_unit, ord)
        TaylorSeries.add!(NGAx, tmp932, tmp933, ord)
        TaylorSeries.mul!(tmp935, A2_t_g_r, t_y_unit, ord)
        TaylorSeries.mul!(tmp936, A1_t_g_r, r_y_unit, ord)
        TaylorSeries.add!(NGAy, tmp935, tmp936, ord)
        TaylorSeries.mul!(tmp938, A2_t_g_r, t_z_unit, ord)
        TaylorSeries.mul!(tmp939, A1_t_g_r, r_z_unit, ord)
        TaylorSeries.add!(NGAz, tmp938, tmp939, ord)
        TaylorSeries.add!(tmp941, postNewtonX, accX, ord)
        TaylorSeries.add!(dq[4], tmp941, NGAx, ord)
        TaylorSeries.add!(tmp943, postNewtonY, accY, ord)
        TaylorSeries.add!(dq[5], tmp943, NGAy, ord)
        TaylorSeries.add!(tmp945, postNewtonZ, accZ, ord)
        TaylorSeries.add!(dq[6], tmp945, NGAz, ord)
        TaylorSeries.identity!(dq[7], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    X = Array{S}(undef, N)
    Y = Array{S}(undef, N)
    Z = Array{S}(undef, N)
    r_p2 = Array{S}(undef, N)
    r_p1d2 = Array{S}(undef, N)
    r_p3d2 = Array{S}(undef, N)
    r_p7d2 = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N)
    ui = Array{S}(undef, N - 1)
    vi = Array{S}(undef, N - 1)
    wi = Array{S}(undef, N - 1)
    U = Array{S}(undef, N)
    V = Array{S}(undef, N)
    W = Array{S}(undef, N)
    _4U_m_3X = Array{S}(undef, N)
    _4V_m_3Y = Array{S}(undef, N)
    _4W_m_3Z = Array{S}(undef, N)
    UU = Array{S}(undef, N)
    VV = Array{S}(undef, N)
    WW = Array{S}(undef, N)
    newtonian1b_Potential = Array{S}(undef, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N)
    newton_acc_Y = Array{S}(undef, N)
    newton_acc_Z = Array{S}(undef, N)
    v2 = Array{S}(undef, N)
    vi_dot_vj = Array{S}(undef, N)
    pn2 = Array{S}(undef, N)
    U_t_pn2 = Array{S}(undef, N)
    V_t_pn2 = Array{S}(undef, N)
    W_t_pn2 = Array{S}(undef, N)
    pn3 = Array{S}(undef, N)
    pNX_t_pn3 = Array{S}(undef, N)
    pNY_t_pn3 = Array{S}(undef, N)
    pNZ_t_pn3 = Array{S}(undef, N)
    _4ϕj = Array{S}(undef, N)
    ϕi_plus_4ϕj = Array{S}(undef, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N)
    ϕs_and_vs = Array{S}(undef, N)
    pn1t1_7 = Array{S}(undef, N)
    pNX_t_X = Array{S}(undef, N)
    pNY_t_Y = Array{S}(undef, N)
    pNZ_t_Z = Array{S}(undef, N)
    pn1 = Array{S}(undef, N)
    X_t_pn1 = Array{S}(undef, N)
    Y_t_pn1 = Array{S}(undef, N)
    Z_t_pn1 = Array{S}(undef, N)
    pntempX = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempY = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempZ = Taylor1(identity(constant_term(zero_q_1)), order)
    t31 = Array{S}(undef, N)
    t32 = Array{S}(undef, N)
    t33 = Array{S}(undef, N)
    r_sin_ϕ = Array{S}(undef, N)
    sin_ϕ = Array{S}(undef, N)
    ϕ = Array{S}(undef, N)
    cos_ϕ = Array{S}(undef, N)
    sin2_ϕ = Array{S}(undef, N)
    sin3_ϕ = Array{S}(undef, N)
    sin4_ϕ = Array{S}(undef, N)
    F_J2_x = Array{S}(undef, N)
    F_J2_y = Array{S}(undef, N)
    F_J2_z = Array{S}(undef, N)
    F_J2_x1 = Array{S}(undef, N)
    F_J2_y1 = Array{S}(undef, N)
    F_J2_z1 = Array{S}(undef, N)
    F_J2_x2 = Array{S}(undef, N)
    F_J2_y2 = Array{S}(undef, N)
    F_J2_z2 = Array{S}(undef, N)
    temp_accX_i = Array{S}(undef, N)
    temp_accY_i = Array{S}(undef, N)
    temp_accZ_i = Array{S}(undef, N)
    P_2_sin_ϕ = Array{S}(undef, N)
    ∂P_2_sin_ϕ = Array{S}(undef, N)
    P_3_sin_ϕ = Array{S}(undef, N)
    ∂P_3_sin_ϕ = Array{S}(undef, N)
    m_c_ϕ_∂P_2 = Array{S}(undef, N)
    m_c_ϕ_∂P_3 = Array{S}(undef, N)
    Λ2j_div_r4 = Array{S}(undef, N)
    Λ3j_div_r5 = Array{S}(undef, N)
    F_J_ξ = Array{S}(undef, N)
    F_J_η = Array{S}(undef, N)
    F_J_ζ = Array{S}(undef, N)
    F_J2_ξ = Array{S}(undef, N)
    F_J2_η = Array{S}(undef, N)
    F_J2_ζ = Array{S}(undef, N)
    F_J3_ξ = Array{S}(undef, N)
    F_J3_η = Array{S}(undef, N)
    F_J3_ζ = Array{S}(undef, N)
    ξx = Array{S}(undef, N)
    ξy = Array{S}(undef, N)
    ξz = Array{S}(undef, N)
    ηx = Array{S}(undef, N)
    ηy = Array{S}(undef, N)
    ηz = Array{S}(undef, N)
    ηx1 = Array{S}(undef, N)
    ηy1 = Array{S}(undef, N)
    ηz1 = Array{S}(undef, N)
    ηx2 = Array{S}(undef, N)
    ηy2 = Array{S}(undef, N)
    ηz2 = Array{S}(undef, N)
    ζx = Array{S}(undef, N)
    ζy = Array{S}(undef, N)
    ζz = Array{S}(undef, N)
    ζx1 = Array{S}(undef, N)
    ζy1 = Array{S}(undef, N)
    ζz1 = Array{S}(undef, N)
    ζx2 = Array{S}(undef, N)
    ζy2 = Array{S}(undef, N)
    ζz2 = Array{S}(undef, N)
    accX = Taylor1(identity(constant_term(zero_q_1)), order)
    accY = Taylor1(identity(constant_term(zero_q_1)), order)
    accZ = Taylor1(identity(constant_term(zero_q_1)), order)
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    dq[1] = Taylor1(identity(constant_term(q[4])), order)
    dq[2] = Taylor1(identity(constant_term(q[5])), order)
    dq[3] = Taylor1(identity(constant_term(q[6])), order)
    newtonianNb_Potential[N] = Taylor1(identity(constant_term(zero_q_1)), order)
    tmp1343 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1343 .= Taylor1(zero(_S), order)
    tmp1345 = Array{Taylor1{_S}}(undef, size(ui))
    tmp1345 .= Taylor1(zero(_S), order)
    tmp1348 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1348 .= Taylor1(zero(_S), order)
    tmp1350 = Array{Taylor1{_S}}(undef, size(vi))
    tmp1350 .= Taylor1(zero(_S), order)
    tmp1353 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1353 .= Taylor1(zero(_S), order)
    tmp1355 = Array{Taylor1{_S}}(undef, size(wi))
    tmp1355 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp1363 = Array{Taylor1{_S}}(undef, size(UU))
    tmp1363 .= Taylor1(zero(_S), order)
    tmp1366 = Array{Taylor1{_S}}(undef, size(X))
    tmp1366 .= Taylor1(zero(_S), order)
    tmp1368 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1368 .= Taylor1(zero(_S), order)
    tmp1369 = Array{Taylor1{_S}}(undef, size(tmp1366))
    tmp1369 .= Taylor1(zero(_S), order)
    tmp1371 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1371 .= Taylor1(zero(_S), order)
    tmp1379 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp1379 .= Taylor1(zero(_S), order)
    tmp1380 = Array{Taylor1{_S}}(undef, size(tmp1379))
    tmp1380 .= Taylor1(zero(_S), order)
    tmp1475 = Array{Taylor1{_S}}(undef, size(ui))
    tmp1475 .= Taylor1(zero(_S), order)
    tmp1477 = Array{Taylor1{_S}}(undef, size(vi))
    tmp1477 .= Taylor1(zero(_S), order)
    tmp1478 = Array{Taylor1{_S}}(undef, size(tmp1475))
    tmp1478 .= Taylor1(zero(_S), order)
    tmp1480 = Array{Taylor1{_S}}(undef, size(wi))
    tmp1480 .= Taylor1(zero(_S), order)
    tmp1391 = Array{Taylor1{_S}}(undef, size(X))
    tmp1391 .= Taylor1(zero(_S), order)
    tmp1393 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1393 .= Taylor1(zero(_S), order)
    tmp1395 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1395 .= Taylor1(zero(_S), order)
    tmp1397 = Array{Taylor1{_S}}(undef, size(t31))
    tmp1397 .= Taylor1(zero(_S), order)
    tmp1604 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1604 .= Taylor1(zero(_S), order)
    tmp1605 = Array{Taylor1{_S}}(undef, size(ϕ))
    tmp1605 .= Taylor1(zero(_S), order)
    tmp1407 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp1407 .= Taylor1(zero(_S), order)
    tmp1413 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1413 .= Taylor1(zero(_S), order)
    tmp1415 = Array{Taylor1{_S}}(undef, size(sin3_ϕ))
    tmp1415 .= Taylor1(zero(_S), order)
    tmp1419 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp1419 .= Taylor1(zero(_S), order)
    tmp1422 = Array{Taylor1{_S}}(undef, size(r_p2))
    tmp1422 .= Taylor1(zero(_S), order)
    tmp1423 = Array{Taylor1{_S}}(undef, size(Λ2))
    tmp1423 .= Taylor1(zero(_S), order)
    tmp1426 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    tmp1426 .= Taylor1(zero(_S), order)
    tmp1427 = Array{Taylor1{_S}}(undef, size(Λ3))
    tmp1427 .= Taylor1(zero(_S), order)
    tmp1429 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp1429 .= Taylor1(zero(_S), order)
    tmp1431 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp1431 .= Taylor1(zero(_S), order)
    tmp1434 = Array{Taylor1{_S}}(undef, size(Λ2j_div_r4))
    tmp1434 .= Taylor1(zero(_S), order)
    tmp1438 = Array{Taylor1{_S}}(undef, size(Λ3j_div_r5))
    tmp1438 .= Taylor1(zero(_S), order)
    tmp1441 = Array{Taylor1{_S}}(undef, size(X))
    tmp1441 .= Taylor1(zero(_S), order)
    tmp1443 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1443 .= Taylor1(zero(_S), order)
    tmp1445 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1445 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            ui[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2])), order)
            vi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1])), order)
            wi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)])), order)
            X[i] = Taylor1(constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1]), order)
            Y[i] = Taylor1(constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2]), order)
            Z[i] = Taylor1(constant_term(ss16asteph_t[3i]) - constant_term(q[3]), order)
            U[i] = Taylor1(constant_term(ui[i]) - constant_term(dq[1]), order)
            V[i] = Taylor1(constant_term(vi[i]) - constant_term(dq[2]), order)
            W[i] = Taylor1(constant_term(wi[i]) - constant_term(dq[3]), order)
            tmp1343[1] = Taylor1(constant_term(4) * constant_term(dq[1]), order)
            tmp1345[i] = Taylor1(constant_term(3) * constant_term(ui[i]), order)
            _4U_m_3X[i] = Taylor1(constant_term(tmp1343[1]) - constant_term(tmp1345[i]), order)
            tmp1348[2] = Taylor1(constant_term(4) * constant_term(dq[2]), order)
            tmp1350[i] = Taylor1(constant_term(3) * constant_term(vi[i]), order)
            _4V_m_3Y[i] = Taylor1(constant_term(tmp1348[2]) - constant_term(tmp1350[i]), order)
            tmp1353[3] = Taylor1(constant_term(4) * constant_term(dq[3]), order)
            tmp1355[i] = Taylor1(constant_term(3) * constant_term(wi[i]), order)
            _4W_m_3Z[i] = Taylor1(constant_term(tmp1353[3]) - constant_term(tmp1355[i]), order)
            pn2x[i] = Taylor1(constant_term(X[i]) * constant_term(_4U_m_3X[i]), order)
            pn2y[i] = Taylor1(constant_term(Y[i]) * constant_term(_4V_m_3Y[i]), order)
            pn2z[i] = Taylor1(constant_term(Z[i]) * constant_term(_4W_m_3Z[i]), order)
            UU[i] = Taylor1(constant_term(ui[i]) * constant_term(dq[1]), order)
            VV[i] = Taylor1(constant_term(vi[i]) * constant_term(dq[2]), order)
            WW[i] = Taylor1(constant_term(wi[i]) * constant_term(dq[3]), order)
            tmp1363[i] = Taylor1(constant_term(UU[i]) + constant_term(VV[i]), order)
            vi_dot_vj[i] = Taylor1(constant_term(tmp1363[i]) + constant_term(WW[i]), order)
            tmp1366[i] = Taylor1(constant_term(X[i]) ^ float(constant_term(2)), order)
            tmp1368[i] = Taylor1(constant_term(Y[i]) ^ float(constant_term(2)), order)
            tmp1369[i] = Taylor1(constant_term(tmp1366[i]) + constant_term(tmp1368[i]), order)
            tmp1371[i] = Taylor1(constant_term(Z[i]) ^ float(constant_term(2)), order)
            r_p2[i] = Taylor1(constant_term(tmp1369[i]) + constant_term(tmp1371[i]), order)
            r_p1d2[i] = Taylor1(sqrt(constant_term(r_p2[i])), order)
            r_p3d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(1.5)), order)
            r_p7d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(3.5)), order)
            newtonianCoeff[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i]), order)
            tmp1379[i] = Taylor1(constant_term(pn2x[i]) + constant_term(pn2y[i]), order)
            tmp1380[i] = Taylor1(constant_term(tmp1379[i]) + constant_term(pn2z[i]), order)
            pn2[i] = Taylor1(constant_term(newtonianCoeff[i]) * constant_term(tmp1380[i]), order)
            newton_acc_X[i] = Taylor1(constant_term(X[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Y[i] = Taylor1(constant_term(Y[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Z[i] = Taylor1(constant_term(Z[i]) * constant_term(newtonianCoeff[i]), order)
            newtonian1b_Potential[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i]), order)
            pn3[i] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i]), order)
            U_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(U[i]), order)
            V_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(V[i]), order)
            W_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(W[i]), order)
            if UJ_interaction[i]
                tmp1391[i] = Taylor1(-(constant_term(X[i])), order)
                t31[i] = Taylor1(constant_term(tmp1391[i]) * constant_term(M_[1, 3, i]), order)
                tmp1393[i] = Taylor1(-(constant_term(Y[i])), order)
                t32[i] = Taylor1(constant_term(tmp1393[i]) * constant_term(M_[2, 3, i]), order)
                tmp1395[i] = Taylor1(-(constant_term(Z[i])), order)
                t33[i] = Taylor1(constant_term(tmp1395[i]) * constant_term(M_[3, 3, i]), order)
                tmp1397[i] = Taylor1(constant_term(t31[i]) + constant_term(t32[i]), order)
                r_sin_ϕ[i] = Taylor1(constant_term(tmp1397[i]) + constant_term(t33[i]), order)
                sin_ϕ[i] = Taylor1(constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i]), order)
                ϕ[i] = Taylor1(asin(constant_term(sin_ϕ[i])), order)
                tmp1604[i] = Taylor1(sqrt(1 - constant_term(sin_ϕ[i]) ^ 2), order)
                cos_ϕ[i] = Taylor1(cos(constant_term(ϕ[i])), order)
                tmp1605[i] = Taylor1(sin(constant_term(ϕ[i])), order)
                sin2_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(2)), order)
                sin3_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(3)), order)
                tmp1407[i] = Taylor1(constant_term(1.5) * constant_term(sin2_ϕ[i]), order)
                P_2_sin_ϕ[i] = Taylor1(constant_term(tmp1407[i]) - constant_term(0.5), order)
                ∂P_2_sin_ϕ[i] = Taylor1(constant_term(3) * constant_term(sin_ϕ[i]), order)
                tmp1413[i] = Taylor1(constant_term(-1.5) * constant_term(sin_ϕ[i]), order)
                tmp1415[i] = Taylor1(constant_term(2.5) * constant_term(sin3_ϕ[i]), order)
                P_3_sin_ϕ[i] = Taylor1(constant_term(tmp1413[i]) + constant_term(tmp1415[i]), order)
                tmp1419[i] = Taylor1(constant_term(7.5) * constant_term(sin2_ϕ[i]), order)
                ∂P_3_sin_ϕ[i] = Taylor1(constant_term(-1.5) + constant_term(tmp1419[i]), order)
                tmp1422[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(2)), order)
                tmp1423[i] = Taylor1(constant_term(Λ2[i]) / constant_term(tmp1422[i]), order)
                Λ2j_div_r4[i] = Taylor1(-(constant_term(tmp1423[i])), order)
                tmp1426[i] = Taylor1(constant_term(r_p1d2[i]) ^ float(constant_term(5)), order)
                tmp1427[i] = Taylor1(constant_term(Λ3[i]) / constant_term(tmp1426[i]), order)
                Λ3j_div_r5[i] = Taylor1(-(constant_term(tmp1427[i])), order)
                tmp1429[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_2[i] = Taylor1(constant_term(tmp1429[i]) * constant_term(∂P_2_sin_ϕ[i]), order)
                tmp1431[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_3[i] = Taylor1(constant_term(tmp1431[i]) * constant_term(∂P_3_sin_ϕ[i]), order)
                tmp1434[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(3), order)
                F_J2_ξ[i] = Taylor1(constant_term(tmp1434[i]) * constant_term(P_2_sin_ϕ[i]), order)
                F_J2_ζ[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i]), order)
                tmp1438[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(4), order)
                F_J3_ξ[i] = Taylor1(constant_term(tmp1438[i]) * constant_term(P_3_sin_ϕ[i]), order)
                F_J3_ζ[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i]), order)
                F_J_ξ[i] = Taylor1(identity(constant_term(F_J2_ξ[i])), order)
                F_J_ζ[i] = Taylor1(identity(constant_term(F_J2_ζ[i])), order)
                tmp1441[i] = Taylor1(-(constant_term(X[i])), order)
                ξx[i] = Taylor1(constant_term(tmp1441[i]) / constant_term(r_p1d2[i]), order)
                tmp1443[i] = Taylor1(-(constant_term(Y[i])), order)
                ξy[i] = Taylor1(constant_term(tmp1443[i]) / constant_term(r_p1d2[i]), order)
                tmp1445[i] = Taylor1(-(constant_term(Z[i])), order)
                ξz[i] = Taylor1(constant_term(tmp1445[i]) / constant_term(r_p1d2[i]), order)
                ηx1[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξz[i]), order)
                ηy1[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξx[i]), order)
                ηz1[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξy[i]), order)
                ηx2[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξy[i]), order)
                ηy2[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξz[i]), order)
                ηz2[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξx[i]), order)
                ηx[i] = Taylor1(constant_term(ηx1[i]) - constant_term(ηx2[i]), order)
                ηy[i] = Taylor1(constant_term(ηy1[i]) - constant_term(ηy2[i]), order)
                ηz[i] = Taylor1(constant_term(ηz1[i]) - constant_term(ηz2[i]), order)
                ζx1[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηz[i]), order)
                ζy1[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηx[i]), order)
                ζz1[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηy[i]), order)
                ζx2[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηy[i]), order)
                ζy2[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηz[i]), order)
                ζz2[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηx[i]), order)
                ζx[i] = Taylor1(constant_term(ζx1[i]) - constant_term(ζx2[i]), order)
                ζy[i] = Taylor1(constant_term(ζy1[i]) - constant_term(ζy2[i]), order)
                ζz[i] = Taylor1(constant_term(ζz1[i]) - constant_term(ζz2[i]), order)
                F_J2_x1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξx[i]), order)
                F_J2_y1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξy[i]), order)
                F_J2_z1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξz[i]), order)
                F_J2_x2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζx[i]), order)
                F_J2_y2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζy[i]), order)
                F_J2_z2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζz[i]), order)
                F_J2_x[i] = Taylor1(constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i]), order)
                F_J2_y[i] = Taylor1(constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i]), order)
                F_J2_z[i] = Taylor1(constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i]), order)
            end
            tmp1475[i] = Taylor1(constant_term(ui[i]) ^ float(constant_term(2)), order)
            tmp1477[i] = Taylor1(constant_term(vi[i]) ^ float(constant_term(2)), order)
            tmp1478[i] = Taylor1(constant_term(tmp1475[i]) + constant_term(tmp1477[i]), order)
            tmp1480[i] = Taylor1(constant_term(wi[i]) ^ float(constant_term(2)), order)
            v2[i] = Taylor1(constant_term(tmp1478[i]) + constant_term(tmp1480[i]), order)
        end
    tmp1483 = Taylor1(constant_term(q[4]) ^ float(constant_term(2)), order)
    tmp1485 = Taylor1(constant_term(q[5]) ^ float(constant_term(2)), order)
    tmp1486 = Taylor1(constant_term(tmp1483) + constant_term(tmp1485), order)
    tmp1488 = Taylor1(constant_term(q[6]) ^ float(constant_term(2)), order)
    v2[N] = Taylor1(constant_term(tmp1486) + constant_term(tmp1488), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp1491 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1491 .= Taylor1(zero(_S), order)
    tmp1493 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1493 .= Taylor1(zero(_S), order)
    tmp1495 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1495 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        temp_004[i] = Taylor1(constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N]), order)
        newtonianNb_Potential[N] = Taylor1(identity(constant_term(temp_004[i])), order)
        if UJ_interaction[i]
            tmp1491[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_x[i]), order)
            temp_accX_i[i] = Taylor1(constant_term(accX) - constant_term(tmp1491[i]), order)
            accX = Taylor1(identity(constant_term(temp_accX_i[i])), order)
            tmp1493[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_y[i]), order)
            temp_accY_i[i] = Taylor1(constant_term(accY) - constant_term(tmp1493[i]), order)
            accY = Taylor1(identity(constant_term(temp_accY_i[i])), order)
            tmp1495[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_z[i]), order)
            temp_accZ_i[i] = Taylor1(constant_term(accZ) - constant_term(tmp1495[i]), order)
            accZ = Taylor1(identity(constant_term(temp_accZ_i[i])), order)
        end
    end
    _4ϕj[N] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[N]), order)
    tmp1501 = Array{Taylor1{_S}}(undef, size(v2))
    tmp1501 .= Taylor1(zero(_S), order)
    tmp1503 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp1503 .= Taylor1(zero(_S), order)
    tmp1504 = Array{Taylor1{_S}}(undef, size(tmp1501))
    tmp1504 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp1510 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp1510 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1510))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp1513 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp1513 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1513))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp1516 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp1516 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    tmp1523 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp1523 .= Taylor1(zero(_S), order)
    tmp1524 = Array{Taylor1{_S}}(undef, size(tmp1523))
    tmp1524 .= Taylor1(zero(_S), order)
    tmp1525 = Array{Taylor1{_S}}(undef, size(tmp1524))
    tmp1525 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
            ϕi_plus_4ϕj[i] = Taylor1(constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N]), order)
            tmp1501[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
            tmp1503[i] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i]), order)
            tmp1504[i] = Taylor1(constant_term(tmp1501[i]) - constant_term(tmp1503[i]), order)
            sj2_plus_2si2_minus_4vivj[i] = Taylor1(constant_term(tmp1504[i]) + constant_term(v2[N]), order)
            ϕs_and_vs[i] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i]), order)
            Xij_t_Ui[i] = Taylor1(constant_term(X[i]) * constant_term(ui[i]), order)
            Yij_t_Vi[i] = Taylor1(constant_term(Y[i]) * constant_term(vi[i]), order)
            Zij_t_Wi[i] = Taylor1(constant_term(Z[i]) * constant_term(wi[i]), order)
            tmp1510[i] = Taylor1(constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i]), order)
            Rij_dot_Vi[i] = Taylor1(constant_term(tmp1510[i]) + constant_term(Zij_t_Wi[i]), order)
            tmp1513[i] = Taylor1(constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2)), order)
            pn1t7[i] = Taylor1(constant_term(tmp1513[i]) / constant_term(r_p2[i]), order)
            tmp1516[i] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i]), order)
            pn1t2_7[i] = Taylor1(constant_term(ϕs_and_vs[i]) - constant_term(tmp1516[i]), order)
            pn1t1_7[i] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i]), order)
            pNX_t_X[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(X[i]), order)
            pNY_t_Y[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(Y[i]), order)
            pNZ_t_Z[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(Z[i]), order)
            tmp1523[i] = Taylor1(constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i]), order)
            tmp1524[i] = Taylor1(constant_term(tmp1523[i]) + constant_term(pNZ_t_Z[i]), order)
            tmp1525[i] = Taylor1(constant_term(0.5) * constant_term(tmp1524[i]), order)
            pn1[i] = Taylor1(constant_term(pn1t1_7[i]) + constant_term(tmp1525[i]), order)
            X_t_pn1[i] = Taylor1(constant_term(newton_acc_X[i]) * constant_term(pn1[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(newton_acc_Y[i]) * constant_term(pn1[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(newton_acc_Z[i]) * constant_term(pn1[i]), order)
            pNX_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(pn3[i]), order)
            pNY_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(pn3[i]), order)
            pNZ_t_pn3[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(pn3[i]), order)
        end
    tmp1533 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp1533 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp1536 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp1536 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp1539 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp1539 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for i = 1:10
        tmp1533[i] = Taylor1(constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i]), order)
        termpnx[i] = Taylor1(constant_term(X_t_pn1[i]) + constant_term(tmp1533[i]), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        tmp1536[i] = Taylor1(constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i]), order)
        termpny[i] = Taylor1(constant_term(Y_t_pn1[i]) + constant_term(tmp1536[i]), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        tmp1539[i] = Taylor1(constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i]), order)
        termpnz[i] = Taylor1(constant_term(Z_t_pn1[i]) + constant_term(tmp1539[i]), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            X_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_X[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Y[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Z[i]), order)
        end
    for i = 11:Nm1
        termpnx[i] = Taylor1(identity(constant_term(X_t_pn1[i])), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        termpny[i] = Taylor1(identity(constant_term(Y_t_pn1[i])), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        termpnz[i] = Taylor1(identity(constant_term(Z_t_pn1[i])), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    postNewtonX = Taylor1(constant_term(pntempX) * constant_term(c_m2), order)
    postNewtonY = Taylor1(constant_term(pntempY) * constant_term(c_m2), order)
    postNewtonZ = Taylor1(constant_term(pntempZ) * constant_term(c_m2), order)
    tmp1551 = Taylor1(constant_term(Y[1]) * constant_term(W[1]), order)
    tmp1552 = Taylor1(constant_term(Z[1]) * constant_term(V[1]), order)
    hx = Taylor1(constant_term(tmp1551) - constant_term(tmp1552), order)
    tmp1554 = Taylor1(constant_term(Z[1]) * constant_term(U[1]), order)
    tmp1555 = Taylor1(constant_term(X[1]) * constant_term(W[1]), order)
    hy = Taylor1(constant_term(tmp1554) - constant_term(tmp1555), order)
    tmp1557 = Taylor1(constant_term(X[1]) * constant_term(V[1]), order)
    tmp1558 = Taylor1(constant_term(Y[1]) * constant_term(U[1]), order)
    hz = Taylor1(constant_term(tmp1557) - constant_term(tmp1558), order)
    tmp1560 = Taylor1(constant_term(hz) * constant_term(Y[1]), order)
    tmp1561 = Taylor1(constant_term(hy) * constant_term(Z[1]), order)
    t_x = Taylor1(constant_term(tmp1560) - constant_term(tmp1561), order)
    tmp1563 = Taylor1(constant_term(hx) * constant_term(Z[1]), order)
    tmp1564 = Taylor1(constant_term(hz) * constant_term(X[1]), order)
    t_y = Taylor1(constant_term(tmp1563) - constant_term(tmp1564), order)
    tmp1566 = Taylor1(constant_term(hy) * constant_term(X[1]), order)
    tmp1567 = Taylor1(constant_term(hx) * constant_term(Y[1]), order)
    t_z = Taylor1(constant_term(tmp1566) - constant_term(tmp1567), order)
    tmp1570 = Taylor1(constant_term(t_x) ^ float(constant_term(2)), order)
    tmp1572 = Taylor1(constant_term(t_y) ^ float(constant_term(2)), order)
    tmp1573 = Taylor1(constant_term(tmp1570) + constant_term(tmp1572), order)
    tmp1575 = Taylor1(constant_term(t_z) ^ float(constant_term(2)), order)
    tmp1576 = Taylor1(constant_term(tmp1573) + constant_term(tmp1575), order)
    t_norm = Taylor1(sqrt(constant_term(tmp1576)), order)
    t_x_unit = Taylor1(constant_term(t_x) / constant_term(t_norm), order)
    t_y_unit = Taylor1(constant_term(t_y) / constant_term(t_norm), order)
    t_z_unit = Taylor1(constant_term(t_z) / constant_term(t_norm), order)
    tmp1581 = Taylor1(constant_term(X[1]) / constant_term(r_p1d2[1]), order)
    r_x_unit = Taylor1(-(constant_term(tmp1581)), order)
    tmp1583 = Taylor1(constant_term(Y[1]) / constant_term(r_p1d2[1]), order)
    r_y_unit = Taylor1(-(constant_term(tmp1583)), order)
    tmp1585 = Taylor1(constant_term(Z[1]) / constant_term(r_p1d2[1]), order)
    r_z_unit = Taylor1(-(constant_term(tmp1585)), order)
    g_r = Taylor1(identity(constant_term(r_p2[1])), order)
    A2_t_g_r = Taylor1(constant_term(q[7]) / constant_term(g_r), order)
    A1_t_g_r = Taylor1(constant_term(q[8]) / constant_term(g_r), order)
    tmp1589 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_x_unit), order)
    tmp1590 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_x_unit), order)
    NGAx = Taylor1(constant_term(tmp1589) + constant_term(tmp1590), order)
    tmp1592 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_y_unit), order)
    tmp1593 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_y_unit), order)
    NGAy = Taylor1(constant_term(tmp1592) + constant_term(tmp1593), order)
    tmp1595 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_z_unit), order)
    tmp1596 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_z_unit), order)
    NGAz = Taylor1(constant_term(tmp1595) + constant_term(tmp1596), order)
    tmp1598 = Taylor1(constant_term(postNewtonX) + constant_term(accX), order)
    dq[4] = Taylor1(constant_term(tmp1598) + constant_term(NGAx), order)
    tmp1600 = Taylor1(constant_term(postNewtonY) + constant_term(accY), order)
    dq[5] = Taylor1(constant_term(tmp1600) + constant_term(NGAy), order)
    tmp1602 = Taylor1(constant_term(postNewtonZ) + constant_term(accZ), order)
    dq[6] = Taylor1(constant_term(tmp1602) + constant_term(NGAz), order)
    dq[7] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp1483, tmp1485, tmp1486, tmp1488, tmp1551, tmp1552, tmp1554, tmp1555, tmp1557, tmp1558, tmp1560, tmp1561, tmp1563, tmp1564, tmp1566, tmp1567, tmp1570, tmp1572, tmp1573, tmp1575, tmp1576, tmp1581, tmp1583, tmp1585, tmp1589, tmp1590, tmp1592, tmp1593, tmp1595, tmp1596, tmp1598, tmp1600, tmp1602, pntempX, pntempY, pntempZ, accX, accY, accZ, postNewtonX, postNewtonY, postNewtonZ, hx, hy, hz, t_x, t_y, t_z, t_norm, t_x_unit, t_y_unit, t_z_unit, r_x_unit, r_y_unit, r_z_unit, g_r, A2_t_g_r, A1_t_g_r, NGAx, NGAy, NGAz], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, ui, vi, wi, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newtonianNb_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, t31, t32, t33, r_sin_ϕ, sin_ϕ, ϕ, cos_ϕ, sin2_ϕ, sin3_ϕ, F_J2_x, F_J2_y, F_J2_z, F_J2_x1, F_J2_y1, F_J2_z1, F_J2_x2, F_J2_y2, F_J2_z2, temp_accX_i, temp_accY_i, temp_accZ_i, P_2_sin_ϕ, ∂P_2_sin_ϕ, P_3_sin_ϕ, ∂P_3_sin_ϕ, m_c_ϕ_∂P_2, m_c_ϕ_∂P_3, Λ2j_div_r4, Λ3j_div_r5, F_J_ξ, F_J_ζ, F_J2_ξ, F_J2_ζ, F_J3_ξ, F_J3_ζ, ξx, ξy, ξz, ηx, ηy, ηz, ηx1, ηy1, ηz1, ηx2, ηy2, ηz2, ζx, ζy, ζz, ζx1, ζy1, ζz1, ζx2, ζy2, ζz2, tmp1343, tmp1345, tmp1348, tmp1350, tmp1353, tmp1355, pn2x, pn2y, pn2z, tmp1363, tmp1366, tmp1368, tmp1369, tmp1371, tmp1379, tmp1380, tmp1391, tmp1393, tmp1395, tmp1397, tmp1604, tmp1605, tmp1407, tmp1413, tmp1415, tmp1419, tmp1422, tmp1423, tmp1426, tmp1427, tmp1429, tmp1431, tmp1434, tmp1438, tmp1441, tmp1443, tmp1445, tmp1475, tmp1477, tmp1478, tmp1480, temp_004, tmp1491, tmp1493, tmp1495, tmp1501, tmp1503, tmp1504, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp1510, Rij_dot_Vi, tmp1513, pn1t7, tmp1516, pn1t2_7, tmp1523, tmp1524, tmp1525, tmp1533, termpnx, sumpnx, tmp1536, termpny, sumpny, tmp1539, termpnz, sumpnz], [Array{Taylor1{_S}, 2}(undef, 0, 0)], [Array{Taylor1{_S}, 3}(undef, 0, 0, 0)], [Array{Taylor1{_S}, 4}(undef, 0, 0, 0, 0)])
end

# TaylorIntegration.jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph_threads!
function TaylorIntegration.jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp1483 = __ralloc.v0[1]
    tmp1485 = __ralloc.v0[2]
    tmp1486 = __ralloc.v0[3]
    tmp1488 = __ralloc.v0[4]
    tmp1551 = __ralloc.v0[5]
    tmp1552 = __ralloc.v0[6]
    tmp1554 = __ralloc.v0[7]
    tmp1555 = __ralloc.v0[8]
    tmp1557 = __ralloc.v0[9]
    tmp1558 = __ralloc.v0[10]
    tmp1560 = __ralloc.v0[11]
    tmp1561 = __ralloc.v0[12]
    tmp1563 = __ralloc.v0[13]
    tmp1564 = __ralloc.v0[14]
    tmp1566 = __ralloc.v0[15]
    tmp1567 = __ralloc.v0[16]
    tmp1570 = __ralloc.v0[17]
    tmp1572 = __ralloc.v0[18]
    tmp1573 = __ralloc.v0[19]
    tmp1575 = __ralloc.v0[20]
    tmp1576 = __ralloc.v0[21]
    tmp1581 = __ralloc.v0[22]
    tmp1583 = __ralloc.v0[23]
    tmp1585 = __ralloc.v0[24]
    tmp1589 = __ralloc.v0[25]
    tmp1590 = __ralloc.v0[26]
    tmp1592 = __ralloc.v0[27]
    tmp1593 = __ralloc.v0[28]
    tmp1595 = __ralloc.v0[29]
    tmp1596 = __ralloc.v0[30]
    tmp1598 = __ralloc.v0[31]
    tmp1600 = __ralloc.v0[32]
    tmp1602 = __ralloc.v0[33]
    pntempX = __ralloc.v0[34]
    pntempY = __ralloc.v0[35]
    pntempZ = __ralloc.v0[36]
    accX = __ralloc.v0[37]
    accY = __ralloc.v0[38]
    accZ = __ralloc.v0[39]
    postNewtonX = __ralloc.v0[40]
    postNewtonY = __ralloc.v0[41]
    postNewtonZ = __ralloc.v0[42]
    hx = __ralloc.v0[43]
    hy = __ralloc.v0[44]
    hz = __ralloc.v0[45]
    t_x = __ralloc.v0[46]
    t_y = __ralloc.v0[47]
    t_z = __ralloc.v0[48]
    t_norm = __ralloc.v0[49]
    t_x_unit = __ralloc.v0[50]
    t_y_unit = __ralloc.v0[51]
    t_z_unit = __ralloc.v0[52]
    r_x_unit = __ralloc.v0[53]
    r_y_unit = __ralloc.v0[54]
    r_z_unit = __ralloc.v0[55]
    g_r = __ralloc.v0[56]
    A2_t_g_r = __ralloc.v0[57]
    A1_t_g_r = __ralloc.v0[58]
    NGAx = __ralloc.v0[59]
    NGAy = __ralloc.v0[60]
    NGAz = __ralloc.v0[61]
    X = __ralloc.v1[1]
    Y = __ralloc.v1[2]
    Z = __ralloc.v1[3]
    r_p2 = __ralloc.v1[4]
    r_p1d2 = __ralloc.v1[5]
    r_p3d2 = __ralloc.v1[6]
    r_p7d2 = __ralloc.v1[7]
    newtonianCoeff = __ralloc.v1[8]
    ui = __ralloc.v1[9]
    vi = __ralloc.v1[10]
    wi = __ralloc.v1[11]
    U = __ralloc.v1[12]
    V = __ralloc.v1[13]
    W = __ralloc.v1[14]
    _4U_m_3X = __ralloc.v1[15]
    _4V_m_3Y = __ralloc.v1[16]
    _4W_m_3Z = __ralloc.v1[17]
    UU = __ralloc.v1[18]
    VV = __ralloc.v1[19]
    WW = __ralloc.v1[20]
    newtonian1b_Potential = __ralloc.v1[21]
    newtonianNb_Potential = __ralloc.v1[22]
    newton_acc_X = __ralloc.v1[23]
    newton_acc_Y = __ralloc.v1[24]
    newton_acc_Z = __ralloc.v1[25]
    v2 = __ralloc.v1[26]
    vi_dot_vj = __ralloc.v1[27]
    pn2 = __ralloc.v1[28]
    U_t_pn2 = __ralloc.v1[29]
    V_t_pn2 = __ralloc.v1[30]
    W_t_pn2 = __ralloc.v1[31]
    pn3 = __ralloc.v1[32]
    pNX_t_pn3 = __ralloc.v1[33]
    pNY_t_pn3 = __ralloc.v1[34]
    pNZ_t_pn3 = __ralloc.v1[35]
    _4ϕj = __ralloc.v1[36]
    ϕi_plus_4ϕj = __ralloc.v1[37]
    sj2_plus_2si2_minus_4vivj = __ralloc.v1[38]
    ϕs_and_vs = __ralloc.v1[39]
    pn1t1_7 = __ralloc.v1[40]
    pNX_t_X = __ralloc.v1[41]
    pNY_t_Y = __ralloc.v1[42]
    pNZ_t_Z = __ralloc.v1[43]
    pn1 = __ralloc.v1[44]
    X_t_pn1 = __ralloc.v1[45]
    Y_t_pn1 = __ralloc.v1[46]
    Z_t_pn1 = __ralloc.v1[47]
    t31 = __ralloc.v1[48]
    t32 = __ralloc.v1[49]
    t33 = __ralloc.v1[50]
    r_sin_ϕ = __ralloc.v1[51]
    sin_ϕ = __ralloc.v1[52]
    ϕ = __ralloc.v1[53]
    cos_ϕ = __ralloc.v1[54]
    sin2_ϕ = __ralloc.v1[55]
    sin3_ϕ = __ralloc.v1[56]
    F_J2_x = __ralloc.v1[57]
    F_J2_y = __ralloc.v1[58]
    F_J2_z = __ralloc.v1[59]
    F_J2_x1 = __ralloc.v1[60]
    F_J2_y1 = __ralloc.v1[61]
    F_J2_z1 = __ralloc.v1[62]
    F_J2_x2 = __ralloc.v1[63]
    F_J2_y2 = __ralloc.v1[64]
    F_J2_z2 = __ralloc.v1[65]
    temp_accX_i = __ralloc.v1[66]
    temp_accY_i = __ralloc.v1[67]
    temp_accZ_i = __ralloc.v1[68]
    P_2_sin_ϕ = __ralloc.v1[69]
    ∂P_2_sin_ϕ = __ralloc.v1[70]
    P_3_sin_ϕ = __ralloc.v1[71]
    ∂P_3_sin_ϕ = __ralloc.v1[72]
    m_c_ϕ_∂P_2 = __ralloc.v1[73]
    m_c_ϕ_∂P_3 = __ralloc.v1[74]
    Λ2j_div_r4 = __ralloc.v1[75]
    Λ3j_div_r5 = __ralloc.v1[76]
    F_J_ξ = __ralloc.v1[77]
    F_J_ζ = __ralloc.v1[78]
    F_J2_ξ = __ralloc.v1[79]
    F_J2_ζ = __ralloc.v1[80]
    F_J3_ξ = __ralloc.v1[81]
    F_J3_ζ = __ralloc.v1[82]
    ξx = __ralloc.v1[83]
    ξy = __ralloc.v1[84]
    ξz = __ralloc.v1[85]
    ηx = __ralloc.v1[86]
    ηy = __ralloc.v1[87]
    ηz = __ralloc.v1[88]
    ηx1 = __ralloc.v1[89]
    ηy1 = __ralloc.v1[90]
    ηz1 = __ralloc.v1[91]
    ηx2 = __ralloc.v1[92]
    ηy2 = __ralloc.v1[93]
    ηz2 = __ralloc.v1[94]
    ζx = __ralloc.v1[95]
    ζy = __ralloc.v1[96]
    ζz = __ralloc.v1[97]
    ζx1 = __ralloc.v1[98]
    ζy1 = __ralloc.v1[99]
    ζz1 = __ralloc.v1[100]
    ζx2 = __ralloc.v1[101]
    ζy2 = __ralloc.v1[102]
    ζz2 = __ralloc.v1[103]
    tmp1343 = __ralloc.v1[104]
    tmp1345 = __ralloc.v1[105]
    tmp1348 = __ralloc.v1[106]
    tmp1350 = __ralloc.v1[107]
    tmp1353 = __ralloc.v1[108]
    tmp1355 = __ralloc.v1[109]
    pn2x = __ralloc.v1[110]
    pn2y = __ralloc.v1[111]
    pn2z = __ralloc.v1[112]
    tmp1363 = __ralloc.v1[113]
    tmp1366 = __ralloc.v1[114]
    tmp1368 = __ralloc.v1[115]
    tmp1369 = __ralloc.v1[116]
    tmp1371 = __ralloc.v1[117]
    tmp1379 = __ralloc.v1[118]
    tmp1380 = __ralloc.v1[119]
    tmp1391 = __ralloc.v1[120]
    tmp1393 = __ralloc.v1[121]
    tmp1395 = __ralloc.v1[122]
    tmp1397 = __ralloc.v1[123]
    tmp1604 = __ralloc.v1[124]
    tmp1605 = __ralloc.v1[125]
    tmp1407 = __ralloc.v1[126]
    tmp1413 = __ralloc.v1[127]
    tmp1415 = __ralloc.v1[128]
    tmp1419 = __ralloc.v1[129]
    tmp1422 = __ralloc.v1[130]
    tmp1423 = __ralloc.v1[131]
    tmp1426 = __ralloc.v1[132]
    tmp1427 = __ralloc.v1[133]
    tmp1429 = __ralloc.v1[134]
    tmp1431 = __ralloc.v1[135]
    tmp1434 = __ralloc.v1[136]
    tmp1438 = __ralloc.v1[137]
    tmp1441 = __ralloc.v1[138]
    tmp1443 = __ralloc.v1[139]
    tmp1445 = __ralloc.v1[140]
    tmp1475 = __ralloc.v1[141]
    tmp1477 = __ralloc.v1[142]
    tmp1478 = __ralloc.v1[143]
    tmp1480 = __ralloc.v1[144]
    temp_004 = __ralloc.v1[145]
    tmp1491 = __ralloc.v1[146]
    tmp1493 = __ralloc.v1[147]
    tmp1495 = __ralloc.v1[148]
    tmp1501 = __ralloc.v1[149]
    tmp1503 = __ralloc.v1[150]
    tmp1504 = __ralloc.v1[151]
    Xij_t_Ui = __ralloc.v1[152]
    Yij_t_Vi = __ralloc.v1[153]
    Zij_t_Wi = __ralloc.v1[154]
    tmp1510 = __ralloc.v1[155]
    Rij_dot_Vi = __ralloc.v1[156]
    tmp1513 = __ralloc.v1[157]
    pn1t7 = __ralloc.v1[158]
    tmp1516 = __ralloc.v1[159]
    pn1t2_7 = __ralloc.v1[160]
    tmp1523 = __ralloc.v1[161]
    tmp1524 = __ralloc.v1[162]
    tmp1525 = __ralloc.v1[163]
    tmp1533 = __ralloc.v1[164]
    termpnx = __ralloc.v1[165]
    sumpnx = __ralloc.v1[166]
    tmp1536 = __ralloc.v1[167]
    termpny = __ralloc.v1[168]
    sumpny = __ralloc.v1[169]
    tmp1539 = __ralloc.v1[170]
    termpnz = __ralloc.v1[171]
    sumpnz = __ralloc.v1[172]
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    pntempX.coeffs[1] = identity(constant_term(zero_q_1))
    pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
    pntempY.coeffs[1] = identity(constant_term(zero_q_1))
    pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
    pntempZ.coeffs[1] = identity(constant_term(zero_q_1))
    pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    accX.coeffs[1] = identity(constant_term(zero_q_1))
    accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
    accY.coeffs[1] = identity(constant_term(zero_q_1))
    accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
    accZ.coeffs[1] = identity(constant_term(zero_q_1))
    accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    (dq[1]).coeffs[1] = identity(constant_term(q[4]))
    (dq[1]).coeffs[2:order + 1] .= zero((dq[1]).coeffs[1])
    (dq[2]).coeffs[1] = identity(constant_term(q[5]))
    (dq[2]).coeffs[2:order + 1] .= zero((dq[2]).coeffs[1])
    (dq[3]).coeffs[1] = identity(constant_term(q[6]))
    (dq[3]).coeffs[2:order + 1] .= zero((dq[3]).coeffs[1])
    (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(zero_q_1))
    (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            (ui[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2]))
            (ui[i]).coeffs[2:order + 1] .= zero((ui[i]).coeffs[1])
            (vi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1]))
            (vi[i]).coeffs[2:order + 1] .= zero((vi[i]).coeffs[1])
            (wi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)]))
            (wi[i]).coeffs[2:order + 1] .= zero((wi[i]).coeffs[1])
            (X[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1])
            (X[i]).coeffs[2:order + 1] .= zero((X[i]).coeffs[1])
            (Y[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2])
            (Y[i]).coeffs[2:order + 1] .= zero((Y[i]).coeffs[1])
            (Z[i]).coeffs[1] = constant_term(ss16asteph_t[3i]) - constant_term(q[3])
            (Z[i]).coeffs[2:order + 1] .= zero((Z[i]).coeffs[1])
            (U[i]).coeffs[1] = constant_term(ui[i]) - constant_term(dq[1])
            (U[i]).coeffs[2:order + 1] .= zero((U[i]).coeffs[1])
            (V[i]).coeffs[1] = constant_term(vi[i]) - constant_term(dq[2])
            (V[i]).coeffs[2:order + 1] .= zero((V[i]).coeffs[1])
            (W[i]).coeffs[1] = constant_term(wi[i]) - constant_term(dq[3])
            (W[i]).coeffs[2:order + 1] .= zero((W[i]).coeffs[1])
            (tmp1343[1]).coeffs[1] = constant_term(4) * constant_term(dq[1])
            (tmp1343[1]).coeffs[2:order + 1] .= zero((tmp1343[1]).coeffs[1])
            (tmp1345[i]).coeffs[1] = constant_term(3) * constant_term(ui[i])
            (tmp1345[i]).coeffs[2:order + 1] .= zero((tmp1345[i]).coeffs[1])
            (_4U_m_3X[i]).coeffs[1] = constant_term(tmp1343[1]) - constant_term(tmp1345[i])
            (_4U_m_3X[i]).coeffs[2:order + 1] .= zero((_4U_m_3X[i]).coeffs[1])
            (tmp1348[2]).coeffs[1] = constant_term(4) * constant_term(dq[2])
            (tmp1348[2]).coeffs[2:order + 1] .= zero((tmp1348[2]).coeffs[1])
            (tmp1350[i]).coeffs[1] = constant_term(3) * constant_term(vi[i])
            (tmp1350[i]).coeffs[2:order + 1] .= zero((tmp1350[i]).coeffs[1])
            (_4V_m_3Y[i]).coeffs[1] = constant_term(tmp1348[2]) - constant_term(tmp1350[i])
            (_4V_m_3Y[i]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i]).coeffs[1])
            (tmp1353[3]).coeffs[1] = constant_term(4) * constant_term(dq[3])
            (tmp1353[3]).coeffs[2:order + 1] .= zero((tmp1353[3]).coeffs[1])
            (tmp1355[i]).coeffs[1] = constant_term(3) * constant_term(wi[i])
            (tmp1355[i]).coeffs[2:order + 1] .= zero((tmp1355[i]).coeffs[1])
            (_4W_m_3Z[i]).coeffs[1] = constant_term(tmp1353[3]) - constant_term(tmp1355[i])
            (_4W_m_3Z[i]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i]).coeffs[1])
            (pn2x[i]).coeffs[1] = constant_term(X[i]) * constant_term(_4U_m_3X[i])
            (pn2x[i]).coeffs[2:order + 1] .= zero((pn2x[i]).coeffs[1])
            (pn2y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(_4V_m_3Y[i])
            (pn2y[i]).coeffs[2:order + 1] .= zero((pn2y[i]).coeffs[1])
            (pn2z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(_4W_m_3Z[i])
            (pn2z[i]).coeffs[2:order + 1] .= zero((pn2z[i]).coeffs[1])
            (UU[i]).coeffs[1] = constant_term(ui[i]) * constant_term(dq[1])
            (UU[i]).coeffs[2:order + 1] .= zero((UU[i]).coeffs[1])
            (VV[i]).coeffs[1] = constant_term(vi[i]) * constant_term(dq[2])
            (VV[i]).coeffs[2:order + 1] .= zero((VV[i]).coeffs[1])
            (WW[i]).coeffs[1] = constant_term(wi[i]) * constant_term(dq[3])
            (WW[i]).coeffs[2:order + 1] .= zero((WW[i]).coeffs[1])
            (tmp1363[i]).coeffs[1] = constant_term(UU[i]) + constant_term(VV[i])
            (tmp1363[i]).coeffs[2:order + 1] .= zero((tmp1363[i]).coeffs[1])
            (vi_dot_vj[i]).coeffs[1] = constant_term(tmp1363[i]) + constant_term(WW[i])
            (vi_dot_vj[i]).coeffs[2:order + 1] .= zero((vi_dot_vj[i]).coeffs[1])
            (tmp1366[i]).coeffs[1] = constant_term(X[i]) ^ float(constant_term(2))
            (tmp1366[i]).coeffs[2:order + 1] .= zero((tmp1366[i]).coeffs[1])
            (tmp1368[i]).coeffs[1] = constant_term(Y[i]) ^ float(constant_term(2))
            (tmp1368[i]).coeffs[2:order + 1] .= zero((tmp1368[i]).coeffs[1])
            (tmp1369[i]).coeffs[1] = constant_term(tmp1366[i]) + constant_term(tmp1368[i])
            (tmp1369[i]).coeffs[2:order + 1] .= zero((tmp1369[i]).coeffs[1])
            (tmp1371[i]).coeffs[1] = constant_term(Z[i]) ^ float(constant_term(2))
            (tmp1371[i]).coeffs[2:order + 1] .= zero((tmp1371[i]).coeffs[1])
            (r_p2[i]).coeffs[1] = constant_term(tmp1369[i]) + constant_term(tmp1371[i])
            (r_p2[i]).coeffs[2:order + 1] .= zero((r_p2[i]).coeffs[1])
            (r_p1d2[i]).coeffs[1] = sqrt(constant_term(r_p2[i]))
            (r_p1d2[i]).coeffs[2:order + 1] .= zero((r_p1d2[i]).coeffs[1])
            (r_p3d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(1.5))
            (r_p3d2[i]).coeffs[2:order + 1] .= zero((r_p3d2[i]).coeffs[1])
            (r_p7d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(3.5))
            (r_p7d2[i]).coeffs[2:order + 1] .= zero((r_p7d2[i]).coeffs[1])
            (newtonianCoeff[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i])
            (newtonianCoeff[i]).coeffs[2:order + 1] .= zero((newtonianCoeff[i]).coeffs[1])
            (tmp1379[i]).coeffs[1] = constant_term(pn2x[i]) + constant_term(pn2y[i])
            (tmp1379[i]).coeffs[2:order + 1] .= zero((tmp1379[i]).coeffs[1])
            (tmp1380[i]).coeffs[1] = constant_term(tmp1379[i]) + constant_term(pn2z[i])
            (tmp1380[i]).coeffs[2:order + 1] .= zero((tmp1380[i]).coeffs[1])
            (pn2[i]).coeffs[1] = constant_term(newtonianCoeff[i]) * constant_term(tmp1380[i])
            (pn2[i]).coeffs[2:order + 1] .= zero((pn2[i]).coeffs[1])
            (newton_acc_X[i]).coeffs[1] = constant_term(X[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_X[i]).coeffs[2:order + 1] .= zero((newton_acc_X[i]).coeffs[1])
            (newton_acc_Y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Y[i]).coeffs[2:order + 1] .= zero((newton_acc_Y[i]).coeffs[1])
            (newton_acc_Z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Z[i]).coeffs[2:order + 1] .= zero((newton_acc_Z[i]).coeffs[1])
            (newtonian1b_Potential[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i])
            (newtonian1b_Potential[i]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i]).coeffs[1])
            (pn3[i]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i])
            (pn3[i]).coeffs[2:order + 1] .= zero((pn3[i]).coeffs[1])
            (U_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(U[i])
            (U_t_pn2[i]).coeffs[2:order + 1] .= zero((U_t_pn2[i]).coeffs[1])
            (V_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(V[i])
            (V_t_pn2[i]).coeffs[2:order + 1] .= zero((V_t_pn2[i]).coeffs[1])
            (W_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(W[i])
            (W_t_pn2[i]).coeffs[2:order + 1] .= zero((W_t_pn2[i]).coeffs[1])
            if UJ_interaction[i]
                (tmp1391[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp1391[i]).coeffs[2:order + 1] .= zero((tmp1391[i]).coeffs[1])
                (t31[i]).coeffs[1] = constant_term(tmp1391[i]) * constant_term(M_[1, 3, i])
                (t31[i]).coeffs[2:order + 1] .= zero((t31[i]).coeffs[1])
                (tmp1393[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp1393[i]).coeffs[2:order + 1] .= zero((tmp1393[i]).coeffs[1])
                (t32[i]).coeffs[1] = constant_term(tmp1393[i]) * constant_term(M_[2, 3, i])
                (t32[i]).coeffs[2:order + 1] .= zero((t32[i]).coeffs[1])
                (tmp1395[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp1395[i]).coeffs[2:order + 1] .= zero((tmp1395[i]).coeffs[1])
                (t33[i]).coeffs[1] = constant_term(tmp1395[i]) * constant_term(M_[3, 3, i])
                (t33[i]).coeffs[2:order + 1] .= zero((t33[i]).coeffs[1])
                (tmp1397[i]).coeffs[1] = constant_term(t31[i]) + constant_term(t32[i])
                (tmp1397[i]).coeffs[2:order + 1] .= zero((tmp1397[i]).coeffs[1])
                (r_sin_ϕ[i]).coeffs[1] = constant_term(tmp1397[i]) + constant_term(t33[i])
                (r_sin_ϕ[i]).coeffs[2:order + 1] .= zero((r_sin_ϕ[i]).coeffs[1])
                (sin_ϕ[i]).coeffs[1] = constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i])
                (sin_ϕ[i]).coeffs[2:order + 1] .= zero((sin_ϕ[i]).coeffs[1])
                (ϕ[i]).coeffs[1] = asin(constant_term(sin_ϕ[i]))
                (ϕ[i]).coeffs[2:order + 1] .= zero((ϕ[i]).coeffs[1])
                (tmp1604[i]).coeffs[1] = sqrt(1 - constant_term(sin_ϕ[i]) ^ 2)
                (tmp1604[i]).coeffs[2:order + 1] .= zero((tmp1604[i]).coeffs[1])
                (cos_ϕ[i]).coeffs[1] = cos(constant_term(ϕ[i]))
                (cos_ϕ[i]).coeffs[2:order + 1] .= zero((cos_ϕ[i]).coeffs[1])
                (tmp1605[i]).coeffs[1] = sin(constant_term(ϕ[i]))
                (tmp1605[i]).coeffs[2:order + 1] .= zero((tmp1605[i]).coeffs[1])
                (sin2_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(2))
                (sin2_ϕ[i]).coeffs[2:order + 1] .= zero((sin2_ϕ[i]).coeffs[1])
                (sin3_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(3))
                (sin3_ϕ[i]).coeffs[2:order + 1] .= zero((sin3_ϕ[i]).coeffs[1])
                (tmp1407[i]).coeffs[1] = constant_term(1.5) * constant_term(sin2_ϕ[i])
                (tmp1407[i]).coeffs[2:order + 1] .= zero((tmp1407[i]).coeffs[1])
                (P_2_sin_ϕ[i]).coeffs[1] = constant_term(tmp1407[i]) - constant_term(0.5)
                (P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_2_sin_ϕ[i]).coeffs[1])
                (∂P_2_sin_ϕ[i]).coeffs[1] = constant_term(3) * constant_term(sin_ϕ[i])
                (∂P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_2_sin_ϕ[i]).coeffs[1])
                (tmp1413[i]).coeffs[1] = constant_term(-1.5) * constant_term(sin_ϕ[i])
                (tmp1413[i]).coeffs[2:order + 1] .= zero((tmp1413[i]).coeffs[1])
                (tmp1415[i]).coeffs[1] = constant_term(2.5) * constant_term(sin3_ϕ[i])
                (tmp1415[i]).coeffs[2:order + 1] .= zero((tmp1415[i]).coeffs[1])
                (P_3_sin_ϕ[i]).coeffs[1] = constant_term(tmp1413[i]) + constant_term(tmp1415[i])
                (P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_3_sin_ϕ[i]).coeffs[1])
                (tmp1419[i]).coeffs[1] = constant_term(7.5) * constant_term(sin2_ϕ[i])
                (tmp1419[i]).coeffs[2:order + 1] .= zero((tmp1419[i]).coeffs[1])
                (∂P_3_sin_ϕ[i]).coeffs[1] = constant_term(-1.5) + constant_term(tmp1419[i])
                (∂P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_3_sin_ϕ[i]).coeffs[1])
                (tmp1422[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(2))
                (tmp1422[i]).coeffs[2:order + 1] .= zero((tmp1422[i]).coeffs[1])
                (tmp1423[i]).coeffs[1] = constant_term(Λ2[i]) / constant_term(tmp1422[i])
                (tmp1423[i]).coeffs[2:order + 1] .= zero((tmp1423[i]).coeffs[1])
                (Λ2j_div_r4[i]).coeffs[1] = -(constant_term(tmp1423[i]))
                (Λ2j_div_r4[i]).coeffs[2:order + 1] .= zero((Λ2j_div_r4[i]).coeffs[1])
                (tmp1426[i]).coeffs[1] = constant_term(r_p1d2[i]) ^ float(constant_term(5))
                (tmp1426[i]).coeffs[2:order + 1] .= zero((tmp1426[i]).coeffs[1])
                (tmp1427[i]).coeffs[1] = constant_term(Λ3[i]) / constant_term(tmp1426[i])
                (tmp1427[i]).coeffs[2:order + 1] .= zero((tmp1427[i]).coeffs[1])
                (Λ3j_div_r5[i]).coeffs[1] = -(constant_term(tmp1427[i]))
                (Λ3j_div_r5[i]).coeffs[2:order + 1] .= zero((Λ3j_div_r5[i]).coeffs[1])
                (tmp1429[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp1429[i]).coeffs[2:order + 1] .= zero((tmp1429[i]).coeffs[1])
                (m_c_ϕ_∂P_2[i]).coeffs[1] = constant_term(tmp1429[i]) * constant_term(∂P_2_sin_ϕ[i])
                (m_c_ϕ_∂P_2[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_2[i]).coeffs[1])
                (tmp1431[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp1431[i]).coeffs[2:order + 1] .= zero((tmp1431[i]).coeffs[1])
                (m_c_ϕ_∂P_3[i]).coeffs[1] = constant_term(tmp1431[i]) * constant_term(∂P_3_sin_ϕ[i])
                (m_c_ϕ_∂P_3[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_3[i]).coeffs[1])
                (tmp1434[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(3)
                (tmp1434[i]).coeffs[2:order + 1] .= zero((tmp1434[i]).coeffs[1])
                (F_J2_ξ[i]).coeffs[1] = constant_term(tmp1434[i]) * constant_term(P_2_sin_ϕ[i])
                (F_J2_ξ[i]).coeffs[2:order + 1] .= zero((F_J2_ξ[i]).coeffs[1])
                (F_J2_ζ[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i])
                (F_J2_ζ[i]).coeffs[2:order + 1] .= zero((F_J2_ζ[i]).coeffs[1])
                (tmp1438[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(4)
                (tmp1438[i]).coeffs[2:order + 1] .= zero((tmp1438[i]).coeffs[1])
                (F_J3_ξ[i]).coeffs[1] = constant_term(tmp1438[i]) * constant_term(P_3_sin_ϕ[i])
                (F_J3_ξ[i]).coeffs[2:order + 1] .= zero((F_J3_ξ[i]).coeffs[1])
                (F_J3_ζ[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i])
                (F_J3_ζ[i]).coeffs[2:order + 1] .= zero((F_J3_ζ[i]).coeffs[1])
                (F_J_ξ[i]).coeffs[1] = identity(constant_term(F_J2_ξ[i]))
                (F_J_ξ[i]).coeffs[2:order + 1] .= zero((F_J_ξ[i]).coeffs[1])
                (F_J_ζ[i]).coeffs[1] = identity(constant_term(F_J2_ζ[i]))
                (F_J_ζ[i]).coeffs[2:order + 1] .= zero((F_J_ζ[i]).coeffs[1])
                (tmp1441[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp1441[i]).coeffs[2:order + 1] .= zero((tmp1441[i]).coeffs[1])
                (ξx[i]).coeffs[1] = constant_term(tmp1441[i]) / constant_term(r_p1d2[i])
                (ξx[i]).coeffs[2:order + 1] .= zero((ξx[i]).coeffs[1])
                (tmp1443[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp1443[i]).coeffs[2:order + 1] .= zero((tmp1443[i]).coeffs[1])
                (ξy[i]).coeffs[1] = constant_term(tmp1443[i]) / constant_term(r_p1d2[i])
                (ξy[i]).coeffs[2:order + 1] .= zero((ξy[i]).coeffs[1])
                (tmp1445[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp1445[i]).coeffs[2:order + 1] .= zero((tmp1445[i]).coeffs[1])
                (ξz[i]).coeffs[1] = constant_term(tmp1445[i]) / constant_term(r_p1d2[i])
                (ξz[i]).coeffs[2:order + 1] .= zero((ξz[i]).coeffs[1])
                (ηx1[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξz[i])
                (ηx1[i]).coeffs[2:order + 1] .= zero((ηx1[i]).coeffs[1])
                (ηy1[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξx[i])
                (ηy1[i]).coeffs[2:order + 1] .= zero((ηy1[i]).coeffs[1])
                (ηz1[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξy[i])
                (ηz1[i]).coeffs[2:order + 1] .= zero((ηz1[i]).coeffs[1])
                (ηx2[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξy[i])
                (ηx2[i]).coeffs[2:order + 1] .= zero((ηx2[i]).coeffs[1])
                (ηy2[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξz[i])
                (ηy2[i]).coeffs[2:order + 1] .= zero((ηy2[i]).coeffs[1])
                (ηz2[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξx[i])
                (ηz2[i]).coeffs[2:order + 1] .= zero((ηz2[i]).coeffs[1])
                (ηx[i]).coeffs[1] = constant_term(ηx1[i]) - constant_term(ηx2[i])
                (ηx[i]).coeffs[2:order + 1] .= zero((ηx[i]).coeffs[1])
                (ηy[i]).coeffs[1] = constant_term(ηy1[i]) - constant_term(ηy2[i])
                (ηy[i]).coeffs[2:order + 1] .= zero((ηy[i]).coeffs[1])
                (ηz[i]).coeffs[1] = constant_term(ηz1[i]) - constant_term(ηz2[i])
                (ηz[i]).coeffs[2:order + 1] .= zero((ηz[i]).coeffs[1])
                (ζx1[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηz[i])
                (ζx1[i]).coeffs[2:order + 1] .= zero((ζx1[i]).coeffs[1])
                (ζy1[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηx[i])
                (ζy1[i]).coeffs[2:order + 1] .= zero((ζy1[i]).coeffs[1])
                (ζz1[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηy[i])
                (ζz1[i]).coeffs[2:order + 1] .= zero((ζz1[i]).coeffs[1])
                (ζx2[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηy[i])
                (ζx2[i]).coeffs[2:order + 1] .= zero((ζx2[i]).coeffs[1])
                (ζy2[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηz[i])
                (ζy2[i]).coeffs[2:order + 1] .= zero((ζy2[i]).coeffs[1])
                (ζz2[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηx[i])
                (ζz2[i]).coeffs[2:order + 1] .= zero((ζz2[i]).coeffs[1])
                (ζx[i]).coeffs[1] = constant_term(ζx1[i]) - constant_term(ζx2[i])
                (ζx[i]).coeffs[2:order + 1] .= zero((ζx[i]).coeffs[1])
                (ζy[i]).coeffs[1] = constant_term(ζy1[i]) - constant_term(ζy2[i])
                (ζy[i]).coeffs[2:order + 1] .= zero((ζy[i]).coeffs[1])
                (ζz[i]).coeffs[1] = constant_term(ζz1[i]) - constant_term(ζz2[i])
                (ζz[i]).coeffs[2:order + 1] .= zero((ζz[i]).coeffs[1])
                (F_J2_x1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξx[i])
                (F_J2_x1[i]).coeffs[2:order + 1] .= zero((F_J2_x1[i]).coeffs[1])
                (F_J2_y1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξy[i])
                (F_J2_y1[i]).coeffs[2:order + 1] .= zero((F_J2_y1[i]).coeffs[1])
                (F_J2_z1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξz[i])
                (F_J2_z1[i]).coeffs[2:order + 1] .= zero((F_J2_z1[i]).coeffs[1])
                (F_J2_x2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζx[i])
                (F_J2_x2[i]).coeffs[2:order + 1] .= zero((F_J2_x2[i]).coeffs[1])
                (F_J2_y2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζy[i])
                (F_J2_y2[i]).coeffs[2:order + 1] .= zero((F_J2_y2[i]).coeffs[1])
                (F_J2_z2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζz[i])
                (F_J2_z2[i]).coeffs[2:order + 1] .= zero((F_J2_z2[i]).coeffs[1])
                (F_J2_x[i]).coeffs[1] = constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i])
                (F_J2_x[i]).coeffs[2:order + 1] .= zero((F_J2_x[i]).coeffs[1])
                (F_J2_y[i]).coeffs[1] = constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i])
                (F_J2_y[i]).coeffs[2:order + 1] .= zero((F_J2_y[i]).coeffs[1])
                (F_J2_z[i]).coeffs[1] = constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i])
                (F_J2_z[i]).coeffs[2:order + 1] .= zero((F_J2_z[i]).coeffs[1])
            end
            (tmp1475[i]).coeffs[1] = constant_term(ui[i]) ^ float(constant_term(2))
            (tmp1475[i]).coeffs[2:order + 1] .= zero((tmp1475[i]).coeffs[1])
            (tmp1477[i]).coeffs[1] = constant_term(vi[i]) ^ float(constant_term(2))
            (tmp1477[i]).coeffs[2:order + 1] .= zero((tmp1477[i]).coeffs[1])
            (tmp1478[i]).coeffs[1] = constant_term(tmp1475[i]) + constant_term(tmp1477[i])
            (tmp1478[i]).coeffs[2:order + 1] .= zero((tmp1478[i]).coeffs[1])
            (tmp1480[i]).coeffs[1] = constant_term(wi[i]) ^ float(constant_term(2))
            (tmp1480[i]).coeffs[2:order + 1] .= zero((tmp1480[i]).coeffs[1])
            (v2[i]).coeffs[1] = constant_term(tmp1478[i]) + constant_term(tmp1480[i])
            (v2[i]).coeffs[2:order + 1] .= zero((v2[i]).coeffs[1])
        end
    tmp1483.coeffs[1] = constant_term(q[4]) ^ float(constant_term(2))
    tmp1483.coeffs[2:order + 1] .= zero(tmp1483.coeffs[1])
    tmp1485.coeffs[1] = constant_term(q[5]) ^ float(constant_term(2))
    tmp1485.coeffs[2:order + 1] .= zero(tmp1485.coeffs[1])
    tmp1486.coeffs[1] = constant_term(tmp1483) + constant_term(tmp1485)
    tmp1486.coeffs[2:order + 1] .= zero(tmp1486.coeffs[1])
    tmp1488.coeffs[1] = constant_term(q[6]) ^ float(constant_term(2))
    tmp1488.coeffs[2:order + 1] .= zero(tmp1488.coeffs[1])
    (v2[N]).coeffs[1] = constant_term(tmp1486) + constant_term(tmp1488)
    (v2[N]).coeffs[2:order + 1] .= zero((v2[N]).coeffs[1])
    for i = 1:Nm1
        (temp_004[i]).coeffs[1] = constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N])
        (temp_004[i]).coeffs[2:order + 1] .= zero((temp_004[i]).coeffs[1])
        (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(temp_004[i]))
        (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
        if UJ_interaction[i]
            (tmp1491[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_x[i])
            (tmp1491[i]).coeffs[2:order + 1] .= zero((tmp1491[i]).coeffs[1])
            (temp_accX_i[i]).coeffs[1] = constant_term(accX) - constant_term(tmp1491[i])
            (temp_accX_i[i]).coeffs[2:order + 1] .= zero((temp_accX_i[i]).coeffs[1])
            accX.coeffs[1] = identity(constant_term(temp_accX_i[i]))
            accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
            (tmp1493[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_y[i])
            (tmp1493[i]).coeffs[2:order + 1] .= zero((tmp1493[i]).coeffs[1])
            (temp_accY_i[i]).coeffs[1] = constant_term(accY) - constant_term(tmp1493[i])
            (temp_accY_i[i]).coeffs[2:order + 1] .= zero((temp_accY_i[i]).coeffs[1])
            accY.coeffs[1] = identity(constant_term(temp_accY_i[i]))
            accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
            (tmp1495[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_z[i])
            (tmp1495[i]).coeffs[2:order + 1] .= zero((tmp1495[i]).coeffs[1])
            (temp_accZ_i[i]).coeffs[1] = constant_term(accZ) - constant_term(tmp1495[i])
            (temp_accZ_i[i]).coeffs[2:order + 1] .= zero((temp_accZ_i[i]).coeffs[1])
            accZ.coeffs[1] = identity(constant_term(temp_accZ_i[i]))
            accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
        end
    end
    (_4ϕj[N]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[N])
    (_4ϕj[N]).coeffs[2:order + 1] .= zero((_4ϕj[N]).coeffs[1])
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
            (ϕi_plus_4ϕj[i]).coeffs[1] = constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N])
            (ϕi_plus_4ϕj[i]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i]).coeffs[1])
            (tmp1501[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
            (tmp1501[i]).coeffs[2:order + 1] .= zero((tmp1501[i]).coeffs[1])
            (tmp1503[i]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i])
            (tmp1503[i]).coeffs[2:order + 1] .= zero((tmp1503[i]).coeffs[1])
            (tmp1504[i]).coeffs[1] = constant_term(tmp1501[i]) - constant_term(tmp1503[i])
            (tmp1504[i]).coeffs[2:order + 1] .= zero((tmp1504[i]).coeffs[1])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[1] = constant_term(tmp1504[i]) + constant_term(v2[N])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i]).coeffs[1])
            (ϕs_and_vs[i]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i])
            (ϕs_and_vs[i]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i]).coeffs[1])
            (Xij_t_Ui[i]).coeffs[1] = constant_term(X[i]) * constant_term(ui[i])
            (Xij_t_Ui[i]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i]).coeffs[1])
            (Yij_t_Vi[i]).coeffs[1] = constant_term(Y[i]) * constant_term(vi[i])
            (Yij_t_Vi[i]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i]).coeffs[1])
            (Zij_t_Wi[i]).coeffs[1] = constant_term(Z[i]) * constant_term(wi[i])
            (Zij_t_Wi[i]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i]).coeffs[1])
            (tmp1510[i]).coeffs[1] = constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i])
            (tmp1510[i]).coeffs[2:order + 1] .= zero((tmp1510[i]).coeffs[1])
            (Rij_dot_Vi[i]).coeffs[1] = constant_term(tmp1510[i]) + constant_term(Zij_t_Wi[i])
            (Rij_dot_Vi[i]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i]).coeffs[1])
            (tmp1513[i]).coeffs[1] = constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2))
            (tmp1513[i]).coeffs[2:order + 1] .= zero((tmp1513[i]).coeffs[1])
            (pn1t7[i]).coeffs[1] = constant_term(tmp1513[i]) / constant_term(r_p2[i])
            (pn1t7[i]).coeffs[2:order + 1] .= zero((pn1t7[i]).coeffs[1])
            (tmp1516[i]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i])
            (tmp1516[i]).coeffs[2:order + 1] .= zero((tmp1516[i]).coeffs[1])
            (pn1t2_7[i]).coeffs[1] = constant_term(ϕs_and_vs[i]) - constant_term(tmp1516[i])
            (pn1t2_7[i]).coeffs[2:order + 1] .= zero((pn1t2_7[i]).coeffs[1])
            (pn1t1_7[i]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i])
            (pn1t1_7[i]).coeffs[2:order + 1] .= zero((pn1t1_7[i]).coeffs[1])
            (pNX_t_X[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(X[i])
            (pNX_t_X[i]).coeffs[2:order + 1] .= zero((pNX_t_X[i]).coeffs[1])
            (pNY_t_Y[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(Y[i])
            (pNY_t_Y[i]).coeffs[2:order + 1] .= zero((pNY_t_Y[i]).coeffs[1])
            (pNZ_t_Z[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(Z[i])
            (pNZ_t_Z[i]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i]).coeffs[1])
            (tmp1523[i]).coeffs[1] = constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i])
            (tmp1523[i]).coeffs[2:order + 1] .= zero((tmp1523[i]).coeffs[1])
            (tmp1524[i]).coeffs[1] = constant_term(tmp1523[i]) + constant_term(pNZ_t_Z[i])
            (tmp1524[i]).coeffs[2:order + 1] .= zero((tmp1524[i]).coeffs[1])
            (tmp1525[i]).coeffs[1] = constant_term(0.5) * constant_term(tmp1524[i])
            (tmp1525[i]).coeffs[2:order + 1] .= zero((tmp1525[i]).coeffs[1])
            (pn1[i]).coeffs[1] = constant_term(pn1t1_7[i]) + constant_term(tmp1525[i])
            (pn1[i]).coeffs[2:order + 1] .= zero((pn1[i]).coeffs[1])
            (X_t_pn1[i]).coeffs[1] = constant_term(newton_acc_X[i]) * constant_term(pn1[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Y[i]) * constant_term(pn1[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Z[i]) * constant_term(pn1[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
            (pNX_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(pn3[i])
            (pNX_t_pn3[i]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i]).coeffs[1])
            (pNY_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(pn3[i])
            (pNY_t_pn3[i]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i]).coeffs[1])
            (pNZ_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(pn3[i])
            (pNZ_t_pn3[i]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i]).coeffs[1])
        end
    for i = 1:10
        (tmp1533[i]).coeffs[1] = constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i])
        (tmp1533[i]).coeffs[2:order + 1] .= zero((tmp1533[i]).coeffs[1])
        (termpnx[i]).coeffs[1] = constant_term(X_t_pn1[i]) + constant_term(tmp1533[i])
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (tmp1536[i]).coeffs[1] = constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i])
        (tmp1536[i]).coeffs[2:order + 1] .= zero((tmp1536[i]).coeffs[1])
        (termpny[i]).coeffs[1] = constant_term(Y_t_pn1[i]) + constant_term(tmp1536[i])
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (tmp1539[i]).coeffs[1] = constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i])
        (tmp1539[i]).coeffs[2:order + 1] .= zero((tmp1539[i]).coeffs[1])
        (termpnz[i]).coeffs[1] = constant_term(Z_t_pn1[i]) + constant_term(tmp1539[i])
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            (X_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_X[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Y[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Z[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
        end
    for i = 11:Nm1
        (termpnx[i]).coeffs[1] = identity(constant_term(X_t_pn1[i]))
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (termpny[i]).coeffs[1] = identity(constant_term(Y_t_pn1[i]))
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (termpnz[i]).coeffs[1] = identity(constant_term(Z_t_pn1[i]))
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    postNewtonX.coeffs[1] = constant_term(pntempX) * constant_term(c_m2)
    postNewtonX.coeffs[2:order + 1] .= zero(postNewtonX.coeffs[1])
    postNewtonY.coeffs[1] = constant_term(pntempY) * constant_term(c_m2)
    postNewtonY.coeffs[2:order + 1] .= zero(postNewtonY.coeffs[1])
    postNewtonZ.coeffs[1] = constant_term(pntempZ) * constant_term(c_m2)
    postNewtonZ.coeffs[2:order + 1] .= zero(postNewtonZ.coeffs[1])
    tmp1551.coeffs[1] = constant_term(Y[1]) * constant_term(W[1])
    tmp1551.coeffs[2:order + 1] .= zero(tmp1551.coeffs[1])
    tmp1552.coeffs[1] = constant_term(Z[1]) * constant_term(V[1])
    tmp1552.coeffs[2:order + 1] .= zero(tmp1552.coeffs[1])
    hx.coeffs[1] = constant_term(tmp1551) - constant_term(tmp1552)
    hx.coeffs[2:order + 1] .= zero(hx.coeffs[1])
    tmp1554.coeffs[1] = constant_term(Z[1]) * constant_term(U[1])
    tmp1554.coeffs[2:order + 1] .= zero(tmp1554.coeffs[1])
    tmp1555.coeffs[1] = constant_term(X[1]) * constant_term(W[1])
    tmp1555.coeffs[2:order + 1] .= zero(tmp1555.coeffs[1])
    hy.coeffs[1] = constant_term(tmp1554) - constant_term(tmp1555)
    hy.coeffs[2:order + 1] .= zero(hy.coeffs[1])
    tmp1557.coeffs[1] = constant_term(X[1]) * constant_term(V[1])
    tmp1557.coeffs[2:order + 1] .= zero(tmp1557.coeffs[1])
    tmp1558.coeffs[1] = constant_term(Y[1]) * constant_term(U[1])
    tmp1558.coeffs[2:order + 1] .= zero(tmp1558.coeffs[1])
    hz.coeffs[1] = constant_term(tmp1557) - constant_term(tmp1558)
    hz.coeffs[2:order + 1] .= zero(hz.coeffs[1])
    tmp1560.coeffs[1] = constant_term(hz) * constant_term(Y[1])
    tmp1560.coeffs[2:order + 1] .= zero(tmp1560.coeffs[1])
    tmp1561.coeffs[1] = constant_term(hy) * constant_term(Z[1])
    tmp1561.coeffs[2:order + 1] .= zero(tmp1561.coeffs[1])
    t_x.coeffs[1] = constant_term(tmp1560) - constant_term(tmp1561)
    t_x.coeffs[2:order + 1] .= zero(t_x.coeffs[1])
    tmp1563.coeffs[1] = constant_term(hx) * constant_term(Z[1])
    tmp1563.coeffs[2:order + 1] .= zero(tmp1563.coeffs[1])
    tmp1564.coeffs[1] = constant_term(hz) * constant_term(X[1])
    tmp1564.coeffs[2:order + 1] .= zero(tmp1564.coeffs[1])
    t_y.coeffs[1] = constant_term(tmp1563) - constant_term(tmp1564)
    t_y.coeffs[2:order + 1] .= zero(t_y.coeffs[1])
    tmp1566.coeffs[1] = constant_term(hy) * constant_term(X[1])
    tmp1566.coeffs[2:order + 1] .= zero(tmp1566.coeffs[1])
    tmp1567.coeffs[1] = constant_term(hx) * constant_term(Y[1])
    tmp1567.coeffs[2:order + 1] .= zero(tmp1567.coeffs[1])
    t_z.coeffs[1] = constant_term(tmp1566) - constant_term(tmp1567)
    t_z.coeffs[2:order + 1] .= zero(t_z.coeffs[1])
    tmp1570.coeffs[1] = constant_term(t_x) ^ float(constant_term(2))
    tmp1570.coeffs[2:order + 1] .= zero(tmp1570.coeffs[1])
    tmp1572.coeffs[1] = constant_term(t_y) ^ float(constant_term(2))
    tmp1572.coeffs[2:order + 1] .= zero(tmp1572.coeffs[1])
    tmp1573.coeffs[1] = constant_term(tmp1570) + constant_term(tmp1572)
    tmp1573.coeffs[2:order + 1] .= zero(tmp1573.coeffs[1])
    tmp1575.coeffs[1] = constant_term(t_z) ^ float(constant_term(2))
    tmp1575.coeffs[2:order + 1] .= zero(tmp1575.coeffs[1])
    tmp1576.coeffs[1] = constant_term(tmp1573) + constant_term(tmp1575)
    tmp1576.coeffs[2:order + 1] .= zero(tmp1576.coeffs[1])
    t_norm.coeffs[1] = sqrt(constant_term(tmp1576))
    t_norm.coeffs[2:order + 1] .= zero(t_norm.coeffs[1])
    t_x_unit.coeffs[1] = constant_term(t_x) / constant_term(t_norm)
    t_x_unit.coeffs[2:order + 1] .= zero(t_x_unit.coeffs[1])
    t_y_unit.coeffs[1] = constant_term(t_y) / constant_term(t_norm)
    t_y_unit.coeffs[2:order + 1] .= zero(t_y_unit.coeffs[1])
    t_z_unit.coeffs[1] = constant_term(t_z) / constant_term(t_norm)
    t_z_unit.coeffs[2:order + 1] .= zero(t_z_unit.coeffs[1])
    tmp1581.coeffs[1] = constant_term(X[1]) / constant_term(r_p1d2[1])
    tmp1581.coeffs[2:order + 1] .= zero(tmp1581.coeffs[1])
    r_x_unit.coeffs[1] = -(constant_term(tmp1581))
    r_x_unit.coeffs[2:order + 1] .= zero(r_x_unit.coeffs[1])
    tmp1583.coeffs[1] = constant_term(Y[1]) / constant_term(r_p1d2[1])
    tmp1583.coeffs[2:order + 1] .= zero(tmp1583.coeffs[1])
    r_y_unit.coeffs[1] = -(constant_term(tmp1583))
    r_y_unit.coeffs[2:order + 1] .= zero(r_y_unit.coeffs[1])
    tmp1585.coeffs[1] = constant_term(Z[1]) / constant_term(r_p1d2[1])
    tmp1585.coeffs[2:order + 1] .= zero(tmp1585.coeffs[1])
    r_z_unit.coeffs[1] = -(constant_term(tmp1585))
    r_z_unit.coeffs[2:order + 1] .= zero(r_z_unit.coeffs[1])
    g_r.coeffs[1] = identity(constant_term(r_p2[1]))
    g_r.coeffs[2:order + 1] .= zero(g_r.coeffs[1])
    A2_t_g_r.coeffs[1] = constant_term(q[7]) / constant_term(g_r)
    A2_t_g_r.coeffs[2:order + 1] .= zero(A2_t_g_r.coeffs[1])
    A1_t_g_r.coeffs[1] = constant_term(q[8]) / constant_term(g_r)
    A1_t_g_r.coeffs[2:order + 1] .= zero(A1_t_g_r.coeffs[1])
    tmp1589.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_x_unit)
    tmp1589.coeffs[2:order + 1] .= zero(tmp1589.coeffs[1])
    tmp1590.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_x_unit)
    tmp1590.coeffs[2:order + 1] .= zero(tmp1590.coeffs[1])
    NGAx.coeffs[1] = constant_term(tmp1589) + constant_term(tmp1590)
    NGAx.coeffs[2:order + 1] .= zero(NGAx.coeffs[1])
    tmp1592.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_y_unit)
    tmp1592.coeffs[2:order + 1] .= zero(tmp1592.coeffs[1])
    tmp1593.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_y_unit)
    tmp1593.coeffs[2:order + 1] .= zero(tmp1593.coeffs[1])
    NGAy.coeffs[1] = constant_term(tmp1592) + constant_term(tmp1593)
    NGAy.coeffs[2:order + 1] .= zero(NGAy.coeffs[1])
    tmp1595.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_z_unit)
    tmp1595.coeffs[2:order + 1] .= zero(tmp1595.coeffs[1])
    tmp1596.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_z_unit)
    tmp1596.coeffs[2:order + 1] .= zero(tmp1596.coeffs[1])
    NGAz.coeffs[1] = constant_term(tmp1595) + constant_term(tmp1596)
    NGAz.coeffs[2:order + 1] .= zero(NGAz.coeffs[1])
    tmp1598.coeffs[1] = constant_term(postNewtonX) + constant_term(accX)
    tmp1598.coeffs[2:order + 1] .= zero(tmp1598.coeffs[1])
    (dq[4]).coeffs[1] = constant_term(tmp1598) + constant_term(NGAx)
    (dq[4]).coeffs[2:order + 1] .= zero((dq[4]).coeffs[1])
    tmp1600.coeffs[1] = constant_term(postNewtonY) + constant_term(accY)
    tmp1600.coeffs[2:order + 1] .= zero(tmp1600.coeffs[1])
    (dq[5]).coeffs[1] = constant_term(tmp1600) + constant_term(NGAy)
    (dq[5]).coeffs[2:order + 1] .= zero((dq[5]).coeffs[1])
    tmp1602.coeffs[1] = constant_term(postNewtonZ) + constant_term(accZ)
    tmp1602.coeffs[2:order + 1] .= zero(tmp1602.coeffs[1])
    (dq[6]).coeffs[1] = constant_term(tmp1602) + constant_term(NGAz)
    (dq[6]).coeffs[2:order + 1] .= zero((dq[6]).coeffs[1])
    (dq[7]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[7]).coeffs[2:order + 1] .= zero((dq[7]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(pntempX, zero_q_1, ord)
        TaylorSeries.identity!(pntempY, zero_q_1, ord)
        TaylorSeries.identity!(pntempZ, zero_q_1, ord)
        TaylorSeries.identity!(accX, zero_q_1, ord)
        TaylorSeries.identity!(accY, zero_q_1, ord)
        TaylorSeries.identity!(accZ, zero_q_1, ord)
        TaylorSeries.identity!(dq[1], q[4], ord)
        TaylorSeries.identity!(dq[2], q[5], ord)
        TaylorSeries.identity!(dq[3], q[6], ord)
        TaylorSeries.identity!(newtonianNb_Potential[N], zero_q_1, ord)
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
                TaylorSeries.identity!(ui[i], ss16asteph_t[3 * ((N - 1) + i) - 2], ord)
                TaylorSeries.identity!(vi[i], ss16asteph_t[3 * ((N - 1) + i) - 1], ord)
                TaylorSeries.identity!(wi[i], ss16asteph_t[3 * ((N - 1) + i)], ord)
                TaylorSeries.subst!(X[i], ss16asteph_t[3i - 2], q[1], ord)
                TaylorSeries.subst!(Y[i], ss16asteph_t[3i - 1], q[2], ord)
                TaylorSeries.subst!(Z[i], ss16asteph_t[3i], q[3], ord)
                TaylorSeries.subst!(U[i], ui[i], dq[1], ord)
                TaylorSeries.subst!(V[i], vi[i], dq[2], ord)
                TaylorSeries.subst!(W[i], wi[i], dq[3], ord)
                TaylorSeries.mul!(tmp1343[1], 4, dq[1], ord)
                TaylorSeries.mul!(tmp1345[i], 3, ui[i], ord)
                TaylorSeries.subst!(_4U_m_3X[i], tmp1343[1], tmp1345[i], ord)
                TaylorSeries.mul!(tmp1348[2], 4, dq[2], ord)
                TaylorSeries.mul!(tmp1350[i], 3, vi[i], ord)
                TaylorSeries.subst!(_4V_m_3Y[i], tmp1348[2], tmp1350[i], ord)
                TaylorSeries.mul!(tmp1353[3], 4, dq[3], ord)
                TaylorSeries.mul!(tmp1355[i], 3, wi[i], ord)
                TaylorSeries.subst!(_4W_m_3Z[i], tmp1353[3], tmp1355[i], ord)
                TaylorSeries.mul!(pn2x[i], X[i], _4U_m_3X[i], ord)
                TaylorSeries.mul!(pn2y[i], Y[i], _4V_m_3Y[i], ord)
                TaylorSeries.mul!(pn2z[i], Z[i], _4W_m_3Z[i], ord)
                TaylorSeries.mul!(UU[i], ui[i], dq[1], ord)
                TaylorSeries.mul!(VV[i], vi[i], dq[2], ord)
                TaylorSeries.mul!(WW[i], wi[i], dq[3], ord)
                TaylorSeries.add!(tmp1363[i], UU[i], VV[i], ord)
                TaylorSeries.add!(vi_dot_vj[i], tmp1363[i], WW[i], ord)
                TaylorSeries.pow!(tmp1366[i], X[i], 2, ord)
                TaylorSeries.pow!(tmp1368[i], Y[i], 2, ord)
                TaylorSeries.add!(tmp1369[i], tmp1366[i], tmp1368[i], ord)
                TaylorSeries.pow!(tmp1371[i], Z[i], 2, ord)
                TaylorSeries.add!(r_p2[i], tmp1369[i], tmp1371[i], ord)
                TaylorSeries.sqrt!(r_p1d2[i], r_p2[i], ord)
                TaylorSeries.pow!(r_p3d2[i], r_p2[i], 1.5, ord)
                TaylorSeries.pow!(r_p7d2[i], r_p2[i], 3.5, ord)
                TaylorSeries.div!(newtonianCoeff[i], μ[i], r_p3d2[i], ord)
                TaylorSeries.add!(tmp1379[i], pn2x[i], pn2y[i], ord)
                TaylorSeries.add!(tmp1380[i], tmp1379[i], pn2z[i], ord)
                TaylorSeries.mul!(pn2[i], newtonianCoeff[i], tmp1380[i], ord)
                TaylorSeries.mul!(newton_acc_X[i], X[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Y[i], Y[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Z[i], Z[i], newtonianCoeff[i], ord)
                TaylorSeries.div!(newtonian1b_Potential[i], μ[i], r_p1d2[i], ord)
                TaylorSeries.mul!(pn3[i], 3.5, newtonian1b_Potential[i], ord)
                TaylorSeries.mul!(U_t_pn2[i], pn2[i], U[i], ord)
                TaylorSeries.mul!(V_t_pn2[i], pn2[i], V[i], ord)
                TaylorSeries.mul!(W_t_pn2[i], pn2[i], W[i], ord)
                if UJ_interaction[i]
                    TaylorSeries.subst!(tmp1391[i], X[i], ord)
                    TaylorSeries.mul!(t31[i], tmp1391[i], M_[1, 3, i], ord)
                    TaylorSeries.subst!(tmp1393[i], Y[i], ord)
                    TaylorSeries.mul!(t32[i], tmp1393[i], M_[2, 3, i], ord)
                    TaylorSeries.subst!(tmp1395[i], Z[i], ord)
                    TaylorSeries.mul!(t33[i], tmp1395[i], M_[3, 3, i], ord)
                    TaylorSeries.add!(tmp1397[i], t31[i], t32[i], ord)
                    TaylorSeries.add!(r_sin_ϕ[i], tmp1397[i], t33[i], ord)
                    TaylorSeries.div!(sin_ϕ[i], r_sin_ϕ[i], r_p1d2[i], ord)
                    TaylorSeries.asin!(ϕ[i], sin_ϕ[i], tmp1604[i], ord)
                    TaylorSeries.sincos!(tmp1605[i], cos_ϕ[i], ϕ[i], ord)
                    TaylorSeries.pow!(sin2_ϕ[i], sin_ϕ[i], 2, ord)
                    TaylorSeries.pow!(sin3_ϕ[i], sin_ϕ[i], 3, ord)
                    TaylorSeries.mul!(tmp1407[i], 1.5, sin2_ϕ[i], ord)
                    TaylorSeries.subst!(P_2_sin_ϕ[i], tmp1407[i], 0.5, ord)
                    TaylorSeries.mul!(∂P_2_sin_ϕ[i], 3, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1413[i], -1.5, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1415[i], 2.5, sin3_ϕ[i], ord)
                    TaylorSeries.add!(P_3_sin_ϕ[i], tmp1413[i], tmp1415[i], ord)
                    TaylorSeries.mul!(tmp1419[i], 7.5, sin2_ϕ[i], ord)
                    TaylorSeries.add!(∂P_3_sin_ϕ[i], -1.5, tmp1419[i], ord)
                    TaylorSeries.pow!(tmp1422[i], r_p2[i], 2, ord)
                    TaylorSeries.div!(tmp1423[i], Λ2[i], tmp1422[i], ord)
                    TaylorSeries.subst!(Λ2j_div_r4[i], tmp1423[i], ord)
                    TaylorSeries.pow!(tmp1426[i], r_p1d2[i], 5, ord)
                    TaylorSeries.div!(tmp1427[i], Λ3[i], tmp1426[i], ord)
                    TaylorSeries.subst!(Λ3j_div_r5[i], tmp1427[i], ord)
                    TaylorSeries.subst!(tmp1429[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_2[i], tmp1429[i], ∂P_2_sin_ϕ[i], ord)
                    TaylorSeries.subst!(tmp1431[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_3[i], tmp1431[i], ∂P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1434[i], Λ2j_div_r4[i], 3, ord)
                    TaylorSeries.mul!(F_J2_ξ[i], tmp1434[i], P_2_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J2_ζ[i], Λ2j_div_r4[i], m_c_ϕ_∂P_2[i], ord)
                    TaylorSeries.mul!(tmp1438[i], Λ3j_div_r5[i], 4, ord)
                    TaylorSeries.mul!(F_J3_ξ[i], tmp1438[i], P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J3_ζ[i], Λ3j_div_r5[i], m_c_ϕ_∂P_3[i], ord)
                    TaylorSeries.identity!(F_J_ξ[i], F_J2_ξ[i], ord)
                    TaylorSeries.identity!(F_J_ζ[i], F_J2_ζ[i], ord)
                    TaylorSeries.subst!(tmp1441[i], X[i], ord)
                    TaylorSeries.div!(ξx[i], tmp1441[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp1443[i], Y[i], ord)
                    TaylorSeries.div!(ξy[i], tmp1443[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp1445[i], Z[i], ord)
                    TaylorSeries.div!(ξz[i], tmp1445[i], r_p1d2[i], ord)
                    TaylorSeries.mul!(ηx1[i], M_[2, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηy1[i], M_[3, 3, i], ξx[i], ord)
                    TaylorSeries.mul!(ηz1[i], M_[1, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηx2[i], M_[3, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηy2[i], M_[1, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηz2[i], M_[2, 3, i], ξx[i], ord)
                    TaylorSeries.subst!(ηx[i], ηx1[i], ηx2[i], ord)
                    TaylorSeries.subst!(ηy[i], ηy1[i], ηy2[i], ord)
                    TaylorSeries.subst!(ηz[i], ηz1[i], ηz2[i], ord)
                    TaylorSeries.mul!(ζx1[i], ξy[i], ηz[i], ord)
                    TaylorSeries.mul!(ζy1[i], ξz[i], ηx[i], ord)
                    TaylorSeries.mul!(ζz1[i], ξx[i], ηy[i], ord)
                    TaylorSeries.mul!(ζx2[i], ξz[i], ηy[i], ord)
                    TaylorSeries.mul!(ζy2[i], ξx[i], ηz[i], ord)
                    TaylorSeries.mul!(ζz2[i], ξy[i], ηx[i], ord)
                    TaylorSeries.subst!(ζx[i], ζx1[i], ζx2[i], ord)
                    TaylorSeries.subst!(ζy[i], ζy1[i], ζy2[i], ord)
                    TaylorSeries.subst!(ζz[i], ζz1[i], ζz2[i], ord)
                    TaylorSeries.mul!(F_J2_x1[i], F_J_ξ[i], ξx[i], ord)
                    TaylorSeries.mul!(F_J2_y1[i], F_J_ξ[i], ξy[i], ord)
                    TaylorSeries.mul!(F_J2_z1[i], F_J_ξ[i], ξz[i], ord)
                    TaylorSeries.mul!(F_J2_x2[i], F_J_ζ[i], ζx[i], ord)
                    TaylorSeries.mul!(F_J2_y2[i], F_J_ζ[i], ζy[i], ord)
                    TaylorSeries.mul!(F_J2_z2[i], F_J_ζ[i], ζz[i], ord)
                    TaylorSeries.add!(F_J2_x[i], F_J2_x1[i], F_J2_x2[i], ord)
                    TaylorSeries.add!(F_J2_y[i], F_J2_y1[i], F_J2_y2[i], ord)
                    TaylorSeries.add!(F_J2_z[i], F_J2_z1[i], F_J2_z2[i], ord)
                end
                TaylorSeries.pow!(tmp1475[i], ui[i], 2, ord)
                TaylorSeries.pow!(tmp1477[i], vi[i], 2, ord)
                TaylorSeries.add!(tmp1478[i], tmp1475[i], tmp1477[i], ord)
                TaylorSeries.pow!(tmp1480[i], wi[i], 2, ord)
                TaylorSeries.add!(v2[i], tmp1478[i], tmp1480[i], ord)
            end
        TaylorSeries.pow!(tmp1483, q[4], 2, ord)
        TaylorSeries.pow!(tmp1485, q[5], 2, ord)
        TaylorSeries.add!(tmp1486, tmp1483, tmp1485, ord)
        TaylorSeries.pow!(tmp1488, q[6], 2, ord)
        TaylorSeries.add!(v2[N], tmp1486, tmp1488, ord)
        for i = 1:Nm1
            TaylorSeries.add!(temp_004[i], newtonian1b_Potential[i], newtonianNb_Potential[N], ord)
            TaylorSeries.identity!(newtonianNb_Potential[N], temp_004[i], ord)
            if UJ_interaction[i]
                TaylorSeries.mul!(tmp1491[i], μ[i], F_J2_x[i], ord)
                TaylorSeries.subst!(temp_accX_i[i], accX, tmp1491[i], ord)
                TaylorSeries.identity!(accX, temp_accX_i[i], ord)
                TaylorSeries.mul!(tmp1493[i], μ[i], F_J2_y[i], ord)
                TaylorSeries.subst!(temp_accY_i[i], accY, tmp1493[i], ord)
                TaylorSeries.identity!(accY, temp_accY_i[i], ord)
                TaylorSeries.mul!(tmp1495[i], μ[i], F_J2_z[i], ord)
                TaylorSeries.subst!(temp_accZ_i[i], accZ, tmp1495[i], ord)
                TaylorSeries.identity!(accZ, temp_accZ_i[i], ord)
            end
        end
        TaylorSeries.mul!(_4ϕj[N], 4, newtonianNb_Potential[N], ord)
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
                TaylorSeries.add!(ϕi_plus_4ϕj[i], newtonianNb_Potential_t[i], _4ϕj[N], ord)
                TaylorSeries.mul!(tmp1501[i], 2, v2[i], ord)
                TaylorSeries.mul!(tmp1503[i], 4, vi_dot_vj[i], ord)
                TaylorSeries.subst!(tmp1504[i], tmp1501[i], tmp1503[i], ord)
                TaylorSeries.add!(sj2_plus_2si2_minus_4vivj[i], tmp1504[i], v2[N], ord)
                TaylorSeries.subst!(ϕs_and_vs[i], sj2_plus_2si2_minus_4vivj[i], ϕi_plus_4ϕj[i], ord)
                TaylorSeries.mul!(Xij_t_Ui[i], X[i], ui[i], ord)
                TaylorSeries.mul!(Yij_t_Vi[i], Y[i], vi[i], ord)
                TaylorSeries.mul!(Zij_t_Wi[i], Z[i], wi[i], ord)
                TaylorSeries.add!(tmp1510[i], Xij_t_Ui[i], Yij_t_Vi[i], ord)
                TaylorSeries.add!(Rij_dot_Vi[i], tmp1510[i], Zij_t_Wi[i], ord)
                TaylorSeries.pow!(tmp1513[i], Rij_dot_Vi[i], 2, ord)
                TaylorSeries.div!(pn1t7[i], tmp1513[i], r_p2[i], ord)
                TaylorSeries.mul!(tmp1516[i], 1.5, pn1t7[i], ord)
                TaylorSeries.subst!(pn1t2_7[i], ϕs_and_vs[i], tmp1516[i], ord)
                TaylorSeries.add!(pn1t1_7[i], c_p2, pn1t2_7[i], ord)
                TaylorSeries.mul!(pNX_t_X[i], acceph_t[3i - 2], X[i], ord)
                TaylorSeries.mul!(pNY_t_Y[i], acceph_t[3i - 1], Y[i], ord)
                TaylorSeries.mul!(pNZ_t_Z[i], acceph_t[3i], Z[i], ord)
                TaylorSeries.add!(tmp1523[i], pNX_t_X[i], pNY_t_Y[i], ord)
                TaylorSeries.add!(tmp1524[i], tmp1523[i], pNZ_t_Z[i], ord)
                TaylorSeries.mul!(tmp1525[i], 0.5, tmp1524[i], ord)
                TaylorSeries.add!(pn1[i], pn1t1_7[i], tmp1525[i], ord)
                TaylorSeries.mul!(X_t_pn1[i], newton_acc_X[i], pn1[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], newton_acc_Y[i], pn1[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], newton_acc_Z[i], pn1[i], ord)
                TaylorSeries.mul!(pNX_t_pn3[i], acceph_t[3i - 2], pn3[i], ord)
                TaylorSeries.mul!(pNY_t_pn3[i], acceph_t[3i - 1], pn3[i], ord)
                TaylorSeries.mul!(pNZ_t_pn3[i], acceph_t[3i], pn3[i], ord)
            end
        for i = 1:10
            TaylorSeries.add!(tmp1533[i], U_t_pn2[i], pNX_t_pn3[i], ord)
            TaylorSeries.add!(termpnx[i], X_t_pn1[i], tmp1533[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.add!(tmp1536[i], V_t_pn2[i], pNY_t_pn3[i], ord)
            TaylorSeries.add!(termpny[i], Y_t_pn1[i], tmp1536[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.add!(tmp1539[i], W_t_pn2[i], pNZ_t_pn3[i], ord)
            TaylorSeries.add!(termpnz[i], Z_t_pn1[i], tmp1539[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
                TaylorSeries.mul!(X_t_pn1[i], c_p2, newton_acc_X[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], c_p2, newton_acc_Y[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], c_p2, newton_acc_Z[i], ord)
            end
        for i = 11:Nm1
            TaylorSeries.identity!(termpnx[i], X_t_pn1[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.identity!(termpny[i], Y_t_pn1[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.identity!(termpnz[i], Z_t_pn1[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        TaylorSeries.mul!(postNewtonX, pntempX, c_m2, ord)
        TaylorSeries.mul!(postNewtonY, pntempY, c_m2, ord)
        TaylorSeries.mul!(postNewtonZ, pntempZ, c_m2, ord)
        TaylorSeries.mul!(tmp1551, Y[1], W[1], ord)
        TaylorSeries.mul!(tmp1552, Z[1], V[1], ord)
        TaylorSeries.subst!(hx, tmp1551, tmp1552, ord)
        TaylorSeries.mul!(tmp1554, Z[1], U[1], ord)
        TaylorSeries.mul!(tmp1555, X[1], W[1], ord)
        TaylorSeries.subst!(hy, tmp1554, tmp1555, ord)
        TaylorSeries.mul!(tmp1557, X[1], V[1], ord)
        TaylorSeries.mul!(tmp1558, Y[1], U[1], ord)
        TaylorSeries.subst!(hz, tmp1557, tmp1558, ord)
        TaylorSeries.mul!(tmp1560, hz, Y[1], ord)
        TaylorSeries.mul!(tmp1561, hy, Z[1], ord)
        TaylorSeries.subst!(t_x, tmp1560, tmp1561, ord)
        TaylorSeries.mul!(tmp1563, hx, Z[1], ord)
        TaylorSeries.mul!(tmp1564, hz, X[1], ord)
        TaylorSeries.subst!(t_y, tmp1563, tmp1564, ord)
        TaylorSeries.mul!(tmp1566, hy, X[1], ord)
        TaylorSeries.mul!(tmp1567, hx, Y[1], ord)
        TaylorSeries.subst!(t_z, tmp1566, tmp1567, ord)
        TaylorSeries.pow!(tmp1570, t_x, 2, ord)
        TaylorSeries.pow!(tmp1572, t_y, 2, ord)
        TaylorSeries.add!(tmp1573, tmp1570, tmp1572, ord)
        TaylorSeries.pow!(tmp1575, t_z, 2, ord)
        TaylorSeries.add!(tmp1576, tmp1573, tmp1575, ord)
        TaylorSeries.sqrt!(t_norm, tmp1576, ord)
        TaylorSeries.div!(t_x_unit, t_x, t_norm, ord)
        TaylorSeries.div!(t_y_unit, t_y, t_norm, ord)
        TaylorSeries.div!(t_z_unit, t_z, t_norm, ord)
        TaylorSeries.div!(tmp1581, X[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_x_unit, tmp1581, ord)
        TaylorSeries.div!(tmp1583, Y[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_y_unit, tmp1583, ord)
        TaylorSeries.div!(tmp1585, Z[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_z_unit, tmp1585, ord)
        TaylorSeries.identity!(g_r, r_p2[1], ord)
        TaylorSeries.div!(A2_t_g_r, q[7], g_r, ord)
        TaylorSeries.div!(A1_t_g_r, q[8], g_r, ord)
        TaylorSeries.mul!(tmp1589, A2_t_g_r, t_x_unit, ord)
        TaylorSeries.mul!(tmp1590, A1_t_g_r, r_x_unit, ord)
        TaylorSeries.add!(NGAx, tmp1589, tmp1590, ord)
        TaylorSeries.mul!(tmp1592, A2_t_g_r, t_y_unit, ord)
        TaylorSeries.mul!(tmp1593, A1_t_g_r, r_y_unit, ord)
        TaylorSeries.add!(NGAy, tmp1592, tmp1593, ord)
        TaylorSeries.mul!(tmp1595, A2_t_g_r, t_z_unit, ord)
        TaylorSeries.mul!(tmp1596, A1_t_g_r, r_z_unit, ord)
        TaylorSeries.add!(NGAz, tmp1595, tmp1596, ord)
        TaylorSeries.add!(tmp1598, postNewtonX, accX, ord)
        TaylorSeries.add!(dq[4], tmp1598, NGAx, ord)
        TaylorSeries.add!(tmp1600, postNewtonY, accY, ord)
        TaylorSeries.add!(dq[5], tmp1600, NGAy, ord)
        TaylorSeries.add!(tmp1602, postNewtonZ, accZ, ord)
        TaylorSeries.add!(dq[6], tmp1602, NGAz, ord)
        TaylorSeries.identity!(dq[7], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_eph_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    X = Array{S}(undef, N)
    Y = Array{S}(undef, N)
    Z = Array{S}(undef, N)
    r_p2 = Array{S}(undef, N)
    r_p1d2 = Array{S}(undef, N)
    r_p3d2 = Array{S}(undef, N)
    r_p7d2 = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N)
    ui = Array{S}(undef, N - 1)
    vi = Array{S}(undef, N - 1)
    wi = Array{S}(undef, N - 1)
    U = Array{S}(undef, N)
    V = Array{S}(undef, N)
    W = Array{S}(undef, N)
    _4U_m_3X = Array{S}(undef, N)
    _4V_m_3Y = Array{S}(undef, N)
    _4W_m_3Z = Array{S}(undef, N)
    UU = Array{S}(undef, N)
    VV = Array{S}(undef, N)
    WW = Array{S}(undef, N)
    newtonian1b_Potential = Array{S}(undef, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N)
    newton_acc_Y = Array{S}(undef, N)
    newton_acc_Z = Array{S}(undef, N)
    v2 = Array{S}(undef, N)
    vi_dot_vj = Array{S}(undef, N)
    pn2 = Array{S}(undef, N)
    U_t_pn2 = Array{S}(undef, N)
    V_t_pn2 = Array{S}(undef, N)
    W_t_pn2 = Array{S}(undef, N)
    pn3 = Array{S}(undef, N)
    pNX_t_pn3 = Array{S}(undef, N)
    pNY_t_pn3 = Array{S}(undef, N)
    pNZ_t_pn3 = Array{S}(undef, N)
    _4ϕj = Array{S}(undef, N)
    ϕi_plus_4ϕj = Array{S}(undef, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N)
    ϕs_and_vs = Array{S}(undef, N)
    pn1t1_7 = Array{S}(undef, N)
    pNX_t_X = Array{S}(undef, N)
    pNY_t_Y = Array{S}(undef, N)
    pNZ_t_Z = Array{S}(undef, N)
    pn1 = Array{S}(undef, N)
    X_t_pn1 = Array{S}(undef, N)
    Y_t_pn1 = Array{S}(undef, N)
    Z_t_pn1 = Array{S}(undef, N)
    pntempX = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempY = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempZ = Taylor1(identity(constant_term(zero_q_1)), order)
    t31 = Array{S}(undef, N)
    t32 = Array{S}(undef, N)
    t33 = Array{S}(undef, N)
    r_sin_ϕ = Array{S}(undef, N)
    sin_ϕ = Array{S}(undef, N)
    ϕ = Array{S}(undef, N)
    cos_ϕ = Array{S}(undef, N)
    sin2_ϕ = Array{S}(undef, N)
    sin3_ϕ = Array{S}(undef, N)
    sin4_ϕ = Array{S}(undef, N)
    F_J2_x = Array{S}(undef, N)
    F_J2_y = Array{S}(undef, N)
    F_J2_z = Array{S}(undef, N)
    F_J2_x1 = Array{S}(undef, N)
    F_J2_y1 = Array{S}(undef, N)
    F_J2_z1 = Array{S}(undef, N)
    F_J2_x2 = Array{S}(undef, N)
    F_J2_y2 = Array{S}(undef, N)
    F_J2_z2 = Array{S}(undef, N)
    temp_accX_i = Array{S}(undef, N)
    temp_accY_i = Array{S}(undef, N)
    temp_accZ_i = Array{S}(undef, N)
    P_2_sin_ϕ = Array{S}(undef, N)
    ∂P_2_sin_ϕ = Array{S}(undef, N)
    P_3_sin_ϕ = Array{S}(undef, N)
    ∂P_3_sin_ϕ = Array{S}(undef, N)
    m_c_ϕ_∂P_2 = Array{S}(undef, N)
    m_c_ϕ_∂P_3 = Array{S}(undef, N)
    Λ2j_div_r4 = Array{S}(undef, N)
    Λ3j_div_r5 = Array{S}(undef, N)
    F_J_ξ = Array{S}(undef, N)
    F_J_η = Array{S}(undef, N)
    F_J_ζ = Array{S}(undef, N)
    F_J2_ξ = Array{S}(undef, N)
    F_J2_η = Array{S}(undef, N)
    F_J2_ζ = Array{S}(undef, N)
    F_J3_ξ = Array{S}(undef, N)
    F_J3_η = Array{S}(undef, N)
    F_J3_ζ = Array{S}(undef, N)
    ξx = Array{S}(undef, N)
    ξy = Array{S}(undef, N)
    ξz = Array{S}(undef, N)
    ηx = Array{S}(undef, N)
    ηy = Array{S}(undef, N)
    ηz = Array{S}(undef, N)
    ηx1 = Array{S}(undef, N)
    ηy1 = Array{S}(undef, N)
    ηz1 = Array{S}(undef, N)
    ηx2 = Array{S}(undef, N)
    ηy2 = Array{S}(undef, N)
    ηz2 = Array{S}(undef, N)
    ζx = Array{S}(undef, N)
    ζy = Array{S}(undef, N)
    ζz = Array{S}(undef, N)
    ζx1 = Array{S}(undef, N)
    ζy1 = Array{S}(undef, N)
    ζz1 = Array{S}(undef, N)
    ζx2 = Array{S}(undef, N)
    ζy2 = Array{S}(undef, N)
    ζz2 = Array{S}(undef, N)
    accX = Taylor1(identity(constant_term(zero_q_1)), order)
    accY = Taylor1(identity(constant_term(zero_q_1)), order)
    accZ = Taylor1(identity(constant_term(zero_q_1)), order)
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    dq[1] = Taylor1(identity(constant_term(q[4])), order)
    dq[2] = Taylor1(identity(constant_term(q[5])), order)
    dq[3] = Taylor1(identity(constant_term(q[6])), order)
    newtonianNb_Potential[N] = Taylor1(identity(constant_term(zero_q_1)), order)
    tmp1972 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1972 .= Taylor1(zero(_S), order)
    tmp1974 = Array{Taylor1{_S}}(undef, size(ui))
    tmp1974 .= Taylor1(zero(_S), order)
    tmp1977 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1977 .= Taylor1(zero(_S), order)
    tmp1979 = Array{Taylor1{_S}}(undef, size(vi))
    tmp1979 .= Taylor1(zero(_S), order)
    tmp1982 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1982 .= Taylor1(zero(_S), order)
    tmp1984 = Array{Taylor1{_S}}(undef, size(wi))
    tmp1984 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp1992 = Array{Taylor1{_S}}(undef, size(UU))
    tmp1992 .= Taylor1(zero(_S), order)
    tmp1995 = Array{Taylor1{_S}}(undef, size(X))
    tmp1995 .= Taylor1(zero(_S), order)
    tmp1997 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1997 .= Taylor1(zero(_S), order)
    tmp1998 = Array{Taylor1{_S}}(undef, size(tmp1995))
    tmp1998 .= Taylor1(zero(_S), order)
    tmp2000 = Array{Taylor1{_S}}(undef, size(Z))
    tmp2000 .= Taylor1(zero(_S), order)
    tmp2008 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp2008 .= Taylor1(zero(_S), order)
    tmp2009 = Array{Taylor1{_S}}(undef, size(tmp2008))
    tmp2009 .= Taylor1(zero(_S), order)
    tmp2104 = Array{Taylor1{_S}}(undef, size(ui))
    tmp2104 .= Taylor1(zero(_S), order)
    tmp2106 = Array{Taylor1{_S}}(undef, size(vi))
    tmp2106 .= Taylor1(zero(_S), order)
    tmp2107 = Array{Taylor1{_S}}(undef, size(tmp2104))
    tmp2107 .= Taylor1(zero(_S), order)
    tmp2109 = Array{Taylor1{_S}}(undef, size(wi))
    tmp2109 .= Taylor1(zero(_S), order)
    tmp2020 = Array{Taylor1{_S}}(undef, size(X))
    tmp2020 .= Taylor1(zero(_S), order)
    tmp2022 = Array{Taylor1{_S}}(undef, size(Y))
    tmp2022 .= Taylor1(zero(_S), order)
    tmp2024 = Array{Taylor1{_S}}(undef, size(Z))
    tmp2024 .= Taylor1(zero(_S), order)
    tmp2026 = Array{Taylor1{_S}}(undef, size(t31))
    tmp2026 .= Taylor1(zero(_S), order)
    tmp2183 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp2183 .= Taylor1(zero(_S), order)
    tmp2184 = Array{Taylor1{_S}}(undef, size(ϕ))
    tmp2184 .= Taylor1(zero(_S), order)
    tmp2036 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp2036 .= Taylor1(zero(_S), order)
    tmp2042 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp2042 .= Taylor1(zero(_S), order)
    tmp2044 = Array{Taylor1{_S}}(undef, size(sin3_ϕ))
    tmp2044 .= Taylor1(zero(_S), order)
    tmp2048 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp2048 .= Taylor1(zero(_S), order)
    tmp2051 = Array{Taylor1{_S}}(undef, size(r_p2))
    tmp2051 .= Taylor1(zero(_S), order)
    tmp2052 = Array{Taylor1{_S}}(undef, size(Λ2))
    tmp2052 .= Taylor1(zero(_S), order)
    tmp2055 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    tmp2055 .= Taylor1(zero(_S), order)
    tmp2056 = Array{Taylor1{_S}}(undef, size(Λ3))
    tmp2056 .= Taylor1(zero(_S), order)
    tmp2058 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp2058 .= Taylor1(zero(_S), order)
    tmp2060 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp2060 .= Taylor1(zero(_S), order)
    tmp2063 = Array{Taylor1{_S}}(undef, size(Λ2j_div_r4))
    tmp2063 .= Taylor1(zero(_S), order)
    tmp2067 = Array{Taylor1{_S}}(undef, size(Λ3j_div_r5))
    tmp2067 .= Taylor1(zero(_S), order)
    tmp2070 = Array{Taylor1{_S}}(undef, size(X))
    tmp2070 .= Taylor1(zero(_S), order)
    tmp2072 = Array{Taylor1{_S}}(undef, size(Y))
    tmp2072 .= Taylor1(zero(_S), order)
    tmp2074 = Array{Taylor1{_S}}(undef, size(Z))
    tmp2074 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            ui[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2])), order)
            vi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1])), order)
            wi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)])), order)
            X[i] = Taylor1(constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1]), order)
            Y[i] = Taylor1(constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2]), order)
            Z[i] = Taylor1(constant_term(ss16asteph_t[3i]) - constant_term(q[3]), order)
            U[i] = Taylor1(constant_term(ui[i]) - constant_term(dq[1]), order)
            V[i] = Taylor1(constant_term(vi[i]) - constant_term(dq[2]), order)
            W[i] = Taylor1(constant_term(wi[i]) - constant_term(dq[3]), order)
            tmp1972[1] = Taylor1(constant_term(4) * constant_term(dq[1]), order)
            tmp1974[i] = Taylor1(constant_term(3) * constant_term(ui[i]), order)
            _4U_m_3X[i] = Taylor1(constant_term(tmp1972[1]) - constant_term(tmp1974[i]), order)
            tmp1977[2] = Taylor1(constant_term(4) * constant_term(dq[2]), order)
            tmp1979[i] = Taylor1(constant_term(3) * constant_term(vi[i]), order)
            _4V_m_3Y[i] = Taylor1(constant_term(tmp1977[2]) - constant_term(tmp1979[i]), order)
            tmp1982[3] = Taylor1(constant_term(4) * constant_term(dq[3]), order)
            tmp1984[i] = Taylor1(constant_term(3) * constant_term(wi[i]), order)
            _4W_m_3Z[i] = Taylor1(constant_term(tmp1982[3]) - constant_term(tmp1984[i]), order)
            pn2x[i] = Taylor1(constant_term(X[i]) * constant_term(_4U_m_3X[i]), order)
            pn2y[i] = Taylor1(constant_term(Y[i]) * constant_term(_4V_m_3Y[i]), order)
            pn2z[i] = Taylor1(constant_term(Z[i]) * constant_term(_4W_m_3Z[i]), order)
            UU[i] = Taylor1(constant_term(ui[i]) * constant_term(dq[1]), order)
            VV[i] = Taylor1(constant_term(vi[i]) * constant_term(dq[2]), order)
            WW[i] = Taylor1(constant_term(wi[i]) * constant_term(dq[3]), order)
            tmp1992[i] = Taylor1(constant_term(UU[i]) + constant_term(VV[i]), order)
            vi_dot_vj[i] = Taylor1(constant_term(tmp1992[i]) + constant_term(WW[i]), order)
            tmp1995[i] = Taylor1(constant_term(X[i]) ^ float(constant_term(2)), order)
            tmp1997[i] = Taylor1(constant_term(Y[i]) ^ float(constant_term(2)), order)
            tmp1998[i] = Taylor1(constant_term(tmp1995[i]) + constant_term(tmp1997[i]), order)
            tmp2000[i] = Taylor1(constant_term(Z[i]) ^ float(constant_term(2)), order)
            r_p2[i] = Taylor1(constant_term(tmp1998[i]) + constant_term(tmp2000[i]), order)
            r_p1d2[i] = Taylor1(sqrt(constant_term(r_p2[i])), order)
            r_p3d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(1.5)), order)
            r_p7d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(3.5)), order)
            newtonianCoeff[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i]), order)
            tmp2008[i] = Taylor1(constant_term(pn2x[i]) + constant_term(pn2y[i]), order)
            tmp2009[i] = Taylor1(constant_term(tmp2008[i]) + constant_term(pn2z[i]), order)
            pn2[i] = Taylor1(constant_term(newtonianCoeff[i]) * constant_term(tmp2009[i]), order)
            newton_acc_X[i] = Taylor1(constant_term(X[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Y[i] = Taylor1(constant_term(Y[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Z[i] = Taylor1(constant_term(Z[i]) * constant_term(newtonianCoeff[i]), order)
            newtonian1b_Potential[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i]), order)
            pn3[i] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i]), order)
            U_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(U[i]), order)
            V_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(V[i]), order)
            W_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(W[i]), order)
            if UJ_interaction[i]
                tmp2020[i] = Taylor1(-(constant_term(X[i])), order)
                t31[i] = Taylor1(constant_term(tmp2020[i]) * constant_term(M_[1, 3, i]), order)
                tmp2022[i] = Taylor1(-(constant_term(Y[i])), order)
                t32[i] = Taylor1(constant_term(tmp2022[i]) * constant_term(M_[2, 3, i]), order)
                tmp2024[i] = Taylor1(-(constant_term(Z[i])), order)
                t33[i] = Taylor1(constant_term(tmp2024[i]) * constant_term(M_[3, 3, i]), order)
                tmp2026[i] = Taylor1(constant_term(t31[i]) + constant_term(t32[i]), order)
                r_sin_ϕ[i] = Taylor1(constant_term(tmp2026[i]) + constant_term(t33[i]), order)
                sin_ϕ[i] = Taylor1(constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i]), order)
                ϕ[i] = Taylor1(asin(constant_term(sin_ϕ[i])), order)
                tmp2183[i] = Taylor1(sqrt(1 - constant_term(sin_ϕ[i]) ^ 2), order)
                cos_ϕ[i] = Taylor1(cos(constant_term(ϕ[i])), order)
                tmp2184[i] = Taylor1(sin(constant_term(ϕ[i])), order)
                sin2_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(2)), order)
                sin3_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(3)), order)
                tmp2036[i] = Taylor1(constant_term(1.5) * constant_term(sin2_ϕ[i]), order)
                P_2_sin_ϕ[i] = Taylor1(constant_term(tmp2036[i]) - constant_term(0.5), order)
                ∂P_2_sin_ϕ[i] = Taylor1(constant_term(3) * constant_term(sin_ϕ[i]), order)
                tmp2042[i] = Taylor1(constant_term(-1.5) * constant_term(sin_ϕ[i]), order)
                tmp2044[i] = Taylor1(constant_term(2.5) * constant_term(sin3_ϕ[i]), order)
                P_3_sin_ϕ[i] = Taylor1(constant_term(tmp2042[i]) + constant_term(tmp2044[i]), order)
                tmp2048[i] = Taylor1(constant_term(7.5) * constant_term(sin2_ϕ[i]), order)
                ∂P_3_sin_ϕ[i] = Taylor1(constant_term(-1.5) + constant_term(tmp2048[i]), order)
                tmp2051[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(2)), order)
                tmp2052[i] = Taylor1(constant_term(Λ2[i]) / constant_term(tmp2051[i]), order)
                Λ2j_div_r4[i] = Taylor1(-(constant_term(tmp2052[i])), order)
                tmp2055[i] = Taylor1(constant_term(r_p1d2[i]) ^ float(constant_term(5)), order)
                tmp2056[i] = Taylor1(constant_term(Λ3[i]) / constant_term(tmp2055[i]), order)
                Λ3j_div_r5[i] = Taylor1(-(constant_term(tmp2056[i])), order)
                tmp2058[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_2[i] = Taylor1(constant_term(tmp2058[i]) * constant_term(∂P_2_sin_ϕ[i]), order)
                tmp2060[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_3[i] = Taylor1(constant_term(tmp2060[i]) * constant_term(∂P_3_sin_ϕ[i]), order)
                tmp2063[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(3), order)
                F_J2_ξ[i] = Taylor1(constant_term(tmp2063[i]) * constant_term(P_2_sin_ϕ[i]), order)
                F_J2_ζ[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i]), order)
                tmp2067[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(4), order)
                F_J3_ξ[i] = Taylor1(constant_term(tmp2067[i]) * constant_term(P_3_sin_ϕ[i]), order)
                F_J3_ζ[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i]), order)
                F_J_ξ[i] = Taylor1(identity(constant_term(F_J2_ξ[i])), order)
                F_J_ζ[i] = Taylor1(identity(constant_term(F_J2_ζ[i])), order)
                tmp2070[i] = Taylor1(-(constant_term(X[i])), order)
                ξx[i] = Taylor1(constant_term(tmp2070[i]) / constant_term(r_p1d2[i]), order)
                tmp2072[i] = Taylor1(-(constant_term(Y[i])), order)
                ξy[i] = Taylor1(constant_term(tmp2072[i]) / constant_term(r_p1d2[i]), order)
                tmp2074[i] = Taylor1(-(constant_term(Z[i])), order)
                ξz[i] = Taylor1(constant_term(tmp2074[i]) / constant_term(r_p1d2[i]), order)
                ηx1[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξz[i]), order)
                ηy1[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξx[i]), order)
                ηz1[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξy[i]), order)
                ηx2[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξy[i]), order)
                ηy2[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξz[i]), order)
                ηz2[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξx[i]), order)
                ηx[i] = Taylor1(constant_term(ηx1[i]) - constant_term(ηx2[i]), order)
                ηy[i] = Taylor1(constant_term(ηy1[i]) - constant_term(ηy2[i]), order)
                ηz[i] = Taylor1(constant_term(ηz1[i]) - constant_term(ηz2[i]), order)
                ζx1[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηz[i]), order)
                ζy1[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηx[i]), order)
                ζz1[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηy[i]), order)
                ζx2[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηy[i]), order)
                ζy2[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηz[i]), order)
                ζz2[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηx[i]), order)
                ζx[i] = Taylor1(constant_term(ζx1[i]) - constant_term(ζx2[i]), order)
                ζy[i] = Taylor1(constant_term(ζy1[i]) - constant_term(ζy2[i]), order)
                ζz[i] = Taylor1(constant_term(ζz1[i]) - constant_term(ζz2[i]), order)
                F_J2_x1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξx[i]), order)
                F_J2_y1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξy[i]), order)
                F_J2_z1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξz[i]), order)
                F_J2_x2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζx[i]), order)
                F_J2_y2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζy[i]), order)
                F_J2_z2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζz[i]), order)
                F_J2_x[i] = Taylor1(constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i]), order)
                F_J2_y[i] = Taylor1(constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i]), order)
                F_J2_z[i] = Taylor1(constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i]), order)
            end
            tmp2104[i] = Taylor1(constant_term(ui[i]) ^ float(constant_term(2)), order)
            tmp2106[i] = Taylor1(constant_term(vi[i]) ^ float(constant_term(2)), order)
            tmp2107[i] = Taylor1(constant_term(tmp2104[i]) + constant_term(tmp2106[i]), order)
            tmp2109[i] = Taylor1(constant_term(wi[i]) ^ float(constant_term(2)), order)
            v2[i] = Taylor1(constant_term(tmp2107[i]) + constant_term(tmp2109[i]), order)
        end
    tmp2112 = Taylor1(constant_term(q[4]) ^ float(constant_term(2)), order)
    tmp2114 = Taylor1(constant_term(q[5]) ^ float(constant_term(2)), order)
    tmp2115 = Taylor1(constant_term(tmp2112) + constant_term(tmp2114), order)
    tmp2117 = Taylor1(constant_term(q[6]) ^ float(constant_term(2)), order)
    v2[N] = Taylor1(constant_term(tmp2115) + constant_term(tmp2117), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp2120 = Array{Taylor1{_S}}(undef, size(μ))
    tmp2120 .= Taylor1(zero(_S), order)
    tmp2122 = Array{Taylor1{_S}}(undef, size(μ))
    tmp2122 .= Taylor1(zero(_S), order)
    tmp2124 = Array{Taylor1{_S}}(undef, size(μ))
    tmp2124 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        temp_004[i] = Taylor1(constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N]), order)
        newtonianNb_Potential[N] = Taylor1(identity(constant_term(temp_004[i])), order)
        if UJ_interaction[i]
            tmp2120[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_x[i]), order)
            temp_accX_i[i] = Taylor1(constant_term(accX) - constant_term(tmp2120[i]), order)
            accX = Taylor1(identity(constant_term(temp_accX_i[i])), order)
            tmp2122[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_y[i]), order)
            temp_accY_i[i] = Taylor1(constant_term(accY) - constant_term(tmp2122[i]), order)
            accY = Taylor1(identity(constant_term(temp_accY_i[i])), order)
            tmp2124[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_z[i]), order)
            temp_accZ_i[i] = Taylor1(constant_term(accZ) - constant_term(tmp2124[i]), order)
            accZ = Taylor1(identity(constant_term(temp_accZ_i[i])), order)
        end
    end
    _4ϕj[N] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[N]), order)
    tmp2130 = Array{Taylor1{_S}}(undef, size(v2))
    tmp2130 .= Taylor1(zero(_S), order)
    tmp2132 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp2132 .= Taylor1(zero(_S), order)
    tmp2133 = Array{Taylor1{_S}}(undef, size(tmp2130))
    tmp2133 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp2139 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp2139 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp2139))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp2142 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp2142 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp2142))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp2145 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp2145 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    tmp2152 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp2152 .= Taylor1(zero(_S), order)
    tmp2153 = Array{Taylor1{_S}}(undef, size(tmp2152))
    tmp2153 .= Taylor1(zero(_S), order)
    tmp2154 = Array{Taylor1{_S}}(undef, size(tmp2153))
    tmp2154 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
            ϕi_plus_4ϕj[i] = Taylor1(constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N]), order)
            tmp2130[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
            tmp2132[i] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i]), order)
            tmp2133[i] = Taylor1(constant_term(tmp2130[i]) - constant_term(tmp2132[i]), order)
            sj2_plus_2si2_minus_4vivj[i] = Taylor1(constant_term(tmp2133[i]) + constant_term(v2[N]), order)
            ϕs_and_vs[i] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i]), order)
            Xij_t_Ui[i] = Taylor1(constant_term(X[i]) * constant_term(ui[i]), order)
            Yij_t_Vi[i] = Taylor1(constant_term(Y[i]) * constant_term(vi[i]), order)
            Zij_t_Wi[i] = Taylor1(constant_term(Z[i]) * constant_term(wi[i]), order)
            tmp2139[i] = Taylor1(constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i]), order)
            Rij_dot_Vi[i] = Taylor1(constant_term(tmp2139[i]) + constant_term(Zij_t_Wi[i]), order)
            tmp2142[i] = Taylor1(constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2)), order)
            pn1t7[i] = Taylor1(constant_term(tmp2142[i]) / constant_term(r_p2[i]), order)
            tmp2145[i] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i]), order)
            pn1t2_7[i] = Taylor1(constant_term(ϕs_and_vs[i]) - constant_term(tmp2145[i]), order)
            pn1t1_7[i] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i]), order)
            pNX_t_X[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(X[i]), order)
            pNY_t_Y[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(Y[i]), order)
            pNZ_t_Z[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(Z[i]), order)
            tmp2152[i] = Taylor1(constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i]), order)
            tmp2153[i] = Taylor1(constant_term(tmp2152[i]) + constant_term(pNZ_t_Z[i]), order)
            tmp2154[i] = Taylor1(constant_term(0.5) * constant_term(tmp2153[i]), order)
            pn1[i] = Taylor1(constant_term(pn1t1_7[i]) + constant_term(tmp2154[i]), order)
            X_t_pn1[i] = Taylor1(constant_term(newton_acc_X[i]) * constant_term(pn1[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(newton_acc_Y[i]) * constant_term(pn1[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(newton_acc_Z[i]) * constant_term(pn1[i]), order)
            pNX_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(pn3[i]), order)
            pNY_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(pn3[i]), order)
            pNZ_t_pn3[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(pn3[i]), order)
        end
    tmp2162 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp2162 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp2165 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp2165 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp2168 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp2168 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for i = 1:10
        tmp2162[i] = Taylor1(constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i]), order)
        termpnx[i] = Taylor1(constant_term(X_t_pn1[i]) + constant_term(tmp2162[i]), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        tmp2165[i] = Taylor1(constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i]), order)
        termpny[i] = Taylor1(constant_term(Y_t_pn1[i]) + constant_term(tmp2165[i]), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        tmp2168[i] = Taylor1(constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i]), order)
        termpnz[i] = Taylor1(constant_term(Z_t_pn1[i]) + constant_term(tmp2168[i]), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            X_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_X[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Y[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Z[i]), order)
        end
    for i = 11:Nm1
        termpnx[i] = Taylor1(identity(constant_term(X_t_pn1[i])), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        termpny[i] = Taylor1(identity(constant_term(Y_t_pn1[i])), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        termpnz[i] = Taylor1(identity(constant_term(Z_t_pn1[i])), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    postNewtonX = Taylor1(constant_term(pntempX) * constant_term(c_m2), order)
    postNewtonY = Taylor1(constant_term(pntempY) * constant_term(c_m2), order)
    postNewtonZ = Taylor1(constant_term(pntempZ) * constant_term(c_m2), order)
    dq[4] = Taylor1(constant_term(postNewtonX) + constant_term(accX), order)
    dq[5] = Taylor1(constant_term(postNewtonY) + constant_term(accY), order)
    dq[6] = Taylor1(constant_term(postNewtonZ) + constant_term(accZ), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp2112, tmp2114, tmp2115, tmp2117, pntempX, pntempY, pntempZ, accX, accY, accZ, postNewtonX, postNewtonY, postNewtonZ], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, ui, vi, wi, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newtonianNb_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, t31, t32, t33, r_sin_ϕ, sin_ϕ, ϕ, cos_ϕ, sin2_ϕ, sin3_ϕ, F_J2_x, F_J2_y, F_J2_z, F_J2_x1, F_J2_y1, F_J2_z1, F_J2_x2, F_J2_y2, F_J2_z2, temp_accX_i, temp_accY_i, temp_accZ_i, P_2_sin_ϕ, ∂P_2_sin_ϕ, P_3_sin_ϕ, ∂P_3_sin_ϕ, m_c_ϕ_∂P_2, m_c_ϕ_∂P_3, Λ2j_div_r4, Λ3j_div_r5, F_J_ξ, F_J_ζ, F_J2_ξ, F_J2_ζ, F_J3_ξ, F_J3_ζ, ξx, ξy, ξz, ηx, ηy, ηz, ηx1, ηy1, ηz1, ηx2, ηy2, ηz2, ζx, ζy, ζz, ζx1, ζy1, ζz1, ζx2, ζy2, ζz2, tmp1972, tmp1974, tmp1977, tmp1979, tmp1982, tmp1984, pn2x, pn2y, pn2z, tmp1992, tmp1995, tmp1997, tmp1998, tmp2000, tmp2008, tmp2009, tmp2020, tmp2022, tmp2024, tmp2026, tmp2183, tmp2184, tmp2036, tmp2042, tmp2044, tmp2048, tmp2051, tmp2052, tmp2055, tmp2056, tmp2058, tmp2060, tmp2063, tmp2067, tmp2070, tmp2072, tmp2074, tmp2104, tmp2106, tmp2107, tmp2109, temp_004, tmp2120, tmp2122, tmp2124, tmp2130, tmp2132, tmp2133, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp2139, Rij_dot_Vi, tmp2142, pn1t7, tmp2145, pn1t2_7, tmp2152, tmp2153, tmp2154, tmp2162, termpnx, sumpnx, tmp2165, termpny, sumpny, tmp2168, termpnz, sumpnz], [Array{Taylor1{_S}, 2}(undef, 0, 0)], [Array{Taylor1{_S}, 3}(undef, 0, 0, 0)], [Array{Taylor1{_S}, 4}(undef, 0, 0, 0, 0)])
end

# TaylorIntegration.jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_eph_threads!
function TaylorIntegration.jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp2112 = __ralloc.v0[1]
    tmp2114 = __ralloc.v0[2]
    tmp2115 = __ralloc.v0[3]
    tmp2117 = __ralloc.v0[4]
    pntempX = __ralloc.v0[5]
    pntempY = __ralloc.v0[6]
    pntempZ = __ralloc.v0[7]
    accX = __ralloc.v0[8]
    accY = __ralloc.v0[9]
    accZ = __ralloc.v0[10]
    postNewtonX = __ralloc.v0[11]
    postNewtonY = __ralloc.v0[12]
    postNewtonZ = __ralloc.v0[13]
    X = __ralloc.v1[1]
    Y = __ralloc.v1[2]
    Z = __ralloc.v1[3]
    r_p2 = __ralloc.v1[4]
    r_p1d2 = __ralloc.v1[5]
    r_p3d2 = __ralloc.v1[6]
    r_p7d2 = __ralloc.v1[7]
    newtonianCoeff = __ralloc.v1[8]
    ui = __ralloc.v1[9]
    vi = __ralloc.v1[10]
    wi = __ralloc.v1[11]
    U = __ralloc.v1[12]
    V = __ralloc.v1[13]
    W = __ralloc.v1[14]
    _4U_m_3X = __ralloc.v1[15]
    _4V_m_3Y = __ralloc.v1[16]
    _4W_m_3Z = __ralloc.v1[17]
    UU = __ralloc.v1[18]
    VV = __ralloc.v1[19]
    WW = __ralloc.v1[20]
    newtonian1b_Potential = __ralloc.v1[21]
    newtonianNb_Potential = __ralloc.v1[22]
    newton_acc_X = __ralloc.v1[23]
    newton_acc_Y = __ralloc.v1[24]
    newton_acc_Z = __ralloc.v1[25]
    v2 = __ralloc.v1[26]
    vi_dot_vj = __ralloc.v1[27]
    pn2 = __ralloc.v1[28]
    U_t_pn2 = __ralloc.v1[29]
    V_t_pn2 = __ralloc.v1[30]
    W_t_pn2 = __ralloc.v1[31]
    pn3 = __ralloc.v1[32]
    pNX_t_pn3 = __ralloc.v1[33]
    pNY_t_pn3 = __ralloc.v1[34]
    pNZ_t_pn3 = __ralloc.v1[35]
    _4ϕj = __ralloc.v1[36]
    ϕi_plus_4ϕj = __ralloc.v1[37]
    sj2_plus_2si2_minus_4vivj = __ralloc.v1[38]
    ϕs_and_vs = __ralloc.v1[39]
    pn1t1_7 = __ralloc.v1[40]
    pNX_t_X = __ralloc.v1[41]
    pNY_t_Y = __ralloc.v1[42]
    pNZ_t_Z = __ralloc.v1[43]
    pn1 = __ralloc.v1[44]
    X_t_pn1 = __ralloc.v1[45]
    Y_t_pn1 = __ralloc.v1[46]
    Z_t_pn1 = __ralloc.v1[47]
    t31 = __ralloc.v1[48]
    t32 = __ralloc.v1[49]
    t33 = __ralloc.v1[50]
    r_sin_ϕ = __ralloc.v1[51]
    sin_ϕ = __ralloc.v1[52]
    ϕ = __ralloc.v1[53]
    cos_ϕ = __ralloc.v1[54]
    sin2_ϕ = __ralloc.v1[55]
    sin3_ϕ = __ralloc.v1[56]
    F_J2_x = __ralloc.v1[57]
    F_J2_y = __ralloc.v1[58]
    F_J2_z = __ralloc.v1[59]
    F_J2_x1 = __ralloc.v1[60]
    F_J2_y1 = __ralloc.v1[61]
    F_J2_z1 = __ralloc.v1[62]
    F_J2_x2 = __ralloc.v1[63]
    F_J2_y2 = __ralloc.v1[64]
    F_J2_z2 = __ralloc.v1[65]
    temp_accX_i = __ralloc.v1[66]
    temp_accY_i = __ralloc.v1[67]
    temp_accZ_i = __ralloc.v1[68]
    P_2_sin_ϕ = __ralloc.v1[69]
    ∂P_2_sin_ϕ = __ralloc.v1[70]
    P_3_sin_ϕ = __ralloc.v1[71]
    ∂P_3_sin_ϕ = __ralloc.v1[72]
    m_c_ϕ_∂P_2 = __ralloc.v1[73]
    m_c_ϕ_∂P_3 = __ralloc.v1[74]
    Λ2j_div_r4 = __ralloc.v1[75]
    Λ3j_div_r5 = __ralloc.v1[76]
    F_J_ξ = __ralloc.v1[77]
    F_J_ζ = __ralloc.v1[78]
    F_J2_ξ = __ralloc.v1[79]
    F_J2_ζ = __ralloc.v1[80]
    F_J3_ξ = __ralloc.v1[81]
    F_J3_ζ = __ralloc.v1[82]
    ξx = __ralloc.v1[83]
    ξy = __ralloc.v1[84]
    ξz = __ralloc.v1[85]
    ηx = __ralloc.v1[86]
    ηy = __ralloc.v1[87]
    ηz = __ralloc.v1[88]
    ηx1 = __ralloc.v1[89]
    ηy1 = __ralloc.v1[90]
    ηz1 = __ralloc.v1[91]
    ηx2 = __ralloc.v1[92]
    ηy2 = __ralloc.v1[93]
    ηz2 = __ralloc.v1[94]
    ζx = __ralloc.v1[95]
    ζy = __ralloc.v1[96]
    ζz = __ralloc.v1[97]
    ζx1 = __ralloc.v1[98]
    ζy1 = __ralloc.v1[99]
    ζz1 = __ralloc.v1[100]
    ζx2 = __ralloc.v1[101]
    ζy2 = __ralloc.v1[102]
    ζz2 = __ralloc.v1[103]
    tmp1972 = __ralloc.v1[104]
    tmp1974 = __ralloc.v1[105]
    tmp1977 = __ralloc.v1[106]
    tmp1979 = __ralloc.v1[107]
    tmp1982 = __ralloc.v1[108]
    tmp1984 = __ralloc.v1[109]
    pn2x = __ralloc.v1[110]
    pn2y = __ralloc.v1[111]
    pn2z = __ralloc.v1[112]
    tmp1992 = __ralloc.v1[113]
    tmp1995 = __ralloc.v1[114]
    tmp1997 = __ralloc.v1[115]
    tmp1998 = __ralloc.v1[116]
    tmp2000 = __ralloc.v1[117]
    tmp2008 = __ralloc.v1[118]
    tmp2009 = __ralloc.v1[119]
    tmp2020 = __ralloc.v1[120]
    tmp2022 = __ralloc.v1[121]
    tmp2024 = __ralloc.v1[122]
    tmp2026 = __ralloc.v1[123]
    tmp2183 = __ralloc.v1[124]
    tmp2184 = __ralloc.v1[125]
    tmp2036 = __ralloc.v1[126]
    tmp2042 = __ralloc.v1[127]
    tmp2044 = __ralloc.v1[128]
    tmp2048 = __ralloc.v1[129]
    tmp2051 = __ralloc.v1[130]
    tmp2052 = __ralloc.v1[131]
    tmp2055 = __ralloc.v1[132]
    tmp2056 = __ralloc.v1[133]
    tmp2058 = __ralloc.v1[134]
    tmp2060 = __ralloc.v1[135]
    tmp2063 = __ralloc.v1[136]
    tmp2067 = __ralloc.v1[137]
    tmp2070 = __ralloc.v1[138]
    tmp2072 = __ralloc.v1[139]
    tmp2074 = __ralloc.v1[140]
    tmp2104 = __ralloc.v1[141]
    tmp2106 = __ralloc.v1[142]
    tmp2107 = __ralloc.v1[143]
    tmp2109 = __ralloc.v1[144]
    temp_004 = __ralloc.v1[145]
    tmp2120 = __ralloc.v1[146]
    tmp2122 = __ralloc.v1[147]
    tmp2124 = __ralloc.v1[148]
    tmp2130 = __ralloc.v1[149]
    tmp2132 = __ralloc.v1[150]
    tmp2133 = __ralloc.v1[151]
    Xij_t_Ui = __ralloc.v1[152]
    Yij_t_Vi = __ralloc.v1[153]
    Zij_t_Wi = __ralloc.v1[154]
    tmp2139 = __ralloc.v1[155]
    Rij_dot_Vi = __ralloc.v1[156]
    tmp2142 = __ralloc.v1[157]
    pn1t7 = __ralloc.v1[158]
    tmp2145 = __ralloc.v1[159]
    pn1t2_7 = __ralloc.v1[160]
    tmp2152 = __ralloc.v1[161]
    tmp2153 = __ralloc.v1[162]
    tmp2154 = __ralloc.v1[163]
    tmp2162 = __ralloc.v1[164]
    termpnx = __ralloc.v1[165]
    sumpnx = __ralloc.v1[166]
    tmp2165 = __ralloc.v1[167]
    termpny = __ralloc.v1[168]
    sumpny = __ralloc.v1[169]
    tmp2168 = __ralloc.v1[170]
    termpnz = __ralloc.v1[171]
    sumpnz = __ralloc.v1[172]
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = evaleph(params[1], dsj2k, q[1])
    local acceph_t = evaleph(params[2], dsj2k, q[1])
    local newtonianNb_Potential_t = evaleph(params[3], dsj2k, q[1])
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    pntempX.coeffs[1] = identity(constant_term(zero_q_1))
    pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
    pntempY.coeffs[1] = identity(constant_term(zero_q_1))
    pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
    pntempZ.coeffs[1] = identity(constant_term(zero_q_1))
    pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    accX.coeffs[1] = identity(constant_term(zero_q_1))
    accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
    accY.coeffs[1] = identity(constant_term(zero_q_1))
    accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
    accZ.coeffs[1] = identity(constant_term(zero_q_1))
    accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    (dq[1]).coeffs[1] = identity(constant_term(q[4]))
    (dq[1]).coeffs[2:order + 1] .= zero((dq[1]).coeffs[1])
    (dq[2]).coeffs[1] = identity(constant_term(q[5]))
    (dq[2]).coeffs[2:order + 1] .= zero((dq[2]).coeffs[1])
    (dq[3]).coeffs[1] = identity(constant_term(q[6]))
    (dq[3]).coeffs[2:order + 1] .= zero((dq[3]).coeffs[1])
    (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(zero_q_1))
    (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            (ui[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2]))
            (ui[i]).coeffs[2:order + 1] .= zero((ui[i]).coeffs[1])
            (vi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1]))
            (vi[i]).coeffs[2:order + 1] .= zero((vi[i]).coeffs[1])
            (wi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)]))
            (wi[i]).coeffs[2:order + 1] .= zero((wi[i]).coeffs[1])
            (X[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1])
            (X[i]).coeffs[2:order + 1] .= zero((X[i]).coeffs[1])
            (Y[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2])
            (Y[i]).coeffs[2:order + 1] .= zero((Y[i]).coeffs[1])
            (Z[i]).coeffs[1] = constant_term(ss16asteph_t[3i]) - constant_term(q[3])
            (Z[i]).coeffs[2:order + 1] .= zero((Z[i]).coeffs[1])
            (U[i]).coeffs[1] = constant_term(ui[i]) - constant_term(dq[1])
            (U[i]).coeffs[2:order + 1] .= zero((U[i]).coeffs[1])
            (V[i]).coeffs[1] = constant_term(vi[i]) - constant_term(dq[2])
            (V[i]).coeffs[2:order + 1] .= zero((V[i]).coeffs[1])
            (W[i]).coeffs[1] = constant_term(wi[i]) - constant_term(dq[3])
            (W[i]).coeffs[2:order + 1] .= zero((W[i]).coeffs[1])
            (tmp1972[1]).coeffs[1] = constant_term(4) * constant_term(dq[1])
            (tmp1972[1]).coeffs[2:order + 1] .= zero((tmp1972[1]).coeffs[1])
            (tmp1974[i]).coeffs[1] = constant_term(3) * constant_term(ui[i])
            (tmp1974[i]).coeffs[2:order + 1] .= zero((tmp1974[i]).coeffs[1])
            (_4U_m_3X[i]).coeffs[1] = constant_term(tmp1972[1]) - constant_term(tmp1974[i])
            (_4U_m_3X[i]).coeffs[2:order + 1] .= zero((_4U_m_3X[i]).coeffs[1])
            (tmp1977[2]).coeffs[1] = constant_term(4) * constant_term(dq[2])
            (tmp1977[2]).coeffs[2:order + 1] .= zero((tmp1977[2]).coeffs[1])
            (tmp1979[i]).coeffs[1] = constant_term(3) * constant_term(vi[i])
            (tmp1979[i]).coeffs[2:order + 1] .= zero((tmp1979[i]).coeffs[1])
            (_4V_m_3Y[i]).coeffs[1] = constant_term(tmp1977[2]) - constant_term(tmp1979[i])
            (_4V_m_3Y[i]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i]).coeffs[1])
            (tmp1982[3]).coeffs[1] = constant_term(4) * constant_term(dq[3])
            (tmp1982[3]).coeffs[2:order + 1] .= zero((tmp1982[3]).coeffs[1])
            (tmp1984[i]).coeffs[1] = constant_term(3) * constant_term(wi[i])
            (tmp1984[i]).coeffs[2:order + 1] .= zero((tmp1984[i]).coeffs[1])
            (_4W_m_3Z[i]).coeffs[1] = constant_term(tmp1982[3]) - constant_term(tmp1984[i])
            (_4W_m_3Z[i]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i]).coeffs[1])
            (pn2x[i]).coeffs[1] = constant_term(X[i]) * constant_term(_4U_m_3X[i])
            (pn2x[i]).coeffs[2:order + 1] .= zero((pn2x[i]).coeffs[1])
            (pn2y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(_4V_m_3Y[i])
            (pn2y[i]).coeffs[2:order + 1] .= zero((pn2y[i]).coeffs[1])
            (pn2z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(_4W_m_3Z[i])
            (pn2z[i]).coeffs[2:order + 1] .= zero((pn2z[i]).coeffs[1])
            (UU[i]).coeffs[1] = constant_term(ui[i]) * constant_term(dq[1])
            (UU[i]).coeffs[2:order + 1] .= zero((UU[i]).coeffs[1])
            (VV[i]).coeffs[1] = constant_term(vi[i]) * constant_term(dq[2])
            (VV[i]).coeffs[2:order + 1] .= zero((VV[i]).coeffs[1])
            (WW[i]).coeffs[1] = constant_term(wi[i]) * constant_term(dq[3])
            (WW[i]).coeffs[2:order + 1] .= zero((WW[i]).coeffs[1])
            (tmp1992[i]).coeffs[1] = constant_term(UU[i]) + constant_term(VV[i])
            (tmp1992[i]).coeffs[2:order + 1] .= zero((tmp1992[i]).coeffs[1])
            (vi_dot_vj[i]).coeffs[1] = constant_term(tmp1992[i]) + constant_term(WW[i])
            (vi_dot_vj[i]).coeffs[2:order + 1] .= zero((vi_dot_vj[i]).coeffs[1])
            (tmp1995[i]).coeffs[1] = constant_term(X[i]) ^ float(constant_term(2))
            (tmp1995[i]).coeffs[2:order + 1] .= zero((tmp1995[i]).coeffs[1])
            (tmp1997[i]).coeffs[1] = constant_term(Y[i]) ^ float(constant_term(2))
            (tmp1997[i]).coeffs[2:order + 1] .= zero((tmp1997[i]).coeffs[1])
            (tmp1998[i]).coeffs[1] = constant_term(tmp1995[i]) + constant_term(tmp1997[i])
            (tmp1998[i]).coeffs[2:order + 1] .= zero((tmp1998[i]).coeffs[1])
            (tmp2000[i]).coeffs[1] = constant_term(Z[i]) ^ float(constant_term(2))
            (tmp2000[i]).coeffs[2:order + 1] .= zero((tmp2000[i]).coeffs[1])
            (r_p2[i]).coeffs[1] = constant_term(tmp1998[i]) + constant_term(tmp2000[i])
            (r_p2[i]).coeffs[2:order + 1] .= zero((r_p2[i]).coeffs[1])
            (r_p1d2[i]).coeffs[1] = sqrt(constant_term(r_p2[i]))
            (r_p1d2[i]).coeffs[2:order + 1] .= zero((r_p1d2[i]).coeffs[1])
            (r_p3d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(1.5))
            (r_p3d2[i]).coeffs[2:order + 1] .= zero((r_p3d2[i]).coeffs[1])
            (r_p7d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(3.5))
            (r_p7d2[i]).coeffs[2:order + 1] .= zero((r_p7d2[i]).coeffs[1])
            (newtonianCoeff[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i])
            (newtonianCoeff[i]).coeffs[2:order + 1] .= zero((newtonianCoeff[i]).coeffs[1])
            (tmp2008[i]).coeffs[1] = constant_term(pn2x[i]) + constant_term(pn2y[i])
            (tmp2008[i]).coeffs[2:order + 1] .= zero((tmp2008[i]).coeffs[1])
            (tmp2009[i]).coeffs[1] = constant_term(tmp2008[i]) + constant_term(pn2z[i])
            (tmp2009[i]).coeffs[2:order + 1] .= zero((tmp2009[i]).coeffs[1])
            (pn2[i]).coeffs[1] = constant_term(newtonianCoeff[i]) * constant_term(tmp2009[i])
            (pn2[i]).coeffs[2:order + 1] .= zero((pn2[i]).coeffs[1])
            (newton_acc_X[i]).coeffs[1] = constant_term(X[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_X[i]).coeffs[2:order + 1] .= zero((newton_acc_X[i]).coeffs[1])
            (newton_acc_Y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Y[i]).coeffs[2:order + 1] .= zero((newton_acc_Y[i]).coeffs[1])
            (newton_acc_Z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Z[i]).coeffs[2:order + 1] .= zero((newton_acc_Z[i]).coeffs[1])
            (newtonian1b_Potential[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i])
            (newtonian1b_Potential[i]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i]).coeffs[1])
            (pn3[i]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i])
            (pn3[i]).coeffs[2:order + 1] .= zero((pn3[i]).coeffs[1])
            (U_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(U[i])
            (U_t_pn2[i]).coeffs[2:order + 1] .= zero((U_t_pn2[i]).coeffs[1])
            (V_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(V[i])
            (V_t_pn2[i]).coeffs[2:order + 1] .= zero((V_t_pn2[i]).coeffs[1])
            (W_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(W[i])
            (W_t_pn2[i]).coeffs[2:order + 1] .= zero((W_t_pn2[i]).coeffs[1])
            if UJ_interaction[i]
                (tmp2020[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp2020[i]).coeffs[2:order + 1] .= zero((tmp2020[i]).coeffs[1])
                (t31[i]).coeffs[1] = constant_term(tmp2020[i]) * constant_term(M_[1, 3, i])
                (t31[i]).coeffs[2:order + 1] .= zero((t31[i]).coeffs[1])
                (tmp2022[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp2022[i]).coeffs[2:order + 1] .= zero((tmp2022[i]).coeffs[1])
                (t32[i]).coeffs[1] = constant_term(tmp2022[i]) * constant_term(M_[2, 3, i])
                (t32[i]).coeffs[2:order + 1] .= zero((t32[i]).coeffs[1])
                (tmp2024[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp2024[i]).coeffs[2:order + 1] .= zero((tmp2024[i]).coeffs[1])
                (t33[i]).coeffs[1] = constant_term(tmp2024[i]) * constant_term(M_[3, 3, i])
                (t33[i]).coeffs[2:order + 1] .= zero((t33[i]).coeffs[1])
                (tmp2026[i]).coeffs[1] = constant_term(t31[i]) + constant_term(t32[i])
                (tmp2026[i]).coeffs[2:order + 1] .= zero((tmp2026[i]).coeffs[1])
                (r_sin_ϕ[i]).coeffs[1] = constant_term(tmp2026[i]) + constant_term(t33[i])
                (r_sin_ϕ[i]).coeffs[2:order + 1] .= zero((r_sin_ϕ[i]).coeffs[1])
                (sin_ϕ[i]).coeffs[1] = constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i])
                (sin_ϕ[i]).coeffs[2:order + 1] .= zero((sin_ϕ[i]).coeffs[1])
                (ϕ[i]).coeffs[1] = asin(constant_term(sin_ϕ[i]))
                (ϕ[i]).coeffs[2:order + 1] .= zero((ϕ[i]).coeffs[1])
                (tmp2183[i]).coeffs[1] = sqrt(1 - constant_term(sin_ϕ[i]) ^ 2)
                (tmp2183[i]).coeffs[2:order + 1] .= zero((tmp2183[i]).coeffs[1])
                (cos_ϕ[i]).coeffs[1] = cos(constant_term(ϕ[i]))
                (cos_ϕ[i]).coeffs[2:order + 1] .= zero((cos_ϕ[i]).coeffs[1])
                (tmp2184[i]).coeffs[1] = sin(constant_term(ϕ[i]))
                (tmp2184[i]).coeffs[2:order + 1] .= zero((tmp2184[i]).coeffs[1])
                (sin2_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(2))
                (sin2_ϕ[i]).coeffs[2:order + 1] .= zero((sin2_ϕ[i]).coeffs[1])
                (sin3_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(3))
                (sin3_ϕ[i]).coeffs[2:order + 1] .= zero((sin3_ϕ[i]).coeffs[1])
                (tmp2036[i]).coeffs[1] = constant_term(1.5) * constant_term(sin2_ϕ[i])
                (tmp2036[i]).coeffs[2:order + 1] .= zero((tmp2036[i]).coeffs[1])
                (P_2_sin_ϕ[i]).coeffs[1] = constant_term(tmp2036[i]) - constant_term(0.5)
                (P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_2_sin_ϕ[i]).coeffs[1])
                (∂P_2_sin_ϕ[i]).coeffs[1] = constant_term(3) * constant_term(sin_ϕ[i])
                (∂P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_2_sin_ϕ[i]).coeffs[1])
                (tmp2042[i]).coeffs[1] = constant_term(-1.5) * constant_term(sin_ϕ[i])
                (tmp2042[i]).coeffs[2:order + 1] .= zero((tmp2042[i]).coeffs[1])
                (tmp2044[i]).coeffs[1] = constant_term(2.5) * constant_term(sin3_ϕ[i])
                (tmp2044[i]).coeffs[2:order + 1] .= zero((tmp2044[i]).coeffs[1])
                (P_3_sin_ϕ[i]).coeffs[1] = constant_term(tmp2042[i]) + constant_term(tmp2044[i])
                (P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_3_sin_ϕ[i]).coeffs[1])
                (tmp2048[i]).coeffs[1] = constant_term(7.5) * constant_term(sin2_ϕ[i])
                (tmp2048[i]).coeffs[2:order + 1] .= zero((tmp2048[i]).coeffs[1])
                (∂P_3_sin_ϕ[i]).coeffs[1] = constant_term(-1.5) + constant_term(tmp2048[i])
                (∂P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_3_sin_ϕ[i]).coeffs[1])
                (tmp2051[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(2))
                (tmp2051[i]).coeffs[2:order + 1] .= zero((tmp2051[i]).coeffs[1])
                (tmp2052[i]).coeffs[1] = constant_term(Λ2[i]) / constant_term(tmp2051[i])
                (tmp2052[i]).coeffs[2:order + 1] .= zero((tmp2052[i]).coeffs[1])
                (Λ2j_div_r4[i]).coeffs[1] = -(constant_term(tmp2052[i]))
                (Λ2j_div_r4[i]).coeffs[2:order + 1] .= zero((Λ2j_div_r4[i]).coeffs[1])
                (tmp2055[i]).coeffs[1] = constant_term(r_p1d2[i]) ^ float(constant_term(5))
                (tmp2055[i]).coeffs[2:order + 1] .= zero((tmp2055[i]).coeffs[1])
                (tmp2056[i]).coeffs[1] = constant_term(Λ3[i]) / constant_term(tmp2055[i])
                (tmp2056[i]).coeffs[2:order + 1] .= zero((tmp2056[i]).coeffs[1])
                (Λ3j_div_r5[i]).coeffs[1] = -(constant_term(tmp2056[i]))
                (Λ3j_div_r5[i]).coeffs[2:order + 1] .= zero((Λ3j_div_r5[i]).coeffs[1])
                (tmp2058[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp2058[i]).coeffs[2:order + 1] .= zero((tmp2058[i]).coeffs[1])
                (m_c_ϕ_∂P_2[i]).coeffs[1] = constant_term(tmp2058[i]) * constant_term(∂P_2_sin_ϕ[i])
                (m_c_ϕ_∂P_2[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_2[i]).coeffs[1])
                (tmp2060[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp2060[i]).coeffs[2:order + 1] .= zero((tmp2060[i]).coeffs[1])
                (m_c_ϕ_∂P_3[i]).coeffs[1] = constant_term(tmp2060[i]) * constant_term(∂P_3_sin_ϕ[i])
                (m_c_ϕ_∂P_3[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_3[i]).coeffs[1])
                (tmp2063[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(3)
                (tmp2063[i]).coeffs[2:order + 1] .= zero((tmp2063[i]).coeffs[1])
                (F_J2_ξ[i]).coeffs[1] = constant_term(tmp2063[i]) * constant_term(P_2_sin_ϕ[i])
                (F_J2_ξ[i]).coeffs[2:order + 1] .= zero((F_J2_ξ[i]).coeffs[1])
                (F_J2_ζ[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i])
                (F_J2_ζ[i]).coeffs[2:order + 1] .= zero((F_J2_ζ[i]).coeffs[1])
                (tmp2067[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(4)
                (tmp2067[i]).coeffs[2:order + 1] .= zero((tmp2067[i]).coeffs[1])
                (F_J3_ξ[i]).coeffs[1] = constant_term(tmp2067[i]) * constant_term(P_3_sin_ϕ[i])
                (F_J3_ξ[i]).coeffs[2:order + 1] .= zero((F_J3_ξ[i]).coeffs[1])
                (F_J3_ζ[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i])
                (F_J3_ζ[i]).coeffs[2:order + 1] .= zero((F_J3_ζ[i]).coeffs[1])
                (F_J_ξ[i]).coeffs[1] = identity(constant_term(F_J2_ξ[i]))
                (F_J_ξ[i]).coeffs[2:order + 1] .= zero((F_J_ξ[i]).coeffs[1])
                (F_J_ζ[i]).coeffs[1] = identity(constant_term(F_J2_ζ[i]))
                (F_J_ζ[i]).coeffs[2:order + 1] .= zero((F_J_ζ[i]).coeffs[1])
                (tmp2070[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp2070[i]).coeffs[2:order + 1] .= zero((tmp2070[i]).coeffs[1])
                (ξx[i]).coeffs[1] = constant_term(tmp2070[i]) / constant_term(r_p1d2[i])
                (ξx[i]).coeffs[2:order + 1] .= zero((ξx[i]).coeffs[1])
                (tmp2072[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp2072[i]).coeffs[2:order + 1] .= zero((tmp2072[i]).coeffs[1])
                (ξy[i]).coeffs[1] = constant_term(tmp2072[i]) / constant_term(r_p1d2[i])
                (ξy[i]).coeffs[2:order + 1] .= zero((ξy[i]).coeffs[1])
                (tmp2074[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp2074[i]).coeffs[2:order + 1] .= zero((tmp2074[i]).coeffs[1])
                (ξz[i]).coeffs[1] = constant_term(tmp2074[i]) / constant_term(r_p1d2[i])
                (ξz[i]).coeffs[2:order + 1] .= zero((ξz[i]).coeffs[1])
                (ηx1[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξz[i])
                (ηx1[i]).coeffs[2:order + 1] .= zero((ηx1[i]).coeffs[1])
                (ηy1[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξx[i])
                (ηy1[i]).coeffs[2:order + 1] .= zero((ηy1[i]).coeffs[1])
                (ηz1[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξy[i])
                (ηz1[i]).coeffs[2:order + 1] .= zero((ηz1[i]).coeffs[1])
                (ηx2[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξy[i])
                (ηx2[i]).coeffs[2:order + 1] .= zero((ηx2[i]).coeffs[1])
                (ηy2[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξz[i])
                (ηy2[i]).coeffs[2:order + 1] .= zero((ηy2[i]).coeffs[1])
                (ηz2[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξx[i])
                (ηz2[i]).coeffs[2:order + 1] .= zero((ηz2[i]).coeffs[1])
                (ηx[i]).coeffs[1] = constant_term(ηx1[i]) - constant_term(ηx2[i])
                (ηx[i]).coeffs[2:order + 1] .= zero((ηx[i]).coeffs[1])
                (ηy[i]).coeffs[1] = constant_term(ηy1[i]) - constant_term(ηy2[i])
                (ηy[i]).coeffs[2:order + 1] .= zero((ηy[i]).coeffs[1])
                (ηz[i]).coeffs[1] = constant_term(ηz1[i]) - constant_term(ηz2[i])
                (ηz[i]).coeffs[2:order + 1] .= zero((ηz[i]).coeffs[1])
                (ζx1[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηz[i])
                (ζx1[i]).coeffs[2:order + 1] .= zero((ζx1[i]).coeffs[1])
                (ζy1[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηx[i])
                (ζy1[i]).coeffs[2:order + 1] .= zero((ζy1[i]).coeffs[1])
                (ζz1[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηy[i])
                (ζz1[i]).coeffs[2:order + 1] .= zero((ζz1[i]).coeffs[1])
                (ζx2[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηy[i])
                (ζx2[i]).coeffs[2:order + 1] .= zero((ζx2[i]).coeffs[1])
                (ζy2[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηz[i])
                (ζy2[i]).coeffs[2:order + 1] .= zero((ζy2[i]).coeffs[1])
                (ζz2[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηx[i])
                (ζz2[i]).coeffs[2:order + 1] .= zero((ζz2[i]).coeffs[1])
                (ζx[i]).coeffs[1] = constant_term(ζx1[i]) - constant_term(ζx2[i])
                (ζx[i]).coeffs[2:order + 1] .= zero((ζx[i]).coeffs[1])
                (ζy[i]).coeffs[1] = constant_term(ζy1[i]) - constant_term(ζy2[i])
                (ζy[i]).coeffs[2:order + 1] .= zero((ζy[i]).coeffs[1])
                (ζz[i]).coeffs[1] = constant_term(ζz1[i]) - constant_term(ζz2[i])
                (ζz[i]).coeffs[2:order + 1] .= zero((ζz[i]).coeffs[1])
                (F_J2_x1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξx[i])
                (F_J2_x1[i]).coeffs[2:order + 1] .= zero((F_J2_x1[i]).coeffs[1])
                (F_J2_y1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξy[i])
                (F_J2_y1[i]).coeffs[2:order + 1] .= zero((F_J2_y1[i]).coeffs[1])
                (F_J2_z1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξz[i])
                (F_J2_z1[i]).coeffs[2:order + 1] .= zero((F_J2_z1[i]).coeffs[1])
                (F_J2_x2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζx[i])
                (F_J2_x2[i]).coeffs[2:order + 1] .= zero((F_J2_x2[i]).coeffs[1])
                (F_J2_y2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζy[i])
                (F_J2_y2[i]).coeffs[2:order + 1] .= zero((F_J2_y2[i]).coeffs[1])
                (F_J2_z2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζz[i])
                (F_J2_z2[i]).coeffs[2:order + 1] .= zero((F_J2_z2[i]).coeffs[1])
                (F_J2_x[i]).coeffs[1] = constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i])
                (F_J2_x[i]).coeffs[2:order + 1] .= zero((F_J2_x[i]).coeffs[1])
                (F_J2_y[i]).coeffs[1] = constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i])
                (F_J2_y[i]).coeffs[2:order + 1] .= zero((F_J2_y[i]).coeffs[1])
                (F_J2_z[i]).coeffs[1] = constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i])
                (F_J2_z[i]).coeffs[2:order + 1] .= zero((F_J2_z[i]).coeffs[1])
            end
            (tmp2104[i]).coeffs[1] = constant_term(ui[i]) ^ float(constant_term(2))
            (tmp2104[i]).coeffs[2:order + 1] .= zero((tmp2104[i]).coeffs[1])
            (tmp2106[i]).coeffs[1] = constant_term(vi[i]) ^ float(constant_term(2))
            (tmp2106[i]).coeffs[2:order + 1] .= zero((tmp2106[i]).coeffs[1])
            (tmp2107[i]).coeffs[1] = constant_term(tmp2104[i]) + constant_term(tmp2106[i])
            (tmp2107[i]).coeffs[2:order + 1] .= zero((tmp2107[i]).coeffs[1])
            (tmp2109[i]).coeffs[1] = constant_term(wi[i]) ^ float(constant_term(2))
            (tmp2109[i]).coeffs[2:order + 1] .= zero((tmp2109[i]).coeffs[1])
            (v2[i]).coeffs[1] = constant_term(tmp2107[i]) + constant_term(tmp2109[i])
            (v2[i]).coeffs[2:order + 1] .= zero((v2[i]).coeffs[1])
        end
    tmp2112.coeffs[1] = constant_term(q[4]) ^ float(constant_term(2))
    tmp2112.coeffs[2:order + 1] .= zero(tmp2112.coeffs[1])
    tmp2114.coeffs[1] = constant_term(q[5]) ^ float(constant_term(2))
    tmp2114.coeffs[2:order + 1] .= zero(tmp2114.coeffs[1])
    tmp2115.coeffs[1] = constant_term(tmp2112) + constant_term(tmp2114)
    tmp2115.coeffs[2:order + 1] .= zero(tmp2115.coeffs[1])
    tmp2117.coeffs[1] = constant_term(q[6]) ^ float(constant_term(2))
    tmp2117.coeffs[2:order + 1] .= zero(tmp2117.coeffs[1])
    (v2[N]).coeffs[1] = constant_term(tmp2115) + constant_term(tmp2117)
    (v2[N]).coeffs[2:order + 1] .= zero((v2[N]).coeffs[1])
    for i = 1:Nm1
        (temp_004[i]).coeffs[1] = constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N])
        (temp_004[i]).coeffs[2:order + 1] .= zero((temp_004[i]).coeffs[1])
        (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(temp_004[i]))
        (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
        if UJ_interaction[i]
            (tmp2120[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_x[i])
            (tmp2120[i]).coeffs[2:order + 1] .= zero((tmp2120[i]).coeffs[1])
            (temp_accX_i[i]).coeffs[1] = constant_term(accX) - constant_term(tmp2120[i])
            (temp_accX_i[i]).coeffs[2:order + 1] .= zero((temp_accX_i[i]).coeffs[1])
            accX.coeffs[1] = identity(constant_term(temp_accX_i[i]))
            accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
            (tmp2122[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_y[i])
            (tmp2122[i]).coeffs[2:order + 1] .= zero((tmp2122[i]).coeffs[1])
            (temp_accY_i[i]).coeffs[1] = constant_term(accY) - constant_term(tmp2122[i])
            (temp_accY_i[i]).coeffs[2:order + 1] .= zero((temp_accY_i[i]).coeffs[1])
            accY.coeffs[1] = identity(constant_term(temp_accY_i[i]))
            accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
            (tmp2124[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_z[i])
            (tmp2124[i]).coeffs[2:order + 1] .= zero((tmp2124[i]).coeffs[1])
            (temp_accZ_i[i]).coeffs[1] = constant_term(accZ) - constant_term(tmp2124[i])
            (temp_accZ_i[i]).coeffs[2:order + 1] .= zero((temp_accZ_i[i]).coeffs[1])
            accZ.coeffs[1] = identity(constant_term(temp_accZ_i[i]))
            accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
        end
    end
    (_4ϕj[N]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[N])
    (_4ϕj[N]).coeffs[2:order + 1] .= zero((_4ϕj[N]).coeffs[1])
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
            (ϕi_plus_4ϕj[i]).coeffs[1] = constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N])
            (ϕi_plus_4ϕj[i]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i]).coeffs[1])
            (tmp2130[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
            (tmp2130[i]).coeffs[2:order + 1] .= zero((tmp2130[i]).coeffs[1])
            (tmp2132[i]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i])
            (tmp2132[i]).coeffs[2:order + 1] .= zero((tmp2132[i]).coeffs[1])
            (tmp2133[i]).coeffs[1] = constant_term(tmp2130[i]) - constant_term(tmp2132[i])
            (tmp2133[i]).coeffs[2:order + 1] .= zero((tmp2133[i]).coeffs[1])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[1] = constant_term(tmp2133[i]) + constant_term(v2[N])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i]).coeffs[1])
            (ϕs_and_vs[i]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i])
            (ϕs_and_vs[i]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i]).coeffs[1])
            (Xij_t_Ui[i]).coeffs[1] = constant_term(X[i]) * constant_term(ui[i])
            (Xij_t_Ui[i]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i]).coeffs[1])
            (Yij_t_Vi[i]).coeffs[1] = constant_term(Y[i]) * constant_term(vi[i])
            (Yij_t_Vi[i]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i]).coeffs[1])
            (Zij_t_Wi[i]).coeffs[1] = constant_term(Z[i]) * constant_term(wi[i])
            (Zij_t_Wi[i]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i]).coeffs[1])
            (tmp2139[i]).coeffs[1] = constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i])
            (tmp2139[i]).coeffs[2:order + 1] .= zero((tmp2139[i]).coeffs[1])
            (Rij_dot_Vi[i]).coeffs[1] = constant_term(tmp2139[i]) + constant_term(Zij_t_Wi[i])
            (Rij_dot_Vi[i]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i]).coeffs[1])
            (tmp2142[i]).coeffs[1] = constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2))
            (tmp2142[i]).coeffs[2:order + 1] .= zero((tmp2142[i]).coeffs[1])
            (pn1t7[i]).coeffs[1] = constant_term(tmp2142[i]) / constant_term(r_p2[i])
            (pn1t7[i]).coeffs[2:order + 1] .= zero((pn1t7[i]).coeffs[1])
            (tmp2145[i]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i])
            (tmp2145[i]).coeffs[2:order + 1] .= zero((tmp2145[i]).coeffs[1])
            (pn1t2_7[i]).coeffs[1] = constant_term(ϕs_and_vs[i]) - constant_term(tmp2145[i])
            (pn1t2_7[i]).coeffs[2:order + 1] .= zero((pn1t2_7[i]).coeffs[1])
            (pn1t1_7[i]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i])
            (pn1t1_7[i]).coeffs[2:order + 1] .= zero((pn1t1_7[i]).coeffs[1])
            (pNX_t_X[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(X[i])
            (pNX_t_X[i]).coeffs[2:order + 1] .= zero((pNX_t_X[i]).coeffs[1])
            (pNY_t_Y[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(Y[i])
            (pNY_t_Y[i]).coeffs[2:order + 1] .= zero((pNY_t_Y[i]).coeffs[1])
            (pNZ_t_Z[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(Z[i])
            (pNZ_t_Z[i]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i]).coeffs[1])
            (tmp2152[i]).coeffs[1] = constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i])
            (tmp2152[i]).coeffs[2:order + 1] .= zero((tmp2152[i]).coeffs[1])
            (tmp2153[i]).coeffs[1] = constant_term(tmp2152[i]) + constant_term(pNZ_t_Z[i])
            (tmp2153[i]).coeffs[2:order + 1] .= zero((tmp2153[i]).coeffs[1])
            (tmp2154[i]).coeffs[1] = constant_term(0.5) * constant_term(tmp2153[i])
            (tmp2154[i]).coeffs[2:order + 1] .= zero((tmp2154[i]).coeffs[1])
            (pn1[i]).coeffs[1] = constant_term(pn1t1_7[i]) + constant_term(tmp2154[i])
            (pn1[i]).coeffs[2:order + 1] .= zero((pn1[i]).coeffs[1])
            (X_t_pn1[i]).coeffs[1] = constant_term(newton_acc_X[i]) * constant_term(pn1[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Y[i]) * constant_term(pn1[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Z[i]) * constant_term(pn1[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
            (pNX_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(pn3[i])
            (pNX_t_pn3[i]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i]).coeffs[1])
            (pNY_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(pn3[i])
            (pNY_t_pn3[i]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i]).coeffs[1])
            (pNZ_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(pn3[i])
            (pNZ_t_pn3[i]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i]).coeffs[1])
        end
    for i = 1:10
        (tmp2162[i]).coeffs[1] = constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i])
        (tmp2162[i]).coeffs[2:order + 1] .= zero((tmp2162[i]).coeffs[1])
        (termpnx[i]).coeffs[1] = constant_term(X_t_pn1[i]) + constant_term(tmp2162[i])
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (tmp2165[i]).coeffs[1] = constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i])
        (tmp2165[i]).coeffs[2:order + 1] .= zero((tmp2165[i]).coeffs[1])
        (termpny[i]).coeffs[1] = constant_term(Y_t_pn1[i]) + constant_term(tmp2165[i])
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (tmp2168[i]).coeffs[1] = constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i])
        (tmp2168[i]).coeffs[2:order + 1] .= zero((tmp2168[i]).coeffs[1])
        (termpnz[i]).coeffs[1] = constant_term(Z_t_pn1[i]) + constant_term(tmp2168[i])
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            (X_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_X[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Y[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Z[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
        end
    for i = 11:Nm1
        (termpnx[i]).coeffs[1] = identity(constant_term(X_t_pn1[i]))
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (termpny[i]).coeffs[1] = identity(constant_term(Y_t_pn1[i]))
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (termpnz[i]).coeffs[1] = identity(constant_term(Z_t_pn1[i]))
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    postNewtonX.coeffs[1] = constant_term(pntempX) * constant_term(c_m2)
    postNewtonX.coeffs[2:order + 1] .= zero(postNewtonX.coeffs[1])
    postNewtonY.coeffs[1] = constant_term(pntempY) * constant_term(c_m2)
    postNewtonY.coeffs[2:order + 1] .= zero(postNewtonY.coeffs[1])
    postNewtonZ.coeffs[1] = constant_term(pntempZ) * constant_term(c_m2)
    postNewtonZ.coeffs[2:order + 1] .= zero(postNewtonZ.coeffs[1])
    (dq[4]).coeffs[1] = constant_term(postNewtonX) + constant_term(accX)
    (dq[4]).coeffs[2:order + 1] .= zero((dq[4]).coeffs[1])
    (dq[5]).coeffs[1] = constant_term(postNewtonY) + constant_term(accY)
    (dq[5]).coeffs[2:order + 1] .= zero((dq[5]).coeffs[1])
    (dq[6]).coeffs[1] = constant_term(postNewtonZ) + constant_term(accZ)
    (dq[6]).coeffs[2:order + 1] .= zero((dq[6]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(pntempX, zero_q_1, ord)
        TaylorSeries.identity!(pntempY, zero_q_1, ord)
        TaylorSeries.identity!(pntempZ, zero_q_1, ord)
        TaylorSeries.identity!(accX, zero_q_1, ord)
        TaylorSeries.identity!(accY, zero_q_1, ord)
        TaylorSeries.identity!(accZ, zero_q_1, ord)
        TaylorSeries.identity!(dq[1], q[4], ord)
        TaylorSeries.identity!(dq[2], q[5], ord)
        TaylorSeries.identity!(dq[3], q[6], ord)
        TaylorSeries.identity!(newtonianNb_Potential[N], zero_q_1, ord)
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:245 =# Threads.@threads for i = 1:Nm1
                TaylorSeries.identity!(ui[i], ss16asteph_t[3 * ((N - 1) + i) - 2], ord)
                TaylorSeries.identity!(vi[i], ss16asteph_t[3 * ((N - 1) + i) - 1], ord)
                TaylorSeries.identity!(wi[i], ss16asteph_t[3 * ((N - 1) + i)], ord)
                TaylorSeries.subst!(X[i], ss16asteph_t[3i - 2], q[1], ord)
                TaylorSeries.subst!(Y[i], ss16asteph_t[3i - 1], q[2], ord)
                TaylorSeries.subst!(Z[i], ss16asteph_t[3i], q[3], ord)
                TaylorSeries.subst!(U[i], ui[i], dq[1], ord)
                TaylorSeries.subst!(V[i], vi[i], dq[2], ord)
                TaylorSeries.subst!(W[i], wi[i], dq[3], ord)
                TaylorSeries.mul!(tmp1972[1], 4, dq[1], ord)
                TaylorSeries.mul!(tmp1974[i], 3, ui[i], ord)
                TaylorSeries.subst!(_4U_m_3X[i], tmp1972[1], tmp1974[i], ord)
                TaylorSeries.mul!(tmp1977[2], 4, dq[2], ord)
                TaylorSeries.mul!(tmp1979[i], 3, vi[i], ord)
                TaylorSeries.subst!(_4V_m_3Y[i], tmp1977[2], tmp1979[i], ord)
                TaylorSeries.mul!(tmp1982[3], 4, dq[3], ord)
                TaylorSeries.mul!(tmp1984[i], 3, wi[i], ord)
                TaylorSeries.subst!(_4W_m_3Z[i], tmp1982[3], tmp1984[i], ord)
                TaylorSeries.mul!(pn2x[i], X[i], _4U_m_3X[i], ord)
                TaylorSeries.mul!(pn2y[i], Y[i], _4V_m_3Y[i], ord)
                TaylorSeries.mul!(pn2z[i], Z[i], _4W_m_3Z[i], ord)
                TaylorSeries.mul!(UU[i], ui[i], dq[1], ord)
                TaylorSeries.mul!(VV[i], vi[i], dq[2], ord)
                TaylorSeries.mul!(WW[i], wi[i], dq[3], ord)
                TaylorSeries.add!(tmp1992[i], UU[i], VV[i], ord)
                TaylorSeries.add!(vi_dot_vj[i], tmp1992[i], WW[i], ord)
                TaylorSeries.pow!(tmp1995[i], X[i], 2, ord)
                TaylorSeries.pow!(tmp1997[i], Y[i], 2, ord)
                TaylorSeries.add!(tmp1998[i], tmp1995[i], tmp1997[i], ord)
                TaylorSeries.pow!(tmp2000[i], Z[i], 2, ord)
                TaylorSeries.add!(r_p2[i], tmp1998[i], tmp2000[i], ord)
                TaylorSeries.sqrt!(r_p1d2[i], r_p2[i], ord)
                TaylorSeries.pow!(r_p3d2[i], r_p2[i], 1.5, ord)
                TaylorSeries.pow!(r_p7d2[i], r_p2[i], 3.5, ord)
                TaylorSeries.div!(newtonianCoeff[i], μ[i], r_p3d2[i], ord)
                TaylorSeries.add!(tmp2008[i], pn2x[i], pn2y[i], ord)
                TaylorSeries.add!(tmp2009[i], tmp2008[i], pn2z[i], ord)
                TaylorSeries.mul!(pn2[i], newtonianCoeff[i], tmp2009[i], ord)
                TaylorSeries.mul!(newton_acc_X[i], X[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Y[i], Y[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Z[i], Z[i], newtonianCoeff[i], ord)
                TaylorSeries.div!(newtonian1b_Potential[i], μ[i], r_p1d2[i], ord)
                TaylorSeries.mul!(pn3[i], 3.5, newtonian1b_Potential[i], ord)
                TaylorSeries.mul!(U_t_pn2[i], pn2[i], U[i], ord)
                TaylorSeries.mul!(V_t_pn2[i], pn2[i], V[i], ord)
                TaylorSeries.mul!(W_t_pn2[i], pn2[i], W[i], ord)
                if UJ_interaction[i]
                    TaylorSeries.subst!(tmp2020[i], X[i], ord)
                    TaylorSeries.mul!(t31[i], tmp2020[i], M_[1, 3, i], ord)
                    TaylorSeries.subst!(tmp2022[i], Y[i], ord)
                    TaylorSeries.mul!(t32[i], tmp2022[i], M_[2, 3, i], ord)
                    TaylorSeries.subst!(tmp2024[i], Z[i], ord)
                    TaylorSeries.mul!(t33[i], tmp2024[i], M_[3, 3, i], ord)
                    TaylorSeries.add!(tmp2026[i], t31[i], t32[i], ord)
                    TaylorSeries.add!(r_sin_ϕ[i], tmp2026[i], t33[i], ord)
                    TaylorSeries.div!(sin_ϕ[i], r_sin_ϕ[i], r_p1d2[i], ord)
                    TaylorSeries.asin!(ϕ[i], sin_ϕ[i], tmp2183[i], ord)
                    TaylorSeries.sincos!(tmp2184[i], cos_ϕ[i], ϕ[i], ord)
                    TaylorSeries.pow!(sin2_ϕ[i], sin_ϕ[i], 2, ord)
                    TaylorSeries.pow!(sin3_ϕ[i], sin_ϕ[i], 3, ord)
                    TaylorSeries.mul!(tmp2036[i], 1.5, sin2_ϕ[i], ord)
                    TaylorSeries.subst!(P_2_sin_ϕ[i], tmp2036[i], 0.5, ord)
                    TaylorSeries.mul!(∂P_2_sin_ϕ[i], 3, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp2042[i], -1.5, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp2044[i], 2.5, sin3_ϕ[i], ord)
                    TaylorSeries.add!(P_3_sin_ϕ[i], tmp2042[i], tmp2044[i], ord)
                    TaylorSeries.mul!(tmp2048[i], 7.5, sin2_ϕ[i], ord)
                    TaylorSeries.add!(∂P_3_sin_ϕ[i], -1.5, tmp2048[i], ord)
                    TaylorSeries.pow!(tmp2051[i], r_p2[i], 2, ord)
                    TaylorSeries.div!(tmp2052[i], Λ2[i], tmp2051[i], ord)
                    TaylorSeries.subst!(Λ2j_div_r4[i], tmp2052[i], ord)
                    TaylorSeries.pow!(tmp2055[i], r_p1d2[i], 5, ord)
                    TaylorSeries.div!(tmp2056[i], Λ3[i], tmp2055[i], ord)
                    TaylorSeries.subst!(Λ3j_div_r5[i], tmp2056[i], ord)
                    TaylorSeries.subst!(tmp2058[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_2[i], tmp2058[i], ∂P_2_sin_ϕ[i], ord)
                    TaylorSeries.subst!(tmp2060[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_3[i], tmp2060[i], ∂P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp2063[i], Λ2j_div_r4[i], 3, ord)
                    TaylorSeries.mul!(F_J2_ξ[i], tmp2063[i], P_2_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J2_ζ[i], Λ2j_div_r4[i], m_c_ϕ_∂P_2[i], ord)
                    TaylorSeries.mul!(tmp2067[i], Λ3j_div_r5[i], 4, ord)
                    TaylorSeries.mul!(F_J3_ξ[i], tmp2067[i], P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J3_ζ[i], Λ3j_div_r5[i], m_c_ϕ_∂P_3[i], ord)
                    TaylorSeries.identity!(F_J_ξ[i], F_J2_ξ[i], ord)
                    TaylorSeries.identity!(F_J_ζ[i], F_J2_ζ[i], ord)
                    TaylorSeries.subst!(tmp2070[i], X[i], ord)
                    TaylorSeries.div!(ξx[i], tmp2070[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp2072[i], Y[i], ord)
                    TaylorSeries.div!(ξy[i], tmp2072[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp2074[i], Z[i], ord)
                    TaylorSeries.div!(ξz[i], tmp2074[i], r_p1d2[i], ord)
                    TaylorSeries.mul!(ηx1[i], M_[2, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηy1[i], M_[3, 3, i], ξx[i], ord)
                    TaylorSeries.mul!(ηz1[i], M_[1, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηx2[i], M_[3, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηy2[i], M_[1, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηz2[i], M_[2, 3, i], ξx[i], ord)
                    TaylorSeries.subst!(ηx[i], ηx1[i], ηx2[i], ord)
                    TaylorSeries.subst!(ηy[i], ηy1[i], ηy2[i], ord)
                    TaylorSeries.subst!(ηz[i], ηz1[i], ηz2[i], ord)
                    TaylorSeries.mul!(ζx1[i], ξy[i], ηz[i], ord)
                    TaylorSeries.mul!(ζy1[i], ξz[i], ηx[i], ord)
                    TaylorSeries.mul!(ζz1[i], ξx[i], ηy[i], ord)
                    TaylorSeries.mul!(ζx2[i], ξz[i], ηy[i], ord)
                    TaylorSeries.mul!(ζy2[i], ξx[i], ηz[i], ord)
                    TaylorSeries.mul!(ζz2[i], ξy[i], ηx[i], ord)
                    TaylorSeries.subst!(ζx[i], ζx1[i], ζx2[i], ord)
                    TaylorSeries.subst!(ζy[i], ζy1[i], ζy2[i], ord)
                    TaylorSeries.subst!(ζz[i], ζz1[i], ζz2[i], ord)
                    TaylorSeries.mul!(F_J2_x1[i], F_J_ξ[i], ξx[i], ord)
                    TaylorSeries.mul!(F_J2_y1[i], F_J_ξ[i], ξy[i], ord)
                    TaylorSeries.mul!(F_J2_z1[i], F_J_ξ[i], ξz[i], ord)
                    TaylorSeries.mul!(F_J2_x2[i], F_J_ζ[i], ζx[i], ord)
                    TaylorSeries.mul!(F_J2_y2[i], F_J_ζ[i], ζy[i], ord)
                    TaylorSeries.mul!(F_J2_z2[i], F_J_ζ[i], ζz[i], ord)
                    TaylorSeries.add!(F_J2_x[i], F_J2_x1[i], F_J2_x2[i], ord)
                    TaylorSeries.add!(F_J2_y[i], F_J2_y1[i], F_J2_y2[i], ord)
                    TaylorSeries.add!(F_J2_z[i], F_J2_z1[i], F_J2_z2[i], ord)
                end
                TaylorSeries.pow!(tmp2104[i], ui[i], 2, ord)
                TaylorSeries.pow!(tmp2106[i], vi[i], 2, ord)
                TaylorSeries.add!(tmp2107[i], tmp2104[i], tmp2106[i], ord)
                TaylorSeries.pow!(tmp2109[i], wi[i], 2, ord)
                TaylorSeries.add!(v2[i], tmp2107[i], tmp2109[i], ord)
            end
        TaylorSeries.pow!(tmp2112, q[4], 2, ord)
        TaylorSeries.pow!(tmp2114, q[5], 2, ord)
        TaylorSeries.add!(tmp2115, tmp2112, tmp2114, ord)
        TaylorSeries.pow!(tmp2117, q[6], 2, ord)
        TaylorSeries.add!(v2[N], tmp2115, tmp2117, ord)
        for i = 1:Nm1
            TaylorSeries.add!(temp_004[i], newtonian1b_Potential[i], newtonianNb_Potential[N], ord)
            TaylorSeries.identity!(newtonianNb_Potential[N], temp_004[i], ord)
            if UJ_interaction[i]
                TaylorSeries.mul!(tmp2120[i], μ[i], F_J2_x[i], ord)
                TaylorSeries.subst!(temp_accX_i[i], accX, tmp2120[i], ord)
                TaylorSeries.identity!(accX, temp_accX_i[i], ord)
                TaylorSeries.mul!(tmp2122[i], μ[i], F_J2_y[i], ord)
                TaylorSeries.subst!(temp_accY_i[i], accY, tmp2122[i], ord)
                TaylorSeries.identity!(accY, temp_accY_i[i], ord)
                TaylorSeries.mul!(tmp2124[i], μ[i], F_J2_z[i], ord)
                TaylorSeries.subst!(temp_accZ_i[i], accZ, tmp2124[i], ord)
                TaylorSeries.identity!(accZ, temp_accZ_i[i], ord)
            end
        end
        TaylorSeries.mul!(_4ϕj[N], 4, newtonianNb_Potential[N], ord)
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:447 =# Threads.@threads for i = 1:10
                TaylorSeries.add!(ϕi_plus_4ϕj[i], newtonianNb_Potential_t[i], _4ϕj[N], ord)
                TaylorSeries.mul!(tmp2130[i], 2, v2[i], ord)
                TaylorSeries.mul!(tmp2132[i], 4, vi_dot_vj[i], ord)
                TaylorSeries.subst!(tmp2133[i], tmp2130[i], tmp2132[i], ord)
                TaylorSeries.add!(sj2_plus_2si2_minus_4vivj[i], tmp2133[i], v2[N], ord)
                TaylorSeries.subst!(ϕs_and_vs[i], sj2_plus_2si2_minus_4vivj[i], ϕi_plus_4ϕj[i], ord)
                TaylorSeries.mul!(Xij_t_Ui[i], X[i], ui[i], ord)
                TaylorSeries.mul!(Yij_t_Vi[i], Y[i], vi[i], ord)
                TaylorSeries.mul!(Zij_t_Wi[i], Z[i], wi[i], ord)
                TaylorSeries.add!(tmp2139[i], Xij_t_Ui[i], Yij_t_Vi[i], ord)
                TaylorSeries.add!(Rij_dot_Vi[i], tmp2139[i], Zij_t_Wi[i], ord)
                TaylorSeries.pow!(tmp2142[i], Rij_dot_Vi[i], 2, ord)
                TaylorSeries.div!(pn1t7[i], tmp2142[i], r_p2[i], ord)
                TaylorSeries.mul!(tmp2145[i], 1.5, pn1t7[i], ord)
                TaylorSeries.subst!(pn1t2_7[i], ϕs_and_vs[i], tmp2145[i], ord)
                TaylorSeries.add!(pn1t1_7[i], c_p2, pn1t2_7[i], ord)
                TaylorSeries.mul!(pNX_t_X[i], acceph_t[3i - 2], X[i], ord)
                TaylorSeries.mul!(pNY_t_Y[i], acceph_t[3i - 1], Y[i], ord)
                TaylorSeries.mul!(pNZ_t_Z[i], acceph_t[3i], Z[i], ord)
                TaylorSeries.add!(tmp2152[i], pNX_t_X[i], pNY_t_Y[i], ord)
                TaylorSeries.add!(tmp2153[i], tmp2152[i], pNZ_t_Z[i], ord)
                TaylorSeries.mul!(tmp2154[i], 0.5, tmp2153[i], ord)
                TaylorSeries.add!(pn1[i], pn1t1_7[i], tmp2154[i], ord)
                TaylorSeries.mul!(X_t_pn1[i], newton_acc_X[i], pn1[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], newton_acc_Y[i], pn1[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], newton_acc_Z[i], pn1[i], ord)
                TaylorSeries.mul!(pNX_t_pn3[i], acceph_t[3i - 2], pn3[i], ord)
                TaylorSeries.mul!(pNY_t_pn3[i], acceph_t[3i - 1], pn3[i], ord)
                TaylorSeries.mul!(pNZ_t_pn3[i], acceph_t[3i], pn3[i], ord)
            end
        for i = 1:10
            TaylorSeries.add!(tmp2162[i], U_t_pn2[i], pNX_t_pn3[i], ord)
            TaylorSeries.add!(termpnx[i], X_t_pn1[i], tmp2162[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.add!(tmp2165[i], V_t_pn2[i], pNY_t_pn3[i], ord)
            TaylorSeries.add!(termpny[i], Y_t_pn1[i], tmp2165[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.add!(tmp2168[i], W_t_pn2[i], pNZ_t_pn3[i], ord)
            TaylorSeries.add!(termpnz[i], Z_t_pn1[i], tmp2168[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        #= C:\Users\luisi\.julia\dev\NEOs.jl\ex.jl:500 =# Threads.@threads for i = 11:Nm1
                TaylorSeries.mul!(X_t_pn1[i], c_p2, newton_acc_X[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], c_p2, newton_acc_Y[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], c_p2, newton_acc_Z[i], ord)
            end
        for i = 11:Nm1
            TaylorSeries.identity!(termpnx[i], X_t_pn1[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.identity!(termpny[i], Y_t_pn1[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.identity!(termpnz[i], Z_t_pn1[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        TaylorSeries.mul!(postNewtonX, pntempX, c_m2, ord)
        TaylorSeries.mul!(postNewtonY, pntempY, c_m2, ord)
        TaylorSeries.mul!(postNewtonZ, pntempZ, c_m2, ord)
        TaylorSeries.add!(dq[4], postNewtonX, accX, ord)
        TaylorSeries.add!(dq[5], postNewtonY, accY, ord)
        TaylorSeries.add!(dq[6], postNewtonZ, accZ, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end